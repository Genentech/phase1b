<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="betadiff" timestamp="2023-10-19T13:28:34Z" hostname="20f084343976" tests="7" skipped="0" failures="0" errors="7" time="0.644">
    <testcase time="0.257" classname="betadiff" name="Monte_Carlo_result_converges_to_Go_probability">
      <error type="error" message="Error in `eval(code, test_env)`: object 'parY' not found ('test-betadiff.R:5:3')">Error in `eval(code, test_env)`: object 'parY' not found
Backtrace:
    x
 1. \-stats::integrate(...) at test-betadiff.R:5:2
 2.   \-stats (local) `&lt;fn&gt;`(`&lt;dbl&gt;`)
 3.     \-phase1b (local) f(x, ...)
 4.       \-checkmate::assert_numeric(parY, finite = TRUE)</error>
    </testcase>
    <testcase time="0.123" classname="betadiff" name="Monte_Carlo_result_converges_to_Stop_probability">
      <error type="error" message="Error in `eval(code, test_env)`: object 'parY' not found ('test-betadiff.R:18:3')">Error in `eval(code, test_env)`: object 'parY' not found
Backtrace:
    x
 1. \-stats::integrate(...) at test-betadiff.R:18:2
 2.   \-stats (local) `&lt;fn&gt;`(`&lt;dbl&gt;`)
 3.     \-phase1b (local) f(x, ...)
 4.       \-checkmate::assert_numeric(parY, finite = TRUE)</error>
    </testcase>
    <testcase time="0.0799999999999998" classname="betadiff" name="pbetadiff_gives_the_correct_number_result">
      <error type="error" message="Error in `eval(code, test_env)`: object 'parY' not found ('test-betadiff.R:31:3')">Error in `eval(code, test_env)`: object 'parY' not found
Backtrace:
    x
 1. \-phase1b::pbetadiff(q = 0.4, parY = parY, parX = parX) at test-betadiff.R:31:2
 2.   \-stats::integrate(...)
 3.     \-stats (local) `&lt;fn&gt;`(`&lt;dbl&gt;`)
 4.       \-phase1b (local) f(x, ...)
 5.         \-checkmate::assert_numeric(parY, finite = TRUE)</error>
    </testcase>
    <testcase time="0.044" classname="betadiff" name="The_pbetadiff_has_incrementally_higher_cdf_with_increase_x_support">
      <error type="error" message="Error in `eval(code, test_env)`: object 'parY' not found ('test-betadiff.R:40:3')">Error in `eval(code, test_env)`: object 'parY' not found
Backtrace:
    x
 1. \-phase1b::pbetadiff(q = 0.4, parY = parY, parX = parX) at test-betadiff.R:40:2
 2.   \-stats::integrate(...)
 3.     \-stats (local) `&lt;fn&gt;`(`&lt;dbl&gt;`)
 4.       \-phase1b (local) f(x, ...)
 5.         \-checkmate::assert_numeric(parY, finite = TRUE)</error>
    </testcase>
    <testcase time="0.048" classname="betadiff" name="The_entire_Z_domain_from_1_to_1_gives_a_pbetadiff_of_1">
      <error type="error" message="Error in `eval(code, test_env)`: object 'parY' not found ('test-betadiff.R:54:3')">Error in `eval(code, test_env)`: object 'parY' not found
Backtrace:
    x
 1. \-phase1b::pbetadiff(1, parY, parX) at test-betadiff.R:54:2
 2.   \-stats::integrate(...)
 3.     \-stats (local) `&lt;fn&gt;`(`&lt;dbl&gt;`)
 4.       \-phase1b (local) f(x, ...)
 5.         \-checkmate::assert_numeric(parY, finite = TRUE)</error>
    </testcase>
    <testcase time="0.0449999999999999" classname="betadiff" name="qbetadiff_gives_the_correct_number_result">
      <error type="error" message="Error in `eval(code, test_env)`: object 'parY' not found ('test-betadiff.R:60:3')">Error in `eval(code, test_env)`: object 'parY' not found
Backtrace:
    x
 1. \-phase1b::qbetadiff(p = 0.2, parY = parY, parX = parX) at test-betadiff.R:60:2
 2.   \-stats::uniroot(f = target, interval = c(-1 + eps, 1 - eps))
 3.     \-phase1b (local) f(lower, ...)
 4.       \-phase1b::pbetadiff(q = q, parY = parY, parX = parX)
 5.         \-stats::integrate(...)
 6.           \-stats (local) `&lt;fn&gt;`(`&lt;dbl&gt;`)
 7.             \-phase1b (local) f(x, ...)
 8.               \-checkmate::assert_numeric(parY, finite = TRUE)</error>
    </testcase>
    <testcase time="0.0470000000000002" classname="betadiff" name="The_result_of_qbetadiff_corresponds_to_the_result_of_pbetadiff_">
      <error type="error" message="Error in `eval(code, test_env)`: object 'parY' not found ('test-betadiff.R:69:3')">Error in `eval(code, test_env)`: object 'parY' not found
Backtrace:
    x
 1. \-phase1b::qbetadiff(p = 0.2, parY = parY, parX = parX) at test-betadiff.R:69:2
 2.   \-stats::uniroot(f = target, interval = c(-1 + eps, 1 - eps))
 3.     \-phase1b (local) f(lower, ...)
 4.       \-phase1b::pbetadiff(q = q, parY = parY, parX = parX)
 5.         \-stats::integrate(...)
 6.           \-stats (local) `&lt;fn&gt;`(`&lt;dbl&gt;`)
 7.             \-phase1b (local) f(x, ...)
 8.               \-checkmate::assert_numeric(parY, finite = TRUE)</error>
    </testcase>
  </testsuite>
  <testsuite name="dbetabinom" timestamp="2023-10-19T13:28:34Z" hostname="20f084343976" tests="13" skipped="0" failures="0" errors="0" time="0.386">
    <testcase time="0.0579999999999998" classname="dbetabinom" name="dbetabinom_for_every_x_support_is_between_0_and_1"/>
    <testcase time="0.0170000000000001" classname="dbetabinom" name="sum_of_the_dbetabinom_values_over_the_whole_support_for_x_is_1"/>
    <testcase time="0.0169999999999999" classname="dbetabinom" name="dbetabinom_gives_correct_numeric_result"/>
    <testcase time="0.0110000000000001" classname="dbetabinom" name="dbetabinomMix_gives_a_result_between_0_and_1"/>
    <testcase time="0.016" classname="dbetabinom" name="dbetabinomMix_gives_the_correct_numeric_result"/>
    <testcase time="0.0169999999999999" classname="dbetabinom" name="Sum_of_dbetabinomMix_for_all_x_is_1"/>
    <testcase time="0.0149999999999999" classname="dbetabinom" name="dbetabinomMix_gives_the_correct_numeric_result"/>
    <testcase time="0.0190000000000001" classname="dbetabinom" name="The_pbetaMix_has_incrementally_higher_cdf_with_increase_x_support"/>
    <testcase time="0.0169999999999999" classname="dbetabinom" name="pbetaMix_gives_the_correct_number_result"/>
    <testcase time="0.0150000000000001" classname="dbetabinom" name="The_complement_of_pbetaMix_can_be_derived_with_a_different_lower.tail_flag"/>
    <testcase time="0.018" classname="dbetabinom" name="qbetaMix_gives_the_correct_number_result"/>
    <testcase time="0.0169999999999999" classname="dbetabinom" name="qbetaMix_gives_the_correct_number_result"/>
    <testcase time="0.149" classname="dbetabinom" name="qbetaMix_gives_a_number_result"/>
  </testsuite>
  <testsuite name="helpers" timestamp="2023-10-19T13:28:35Z" hostname="20f084343976" tests="4" skipped="0" failures="0" errors="0" time="0.067">
    <testcase time="0.036" classname="helpers" name="logit_works_as_expected"/>
    <testcase time="0.0069999999999999" classname="helpers" name="logit_works_as_expected"/>
    <testcase time="0.00700000000000012" classname="helpers" name="logit_works_as_expected"/>
    <testcase time="0.0169999999999999" classname="helpers" name="logit_gives_expected_value_for_example_value_0.2"/>
  </testsuite>
  <testsuite name="ocPostprob" timestamp="2023-10-19T13:28:35Z" hostname="20f084343976" tests="20" skipped="0" failures="0" errors="0" time="94.293">
    <testcase time="0.02" classname="ocPostprob" name="h_get_distance_gives_an_error_with_one_element_numeric"/>
    <testcase time="0.012" classname="ocPostprob" name="h_get_distance_gives_results_within_range"/>
    <testcase time="0.028" classname="ocPostprob" name="h_get_distance_gives_an_error_with_non_sorted_argument"/>
    <testcase time="0.0149999999999999" classname="ocPostprob" name="h_get_looks_gives_correct_results_if_input_is_identical"/>
    <testcase time="0.0150000000000001" classname="ocPostprob" name="h_get_looks_gives_correct_results_if_input_is_identical"/>
    <testcase time="0.024" classname="ocPostprob" name="get_decision_will_give_GO_decision_in_favourable_conditions"/>
    <testcase time="0.02" classname="ocPostprob" name="the_probability_results_of_get_oc_are_less_than_1"/>
    <testcase time="0.014" classname="ocPostprob" name="the_ExpectedN_is_within_range_based_on_vector_of_looks"/>
    <testcase time="7.96" classname="ocPostprob" name="the_sum_of_Eff_Fut_Gray_zone_probabiliy_is_1"/>
    <testcase time="0.00699999999999967" classname="ocPostprob" name="the_sum_of_Eff_Fut_Gray_zone_probabiliy_is_1"/>
    <testcase time="14.358" classname="ocPostprob" name="the_PrFutility_increases_with_increase_futility_looks"/>
    <testcase time="11.097" classname="ocPostprob" name="the_PrFutility_increases_with_increase_futility_looks"/>
    <testcase time="0.0069999999999979" classname="ocPostprob" name="the_PrFutility_increases_with_increase_futility_looks"/>
    <testcase time="7.809" classname="ocPostprob" name="the_PrEfficacy_increases_with_increase_Efficacy_looks"/>
    <testcase time="14.076" classname="ocPostprob" name="the_PrEfficacy_increases_with_increase_Efficacy_looks"/>
    <testcase time="0.00600000000000023" classname="ocPostprob" name="the_PrEfficacy_increases_with_increase_Efficacy_looks"/>
    <testcase time="38.806" classname="ocPostprob" name="ocPostprob_gives_results_that_are_within_range_to_stats_pbinom"/>
    <testcase time="0.00600000000000023" classname="ocPostprob" name="ocPostprob_gives_results_that_are_within_range_to_stats_pbinom"/>
    <testcase time="0.007000000000005" classname="ocPostprob" name="ocPostprob_gives_results_that_are_within_range_to_stats_pbinom"/>
    <testcase time="0.00600000000000023" classname="ocPostprob" name="ocPostprob_gives_results_that_are_within_range_to_stats_pbinom"/>
  </testsuite>
  <testsuite name="postprob" timestamp="2023-10-19T13:30:09Z" hostname="20f084343976" tests="5" skipped="0" failures="0" errors="2" time="0.121">
    <testcase time="0.0210000000000008" classname="postprob" name="postprobBeta_gives_the_correct_number_result">
      <error type="error" message="Error in `postprobBeta(x = 16, n = 23, p = 0.6, a = 0.6, b = 0.4)`: could not find function &quot;postprobBeta&quot; ('test-postprob.R:4:3')">Error in `postprobBeta(x = 16, n = 23, p = 0.6, a = 0.6, b = 0.4)`: could not find function "postprobBeta"</error>
    </testcase>
    <testcase time="0.0330000000000013" classname="postprob" name="postprobBeta_gives_incrementally_higher_values_with_increase_x_support">
      <error type="error" message="Error in `postprobBeta(x = 10, n = 23, p = 0.6, a = 0.6, b = 0.4)`: could not find function &quot;postprobBeta&quot; ('test-postprob.R:9:3')">Error in `postprobBeta(x = 10, n = 23, p = 0.6, a = 0.6, b = 0.4)`: could not find function "postprobBeta"</error>
    </testcase>
    <testcase time="0.0360000000000014" classname="postprob" name="postprob_gives_the_correct_number_result"/>
    <testcase time="0.0159999999999911" classname="postprob" name="postprob_gives_the_correct_number_result"/>
    <testcase time="0.0150000000000006" classname="postprob" name="postprob_gives_incrementally_higher_values_with_increased_x"/>
  </testsuite>
</testsuites>
