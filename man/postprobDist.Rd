% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/postprobDist.R
\name{postprobDist}
\alias{postprobDist}
\title{Compute the posterior probability with beta prior on SOC}
\usage{
postprobDist(
  x,
  n,
  xS = 0,
  nS = 0,
  delta = 0,
  relativeDelta = FALSE,
  parE = c(1, 1),
  weights,
  parS = c(1, 1),
  weightsS
)
}
\arguments{
\item{x}{(\code{vector}):\cr vector of success counts in the treatment group. Vector of minimum length of 1.}

\item{n}{(\code{number}):\cr number of patients in the treatment group.}

\item{xS}{(\code{vector}):\cr vector of success counts in the SOC group (default: 0). Vector of minimum length of 1.}

\item{nS}{(\code{number}):\cr number of patients in the SOC group (default: 0)}

\item{delta}{(\code{number}):\cr margin by which the response rate in the treatment group should
be better than in the SOC group (default: 0). Must be >= \code{0}.  see @note.}

\item{relativeDelta}{(\code{flag}):\cr If \code{TRUE}, then a \code{relativeDelta} is used. Represents that a minimum
response rate in magnitude of \code{delta} of the SOC non-responding patients. see @note.}

\item{parE}{(\code{matrix}):\cr the beta parameters matrix, with K rows and 2 columns,
corresponding to the beta parameters of the K components. default is a
uniform prior.}

\item{weights}{(\code{matrix}):\cr the mixture weights of the beta mixture prior. Default are
uniform weights across mixture components.}

\item{parS}{(\code{matrix}):\cr beta parameters for the SOC group (default: uniform)}

\item{weightsS}{(\code{matrix}):\cr weights for the SOC group (default: uniform)}

\item{epsilon}{(\code{number}):\cr the smallest non-negative floating number to represent the lower bound for
the interval of integration.}
}
\value{
The posterior probability
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

Using the approach by Thall and Simon (Biometrics, 1994), evaluate the
posterior probability of having \code{Pr(P_E > P_S + delta | data)} (but see below
for relative delta margin). Both for the new treatment \code{E} as well as for the
Standard of Care (SOC): \code{S} data might be available. However the default assumption is that no data is
available for the \code{SOC}, corresponding to the single arm trial situation
where we only rely on incoming data from the Experimental arm. In the case

Using the approach by Thall and Simon (Biometrics, 1994), we evaluate the
posterior probability of having a desired improvement of treatment effect to
standard of care, SOC. When there is no standard of care,

The choice of prior will consider the following :

For single arm trial, an informative prior on the SOC proportion is
useful.
Otherwise, a uniform prior is the useful default for the treatment proportion. see @note.

The calculation of \code{delta} :

The desired improvement is denoted as \code{delta}. There are two options in calculating \code{delta}.
The absolute case when \code{relativeDelta = FALSE} and relative as when \code{relativeDelta = TRUE}.
The posterior in question can be expressed as \code{Pr(P_E > P_S + delta | data)}.
\enumerate{
\item The absolute case is when we define an absolute delta, greater than \code{P_S},
the response rate of the \code{SOC} group such that
the posterior is \code{Pr(P_E > P_S + delta | data)}.
\item In the relative case, we suppose that the treatment group's
response rate is assumed to be greater than \code{P_S + (1-P_S)*delta} such that
the posterior is \code{Pr(P_E > P_S + (1 - P_S) * delta | data)}.
}
}
\note{
on beta Priors

Beta mixture prior can be specified for the treatment \code{parE}
and \code{weights} parameters) and control proportion \code{parS} and
\code{weightsS} parameters), see \code{postprob} for details. Note
that being able to specify a beta mixture prior also on the control
treatment is e.g. important for the futility decision making (see the
\code{oc2} code).

Beta mixture prior can be specified for the treatment in \code{parE}
and \code{weights} parameters) and SOC in \code{parS} and
\code{weightsS} parameters), see \verb{[postprob()]} for details. Note
that being able to specify a beta mixture prior also on the control
treatment is important for the futility decision making (see the
\verb{[oc2()]} code).
}
\examples{
# example similar to Lee and Liu:
postprobDist(x = 16, n = 23, parE = c(0.6, 0.4), parS = c(0.6, 0.4), relativeDelta = TRUE)

# when relativeDelta is used
postprobDist(x = 16, n = 23, parE = c(0.6, 0.4), parS = c(0.6, 0.4), delta = 0.1, relativeDelta = TRUE)

## these two should give the same result:
postprobDist(
  x = 27, n = 34,
  xS = 0, nS = 0,
  delta = 0.15,
  parE = c(1, 1),
  parS = c(50007530, 49924090)
)

postprob(x = 27, n = 34, p = 0.65, parE = c(1, 1))
# ok, almost

# try out mixtures:
# play around with the beta parameters and weights to
# get a feeling.
# Note that very extreme beta parameters do no longer increase
# the return value, because then that mixture component is too
# unlikely a posteriori
postprobDist(
  x = 16, n = 23,
  parE =
    rbind(
      c(0.6, 0.4),
      c(10, 20)
    ),
  parS =
    rbind(
      c(0.6, 0.4),
      c(10, 10)
    ),
  weightsS = c(1, 3)
)
# try these examples

# 1. Experimental arm only, uniform prior in both E and S arms
x <- 16
xS <- 0
nS <- 0
n <- 23
parE <- t(c(0.6, 0.4))
parS <- t(c(0.6, 0.4))
weights <- rep(1, nrow(parE))
weightsS <- rep(1, nrow(parS))
delta <- 0
relativeDelta <- FALSE


postprobDist(
  x = 16,
  n = 23,
  xS = 0,
  nS = 0,
  delta = 0,
  relativeDelta = FALSE,
  parE = c(1, 1),
  weights,
  parS = c(1, 1),
  weightsS
)
# 2. Experimental arm and SOC
x <- 16
xS <- 0
nS <- 0
n <- 23
parE <- t(c(0.6, 0.4))
parS <- t(c(0.6, 0.4))
weights <- rep(1, nrow(parE))
weightsS <- rep(1, nrow(parS))
delta <- 0
relativeDelta <- TRUE

postprobDist(
  x = 16,
  n = 20,
  xS = 10,
  nS = 20,
  delta = 0,
  relativeDelta = FALSE,
  parE = c(1, 1),
  weights,
  parS = c(1, 1),
  weightsS
)
# 3. Experimental arm only, with beta mix prior for S arms, uniform for E
postprobDist(
  x = 16,
  n = 20,
  xS = 10,
  nS = 20,
  delta = 0,
  relativeDelta = FALSE,
  parE = c(1, 1),
  weights,
  parS = c(4, 5),
  weightsS
)
}
