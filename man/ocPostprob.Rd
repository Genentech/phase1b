% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ocPostprob.R
\name{ocPostprob}
\alias{ocPostprob}
\title{Operating Characteristics for Posterior Probability method}
\usage{
ocPostprob(
  nnE,
  truep,
  p0,
  p1,
  tL,
  tU,
  parE = c(1, 1),
  sim = 1000,
  wiggle = FALSE,
  randomdist = NULL,
  nnF = nnE
)
}
\arguments{
\item{nnE}{(\code{numeric}):\cr Sample size or sizes where study can be stopped for efficacy decision. If different for futility decision,
specify in \code{nnF}.}

\item{truep}{(\code{number}):\cr assumed true response rate or true rate (scenario).}

\item{p0}{(\code{number}):\cr lower efficacy threshold of response rate.}

\item{p1}{(\code{number}):\cr upper efficacy threshold of response rate.}

\item{tL}{(\code{number}):\cr posterior probability threshold for being below \code{p0}.}

\item{tU}{(\code{number}):\cr posterior probability threshold for being above \code{p1}.}

\item{parE}{(\code{numeric}):\cr Alpha and beta parameters for the prior on the treatment proportion.
Default set at alpha = 1, beta = 1, or uniform prior.}

\item{sim}{(\code{number}):\cr number of simulations}

\item{wiggle}{(\code{logical}):\cr generate random look locations (not default)
if \code{TRUE}, specify \code{dist} (see @details)}

\item{randomdist}{(\code{logical}):\cr Random distance added to looks. if \code{NULL}, and \code{wiggle = TRUE}, function will
generate and add a random distance within range of the closest looks.}

\item{nnF}{(\code{numeric}):\cr Sample size or sizes where study can be stopped for futility decision if different from efficacy decision.}
}
\value{
A list with the following elements:
\itemize{
\item \code{oc}: matrix with operating characteristics (see Details section)
\item \code{nn}: vector of look locations that was supplied
\item \code{nnE}: vector of efficacy look locations
\item \code{nnF}: vector of futility look locations # TODO
\item \code{params}: multiple parameters# TODOs
}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

Calculate operating characteristics for posterior probability method.

It is assumed that the true response rate is \code{truep}.
The trial is stopped for efficacy if the posterior probability to be
above \code{p1} is larger than \code{tU}, and stopped for futility if the posterior
probability to be below \code{p0} is larger than \code{tL}:

Stop criteria for Efficacy :

\code{P_E(p > p1) > tU}

Stop criteria for Futility :

\code{P_E(p < p0) > tL}

Resulting Operating Characteristics include the following:
\itemize{
\item \code{ExpectedN}: expected number of patients in the trials
\item \code{PrStopEarly}: probability to stop the trial early (before reaching the
maximum sample size)
\item \code{PrEarlyEff}: probability of Early Go decision
\item \code{PrEarlyFut}: probability to decide for Futility early
\item \code{PrEfficacy}: probability of Go decision
\item \code{PrFutility}: Probability of Stop decision
\item \code{PrGrayZone}: probability between Go and Stop ,"Evaluate" or Gray decision zone
}
}
\details{
\subsection{About arguments}{

\code{ExpectedN} is an average of the simulated sample sizes.
If \code{wiggle = TRUE}, one can specify \code{dist}, though the algorithm will generate it if \code{dist = NULL}
If \code{nnF = NULL}, no Futility or decision to Stop will be analysed. Note that \code{nnF = c(0)} is equivalent.
As default, \code{nnF} is set to the identical looks of \code{nnE}, and if \code{wiggle = TRUE}, all looks are the same, e.g.
\code{nnE = nnF} when wiggle and distance is applied.
}
}
\examples{
# Three looks--
# design details (example)
# multiple looks @ 10, 20, 30 patients
# True response rate of the treatment group=40\%
# Look for futility: P(response rate < 20\% )> 60\%
# Look for efficacy: P(response rate > 30\% )> 80\%
# prior of treatment arm parE= Beta(1,1)
res <- ocPostprob(
  nnE = c(10, 20, 30), truep = 0.40, p0 = 0.20, p1 = 0.30, tL = 0.60, tU = 0.80, parE = c(1, 1),
  sim = 1000, wiggle = TRUE, randomdist = NULL, nnF = c(10, 20, 30)
)

res$oc

# Specify distance
res <- ocPostprob(
  nnE = c(10, 20, 30), truep = 0.40, p0 = 0.20, p1 = 0.30, tL = 0.60, tU = 0.80, parE = c(1, 1),
  sim = 1000, wiggle = TRUE, randomdist = c(-1, 3), nnF = c(10, 20, 30)
)

res$oc

# No Wiggle
res <- ocPostprob(
  nnE = c(10, 20, 30), truep = 0.40, p0 = 0.20, p1 = 0.30, tL = 0.60, tU = 0.80, parE = c(1, 1),
  sim = 1000, wiggle = FALSE, randomdist = NULL, nnF = c(10, 20, 30)
)

res$oc

# Only one efficacy + many futility
res <- ocPostprob(
  nnE = c(10), truep = 0.40, p0 = 0.20, p1 = 0.30, tL = 0.60, tU = 0.80, parE = c(1, 1),
  sim = 1000, wiggle = FALSE, randomdist = NULL, nnF = c(10)
)

res$oc

# Only one futility
res <- ocPostprob(
  nnE = c(10, 20, 30), truep = 0.40, p0 = 0.20, p1 = 0.30, tL = 0.60, tU = 0.80, parE = c(1, 1),
  sim = 1000, wiggle = FALSE, randomdist = NULL, nnF = c(10)
)

res$oc
}
