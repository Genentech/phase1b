[{"path":[]},{"path":"https://genentech.github.io/phase1b/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://genentech.github.io/phase1b/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others‚Äô private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://genentech.github.io/phase1b/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://genentech.github.io/phase1b/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://genentech.github.io/phase1b/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://genentech.github.io/phase1b/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://genentech.github.io/phase1b/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://genentech.github.io/phase1b/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://genentech.github.io/phase1b/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://genentech.github.io/phase1b/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://genentech.github.io/phase1b/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla‚Äôs code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://genentech.github.io/phase1b/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contribution Guidelines","title":"Contribution Guidelines","text":"üôè Thank taking time contribute! input deeply valued, whether issue, pull request, even feedback, regardless size, content scope.","code":""},{"path":"https://genentech.github.io/phase1b/CONTRIBUTING.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of contents","title":"Contribution Guidelines","text":"üë∂ Getting started üìî Code Conduct üóÉ License üìú Issues üö© Pull requests üëó Style guide üèÜ Recognition model ‚ùì Questions","code":""},{"path":"https://genentech.github.io/phase1b/CONTRIBUTING.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Contribution Guidelines","text":"Please refer project documentation brief introduction. Please also see articles within project documentation additional information.","code":""},{"path":"https://genentech.github.io/phase1b/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contribution Guidelines","text":"Code Conduct governs project. Participants contributors expected follow rules outlined therein.","code":""},{"path":"https://genentech.github.io/phase1b/CONTRIBUTING.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Contribution Guidelines","text":"contributions covered project‚Äôs license.","code":""},{"path":"https://genentech.github.io/phase1b/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Contribution Guidelines","text":"use GitHub track issues, feature requests, bugs. submitting new issue, please check issue already reported. issue already exists, please upvote existing issue üëç. new feature requests, please elaborate context benefit feature users, developers, relevant personas.","code":""},{"path":[]},{"path":"https://genentech.github.io/phase1b/CONTRIBUTING.html","id":"github-flow","dir":"","previous_headings":"Pull requests","what":"Github Flow","title":"Contribution Guidelines","text":"repository uses Github Flow model collaboration. submit pull request: Create branch Please see branch naming convention . don‚Äôt write access repository, please fork . Make changes Make sure code passes checks imposed GitHub Actions well documented well tested unit tests sufficiently covering changes introduced Create pull request (PR) pull request description, please link relevant issue (), provide detailed description change, include assumptions. Address review comments, Post approval Merge PR write access. Otherwise, reviewer merge PR behalf. Pat back Congratulations! üéâ now official contributor project! grateful contribution.","code":""},{"path":"https://genentech.github.io/phase1b/CONTRIBUTING.html","id":"branch-naming-convention","dir":"","previous_headings":"Pull requests","what":"Branch naming convention","title":"Contribution Guidelines","text":"Suppose changes related current issue current project; please name branch follows: <issue_id>_<short_description>. Please use underscore (_) delimiter word separation. example, 420_fix_ui_bug suitable branch name change resolving UI-related bug reported issue number 420 current project. change affects multiple repositories, please name branches follows: <issue_id>_<issue_repo>_<short description>. example, 69_awesomeproject_fix_spelling_error reference issue 69 reported project awesomeproject aims resolve one spelling errors multiple (likely related) repositories.","code":""},{"path":"https://genentech.github.io/phase1b/CONTRIBUTING.html","id":"monorepo-and-stageddependencies","dir":"","previous_headings":"Pull requests","what":"monorepo and staged.dependencies","title":"Contribution Guidelines","text":"Sometimes might need change upstream dependent package(s) able submit meaningful change. using staged.dependencies functionality simulate monorepo behavior. dependency configuration already specified project‚Äôs staged_dependencies.yaml file. need name feature branches appropriately. exception branch naming convention described . Please refer staged.dependencies package documentation details.","code":""},{"path":[]},{"path":"https://genentech.github.io/phase1b/CONTRIBUTING.html","id":"r--package-versions","dir":"","previous_headings":"Pull requests > Recommended development environment & tools","what":"R & package versions","title":"Contribution Guidelines","text":"continuously test packages newest R version along recent dependencies CRAN BioConductor. recommend working environment also set way. can find details R version packages used R CMD check GitHub Action execution log - step prints R sessionInfo(). discover bugs older R versions older set dependencies, please create relevant bug reports.","code":""},{"path":"https://genentech.github.io/phase1b/CONTRIBUTING.html","id":"pre-commit","dir":"","previous_headings":"Pull requests > Recommended development environment & tools","what":"pre-commit","title":"Contribution Guidelines","text":"highly recommend use pre-commit tool combined R hooks pre-commit execute checks committing pushing changes. Pre-commit hooks already available repository‚Äôs .pre-commit-config.yaml file.","code":""},{"path":"https://genentech.github.io/phase1b/CONTRIBUTING.html","id":"style-guide","dir":"","previous_headings":"","what":"Style guide","title":"Contribution Guidelines","text":"repository follows standard tidyverse style guide uses lintr lint checks. Customized lint configurations available repository‚Äôs .lintr file.","code":""},{"path":"https://genentech.github.io/phase1b/CONTRIBUTING.html","id":"recognition-model","dir":"","previous_headings":"","what":"Recognition model","title":"Contribution Guidelines","text":"mentioned previously, contributions deeply valued appreciated. contribution data available part repository insights, recognize significant contribution hence add contributor package authors list, following rules enforced: Minimum 5% lines code authored* (determined git blame query) top 5 contributors terms number commits lines added lines removed* *Excluding auto-generated code, including limited roxygen comments renv.lock files. package maintainer also reserves right adjust criteria recognize contributions.","code":""},{"path":"https://genentech.github.io/phase1b/CONTRIBUTING.html","id":"questions","dir":"","previous_headings":"","what":"Questions","title":"Contribution Guidelines","text":"questions regarding contribution guidelines, please contact package/repository maintainer.","code":""},{"path":[]},{"path":[]},{"path":"https://genentech.github.io/phase1b/SECURITY.html","id":"reporting-security-issues","dir":"","previous_headings":"","what":"Reporting Security Issues","title":"Security Policy","text":"believe found security vulnerability repositories organization, please report us coordinated disclosure. Please report security vulnerabilities public GitHub issues, discussions, pull requests. Instead, please send email vulnerability.management[@]roche.com. Please include much information listed can help us better understand resolve issue: type issue (e.g., buffer overflow, SQL injection, cross-site scripting) Full paths source file(s) related manifestation issue location affected source code (tag/branch/commit direct URL) special configuration required reproduce issue Step--step instructions reproduce issue Proof--concept exploit code (possible) Impact issue, including attacker might exploit issue information help us triage report quickly.","code":""},{"path":"https://genentech.github.io/phase1b/SECURITY.html","id":"data-security-standards-dss","dir":"","previous_headings":"","what":"Data Security Standards (DSS)","title":"Security Policy","text":"Please make sure reporting issues form bug, feature, pull request, sensitive information PII, PHI, PCI completely removed text attachments, including pictures videos.","code":""},{"path":"https://genentech.github.io/phase1b/articles/introduction.html","id":"intro","dir":"Articles","previous_headings":"","what":"Introduction","title":"`phase1b`: Tools for Decision Making in Phase 1b Studies","text":"short vignette serves introduction usage R-package phase1b. particular, vignette covers installation R-package phase1b, core methodology used R-package phase1b, lastly illustrating examples use clinical trials. phase1b R-package intended used conducting drug combination studies Phase 1b trials especially useful decision making Phase 1b trials. However, methodology generalizable many scenarios outside Phase 1b studies viewed general Bayesian framework analysis clinical trials . focus current vignette though solely application Phase 1b oncology clinical trials.","code":""},{"path":"https://genentech.github.io/phase1b/articles/introduction.html","id":"audience","dir":"Articles","previous_headings":"Introduction","what":"Intended Audience","title":"`phase1b`: Tools for Decision Making in Phase 1b Studies","text":"document intended familiarize (potential) user phase1b models analyses available R-package. brief overview, bulk document consists examples oncology clinical trials illustrate various functions methodologies implemented R-package. Note tutorial meant serve instruction manual. detailed documentation functions contained R-package, see R-package help-manuals. R prompt, type Additional examples can found demo files R-package, can listed : afterwards called supplying name demo file demo() function.","code":"help(package = \"phase1b\") demo(package = \"phase1b\")"},{"path":"https://genentech.github.io/phase1b/articles/introduction.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"`phase1b`: Tools for Decision Making in Phase 1b Studies","text":"first time use phase1b computer need download install , however, subsequent use require calling R-package.","code":"install.packages(\"phase1b\")"},{"path":"https://genentech.github.io/phase1b/articles/introduction.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting started","title":"`phase1b`: Tools for Decision Making in Phase 1b Studies","text":"able run commands phase1b R-package, load R-package (assuming R-package installed following instructions Installation section following command: loaded, access functions phase1b R-package. see list functions phase1b R-package, browsing associated help pages, execute following command: list functions displayed can learn function, see examples use, clicking corresponding link. Note easiest work R-Studio ((https://www.rstudio.com/products/rstudio/download/)), recommended software editing using R.","code":"library(phase1b) help(package = \"phase1b\")"},{"path":"https://genentech.github.io/phase1b/articles/introduction.html","id":"methods","dir":"Articles","previous_headings":"","what":"Methods and Models","title":"`phase1b`: Tools for Decision Making in Phase 1b Studies","text":"section provides brief overview statistical models methods implemented phase1b R-package. underlying methodology rooted Bayesian paradigm understanding Bayesian statistics level e.g.¬†Gelman et al. (2013) Held Saban√©s Bov√© (2015) recommended. methods section provides reader basics needed understand phase1b R-package, interested learning Bayesian statistics, applications clinical trials, encouraged read Gelman et al. (2013),Held Saban√©s Bov√© (2015) Berry et al. (2011), respectively, details. first pass document, might make sense reader skip section go straight examples.","code":""},{"path":"https://genentech.github.io/phase1b/articles/introduction.html","id":"postdist","dir":"Articles","previous_headings":"Methods and Models","what":"Posterior Distribution","title":"`phase1b`: Tools for Decision Making in Phase 1b Studies","text":"starting point, review basic fundamental approach Bayesian statistics. Bayesian approach models observed data unknown parameters random variables, provides cohesive framework combining complex data models external knowledge, expert opinion, . introduce main workhorse Bayesian approach, posterior distribution, technical details follows. start specifying distributional model \\(f(\\mathbf{x}\\,\\vert\\,\\boldsymbol{\\theta})\\) observed data \\(\\mathbf{x}=(x_1,\\ldots,x_n)\\) given vector unknown parameters \\(\\boldsymbol{\\theta}=(\\theta_1,\\ldots,\\theta_n)\\), \\(\\boldsymbol{\\theta}\\) random quantity sampled prior distribution \\(\\pi(\\boldsymbol{\\theta}\\,\\vert\\,\\boldsymbol{\\lambda})\\). , \\(\\boldsymbol{\\lambda}\\) vector hyperparameters associated parameters prior distribution. instance, \\(x_i\\) might empirical drug response rate sample women aged 40 clinical center \\(\\), \\(\\theta_i\\) underlying true response rate women center, \\(\\boldsymbol{\\lambda}\\) parameter controlling true rates vary across centers. Modeling \\(\\theta_i\\) random (instead fixed) effects allows us induce specific correlation structures among , hence among observations \\(x_i\\) well. \\(\\boldsymbol{\\lambda}\\) known inference concerning \\(\\boldsymbol{\\theta}\\) based posterior distribution, \\[\\begin{equation} p(\\boldsymbol{\\theta}\\,\\vert\\,\\mathbf{x},\\boldsymbol{\\lambda}) = \\frac{p(\\mathbf{x},\\boldsymbol{\\theta}\\,\\vert\\,\\boldsymbol{\\lambda})}{p(\\mathbf{x}\\,\\vert\\,\\boldsymbol{\\lambda})} = \\frac{p(\\mathbf{x},\\boldsymbol{\\theta}\\,\\vert\\,\\boldsymbol{\\lambda})}{\\int p(\\mathbf{x},\\boldsymbol{\\theta}\\,\\vert\\,\\boldsymbol{\\lambda})} = \\frac{f(\\mathbf{x}\\,\\vert\\,\\theta)\\pi(\\boldsymbol{\\theta}\\,\\vert\\,\\boldsymbol{\\lambda})}{\\int f(\\mathbf{x}\\,\\vert\\,\\theta)\\pi(\\boldsymbol{\\theta}\\,\\vert\\,\\boldsymbol{\\lambda}) d\\boldsymbol{\\theta}}. (\\#eq:posterior) \\end{equation}\\] Notice contribution data (form likelihood \\(f\\)) previous knowledge expert opinion (form prior \\(\\pi\\)) posterior. Since, practice, \\(\\boldsymbol{\\lambda}\\) known, second stage (hyperprior) distribution \\(h(\\boldsymbol{\\lambda})\\) often required, @ref(eq:posterior) replaced \\[\\begin{equation} p(\\boldsymbol{\\theta}\\,\\vert\\,\\mathbf{x}) =\\frac{p(\\mathbf{x},\\boldsymbol{\\theta}\\,\\vert\\,\\boldsymbol{\\lambda})}{p(\\mathbf{x}\\,\\vert\\,\\boldsymbol{\\lambda})} =\\frac{p(\\mathbf{x},\\boldsymbol{\\theta}\\,\\vert\\,\\boldsymbol{\\lambda})}{\\int p(\\mathbf{x},\\boldsymbol{\\theta}\\,\\vert\\,\\boldsymbol{\\lambda})} =\\frac{\\int f(\\mathbf{x}\\,\\vert\\,\\theta)\\pi(\\boldsymbol{\\theta}\\,\\vert\\,\\boldsymbol{\\lambda})h(\\boldsymbol{\\lambda})d\\boldsymbol{\\lambda}}{\\int\\int f(\\mathbf{x}\\,\\vert\\,\\theta)\\pi(\\boldsymbol{\\theta}\\,\\vert\\,\\boldsymbol{\\lambda})h(\\boldsymbol{\\lambda}) d\\boldsymbol{\\theta}d\\boldsymbol{\\lambda}}. (\\#eq:hier-post) \\end{equation}\\] multi-stage approach often called hierarchical modeling. computational challenge applying Bayesian methods realistic problems, integrations required inference @ref(eq:posterior) often tractable closed form, thus must approximated numerically. Forms \\(\\pi\\) \\(h\\) (called conjugate priors) enable least partial analytic evaluation integrals may often found, presence nuisance parameters, intractable integrations remain. illustrate concept posterior distribution, calculations, use, via exploring underlying methodology implemented phase1b R-package functionpostprob(). postprob() function assumes observed data \\(x\\) arise Binomial distribution size \\(n\\) unknown parameter \\(P_E\\), .e., \\[\\begin{equation} x\\,\\vert\\,n,P_E\\sim\\text{Binom}(n,P_E) \\end{equation}\\] Bayesian approach, parameter \\(P_E\\) treated random unknown quantity model. prior distribution \\(P_E\\) can elicited external knowledge expert opinion, however, use conjugate prior employed . prior used postprob() following form: \\(P_E\\sim \\sum_{=1}^kw_i\\text{Beta}(a_i,b_i)\\), mixture Beta distributions, simplicity, default prior postprob() set single conjugate Beta distribution, \\(\\text{Beta}(\\alpha,\\beta)\\). make assumption (mixture) Beta prior reasonable choice prior distribution \\(P_E\\). derive posterior distribution, based prior assumption, following: \\[\\begin{align*} p(P_E\\,\\vert\\,x) &=\\frac{p(x\\,\\vert\\,P_E)\\pi(P_E)}{\\int p(x\\,\\vert\\,P_E)\\pi(P_E) dP_E}\\\\ &\\propto p(x\\,\\vert\\,P_E)\\pi(P_E)\\\\ &\\propto P_E^x(1-P_E)^{n-x}P_E^{-1}(1-P_E)^{b-1}\\\\ &\\propto P_E^{+x-1}(1-P_E)^{b+n-x-1} \\end{align*}\\] Realizing densities must integrate 1, just need figure normalizing constants proportional density. Using conjugacy, realize posterior distribution \\(P_E\\) must also follow form prior distribution \\(P_E\\), thus recognize posterior distribution following Beta distribution \\[\\begin{equation} P_E\\,\\vert\\,x\\sim\\text{Beta}(+x,b+n-x) \\end{equation}\\] course carried calculation using general prior, \\(P_E\\sim \\sum_{=1}^kw_i\\text{Beta}(a_i,b_i)\\), however, sake illustration (avoid tedious bookkeeping) chose use simpler non-mixture Beta distributions ease calculation. probabilistic calculations follow naturally Bayesian approach posterior distribution identified. example, seen function postprob(), one calculate posterior probability rate \\(P_E\\) greater (less ) threshold \\(p\\), .e., \\(\\mathbb{P}(P_E>p\\,\\vert\\,x)\\), simply calculating area corresponding Beta distribution.","code":""},{"path":"https://genentech.github.io/phase1b/articles/introduction.html","id":"betadiff","dir":"Articles","previous_headings":"Methods and Models","what":"Difference in beta random variables","title":"`phase1b`: Tools for Decision Making in Phase 1b Studies","text":"One may wish know distribution difference response rates groups. Recall , previous assumptions, can characterize posterior distribution group response rate Beta distribution. Thus, Bayesian approach, can describe distribution difference response rates groups simply distribution difference two Beta random variables. , idea generalizes case Beta mixture prior, however, sake argument, focus simpler case. better understand underlying methodology implemented phase1b R-package, consider following probabilistic calculations. Let \\(X\\) \\(Y\\) two independent random variables \\(X\\sim \\text{Beta}(a_x,b_x)\\) \\(Y\\sim \\text{Beta}(a_y,b_y)\\). interest calculating distribution difference \\(X\\) \\(Y\\) , order , can utilize transformation variables defining following random variables \\(Z\\) \\(W\\) \\(Z=Y-X\\) \\(W=X\\). Recalling basic probability theory, determinant Jacobian matrix transformation follows: \\[\\begin{align*} \\left\\vert J\\right\\vert = \\left |\\text{det}\\begin{bmatrix} \\frac{dX}{dW} & \\frac{dX}{dZ}\\\\ & \\\\ \\frac{dY}{dW} & \\frac{dY}{dZ} \\end{bmatrix}\\right | = \\left |\\text{det}\\begin{bmatrix} 1 & 0\\\\ 1 & -1 \\end{bmatrix}\\right | =  |1\\times(-1)-0\\times1|=1, \\end{align*}\\] thus joint distribution \\(Z\\) \\(W\\) following: \\[\\begin{align} p(z,w) &=p(J_1(z,w),J_2(z,w))\\times|J|\\\\ &=p(w,w-z)\\times 1\\\\ &=p(w) p(w-z)\\\\ &=\\text{Beta}(w;a_1,b_1)\\times\\text{Beta}(w-z;a_2,b_2)\\\\ &=\\frac{(w)^{1-a_1}(1-w)^{1-b_1}}{\\beta(a_1,b_1)}\\times\\frac{(w-z)^{1-a_2}(1-(w-z))^{1-b_2}}{\\beta(a_2,b_2)}. \\end{align}\\] Recalling interested distribution difference \\(X\\) \\(Y\\), .e., p(z), must marginalize \\(w\\) order recover distribution. However, integration trivial, caution must used ensure proper integration correct domain \\(p(z,w)\\). ease understanding, Figure @ref(fig:betadiff) depicts domain joint distribution \\(p(z,w)\\) area split two triangles assist visually appropriate integral needed marginalize domain \\(w\\). shaded region show domain joint distribution \\(Z\\) \\(W\\). shade two triangular regions grey blue sake understanding bounds integration necessary marginalization \\(w\\) joint distribution. Marginalizing joint distribution \\(p(w,z)\\) \\(w\\) results following marginal distribution \\(z\\): \\[ \\begin{align} p(z)=\\int p(z,w) dw = \\begin{cases} \\int_{0}^{z+1} p(z,w)dw \\,  &\\mbox{} -1 \\leq z \\leq 0 \\\\ \\\\ \\int_{z}^{1} p(z,w)dw \\,  &\\mbox{} \\phantom{-}0 < z \\leq 1 \\\\ \\\\ 0 \\,  &\\mbox{otherwise} \\end{cases} \\end{align} (\\#eq:betadiff) \\] Thus distribution difference two beta random variables can characterized @ref(eq:betadiff). However, integrals analytically tractable approximate using R‚Äôs built-integrate() function inside phase1b R-package function betadiff().","code":""},{"path":"https://genentech.github.io/phase1b/articles/introduction.html","id":"predprob","dir":"Articles","previous_headings":"Methods and Models","what":"Predictive Probabilities","title":"`phase1b`: Tools for Decision Making in Phase 1b Studies","text":"Rather reconstruct argument predictive probability calculations completely, reader advised see book Berry et al. (2011) discussion topic. quote parts pages 142 ‚Äì 144 Berry et al. (2011) better understand methodology predictive probability implemented functions predprob, odPredprob etc.","code":""},{"path":"https://genentech.github.io/phase1b/articles/introduction.html","id":"introduction","dir":"Articles","previous_headings":"Methods and Models > Predictive Probabilities","what":"Introduction","title":"`phase1b`: Tools for Decision Making in Phase 1b Studies","text":"distinct advantage predictive probability (PP) approach mimics clinical decision making process. Based interim data, PP obtained calculating probability positive conclusion (rejecting null hypothesis) trial conducted maximum planned sample size. framework, chance trial show conclusive result end study, given current information, evaluated. decision continue stop trial can made according strength predictive probability. follows, quote directly Berry et al. (2011) explain definition basic calculations binary data. Suppose goal evaluate response rate \\(P_E\\) new drug testing hypothesis \\(H_0: P_E \\leq p\\) versus \\(H_A: P_E > p\\). Suppose assume prior distribution response rate, \\(\\pi(P_E)\\), follows \\(\\text{Beta}(,b)\\) distribution. quantity \\(/(+b)\\) gives prior mean, magnitude \\(+b\\) indicates informative prior . Since quantities \\(\\) \\(b\\) can considered numbers effective prior responses non-responses, respectively, \\(+b\\) can thought measure prior precision: larger sum, informative prior stronger belief contains. Suppose set maximum number accrued patients \\(N_{\\max}\\), assume number responses \\(x\\) among current \\(n\\) patients (\\(n\\leq N_{\\max}\\)) follows \\(\\text{Binom}(n, P_E)\\) distribution. conjugacy beta prior binomial likelihood, posterior distribution response rate follows another beta distribution, \\(P\\,\\vert\\,x \\sim \\text{Beta}(+ x, b+ n - x)\\).predictive probability approach looks future based current observed data project whether positive conclusion end study likely , makes sensible decision present time accordingly. Let \\(Y\\) number responses potential \\(m = N_{\\max}-n\\) future patients. Suppose design declare efficacy posterior probability \\(P_E\\) exceeding prespecified level \\(p\\) greater threshold \\(\\theta_T\\) . Marginalizing \\(P_E\\) binomial likelihood, well known \\(Y\\) follows beta-binomial distribution, \\(Y \\sim \\text{Beta-Binomial}(m, + x,b +n - x)\\). \\(Y = \\), posterior distribution \\(P_E\\,\\vert\\,(X = x, Y = )\\) \\(\\text{Beta}(+x+, b+N_{\\max}-x-)\\). predictive probability (PP) trial success can calculated follows. Letting \\(B_i = \\mathbb{P}(P_E > p \\,\\vert\\,x, Y = )\\) indicator function \\(I_i = (B_i > \\theta_T )\\), \\[\\begin{align*} PP &= \\mathbb{E}([\\mathbb{P}(P_E>p\\,\\vert\\,x,Y)>\\theta_T]\\,\\vert\\,x)\\\\ &=\\int [\\mathbb{P}(P_E>p\\,\\vert\\,x,Y)>\\theta_T]dP(Y\\,\\vert\\,x)\\\\ &=\\sum_{=0}^m\\mathbb{P}(Y=\\,\\vert\\,x)\\times [\\mathbb{P}(P_E>p\\,\\vert\\,x,Y=)>\\theta_T]\\\\ &=\\sum_{=0}^m\\mathbb{P}(Y=\\,\\vert\\,x)\\times (B_i>\\theta_t)\\\\ &=\\sum_{=0}^m \\mathbb{P}(Y=\\,\\vert\\,x)\\times I_i \\end{align*}\\] quantity \\(B_i\\) probability response rate larger \\(p\\) given \\(x\\) responses \\(n\\) patients current data \\(\\) responses \\(m\\) future patients. Comparing \\(B_i\\) threshold value \\(\\theta_T\\) yields indicator \\(I_i\\) considering treatment efficacious end trial given current data potential outcome \\(Y = \\).","code":""},{"path":"https://genentech.github.io/phase1b/articles/introduction.html","id":"basic-pred-prob-design","dir":"Articles","previous_headings":"Methods and Models > Predictive Probabilities","what":"Basic predictive probability design","title":"`phase1b`: Tools for Decision Making in Phase 1b Studies","text":"weighted sum indicators \\(I_i\\) yields predictive probability concluding positive result end trial based cumulative information current stage. high PP means treatment likely efficacious end study, given current data, whereas low PP suggests treatment may sufficient activity. Therefore, PP can used determine whether trial stopped early due efficacy/futility continued current data yet conclusive. define rule introducing two thresholds PP. decision rule can constructed follows: Algorithm (Basic PP design) Step 1: \\(PP < \\phi_L\\), stop trial reject alternative hypothesis; Step 2: \\(PP > \\phi_U\\), stop trial reject null hypothesis; Step 3: Otherwise continue next stage reaching \\(N_{\\max}\\) patients. Typically, choose \\(\\phi_L\\) small positive number \\(\\phi_U\\) large positive number, 0 1 (inclusive). Note \\(\\phi_L < \\phi_U\\) hence order steps 1, 2 3 relevant. \\(PP < \\phi_L\\) indicates unlikely response rate larger \\(p\\) end trial given current information. happens, may well stop trial reject alternative hypothesis point. hand, \\(PP > \\phi_U\\), current data suggest , trend continues, high probability concluding treatment efficacious end study. result, , provides evidence stop trial early due efficacy. choosing \\(\\phi_L > 0\\) \\(\\phi_U < 1\\), trial can terminate early due either futility efficacy. trial reaches maximal number subjects, predictive probability \\(PP=[\\mathbb{P}(P_E>p\\,\\vert\\,x)>\\theta_T ]\\). \\(\\mathbb{P}(P_E>p\\,\\vert\\,x)\\) constant, \\(PP\\) equal either 0 1 hence always Go Go decision made final analysis, .e ‚Äúgray zone‚Äù exists.","code":""},{"path":"https://genentech.github.io/phase1b/articles/introduction.html","id":"advanced-predictive-probability-design","dir":"Articles","previous_headings":"Methods and Models > Predictive Probabilities","what":"Advanced predictive probability design","title":"`phase1b`: Tools for Decision Making in Phase 1b Studies","text":"Since usually phase 1b trials, response rate endpoint surrogate early determination meaningful clinical benefits, ‚Äúgray zone‚Äù final analyses evaluations may desired practice. plan design, advanced predictive probability approach included latest version R-package. major difference previous approach , addition hypothesis Go decision, \\(H_0: P_E \\leq p\\) versus \\(H_A: P_E > p\\), separate hypothesis testing rule Go/futility decisions, \\(H_0: P_E \\geq p_F\\) versus \\(H_A: P_E < p_F\\) utilized (Note \\(p_F < p\\) required). Hence, final analysis: - design declare efficacy posterior probability \\(P_E > p\\) greater threshold \\(\\theta_T\\) (event ) - design declare futility posterior probability \\(P_E < P_F\\) greater threshold \\(\\theta_{F}\\) (event B) \\(\\theta_T\\) \\(\\theta_{F}\\) range 0 1. Thus decision rule interim final analyses can conducted mixture two basic PP designs: Algorithm (Advanced PP design). - Step 1: \\(PP(\\text{event })> \\phi_U\\), stop trial declare efficacy; - Step 2: \\(PP(\\text{event B})> \\phi_F\\), stop trial declare futility; - Step 3: Otherwise continue next stage reaching \\(N_{\\max}\\) patients. Note \\(\\phi_U\\) \\(\\phi_F\\) typically probabilities 0.5. Hence \\(PP(\\text{event })>\\phi_U\\) indicates likely treatment efficacious end study trend current data continues. \\(PP(\\text{event B})>\\phi_F\\) indicates high likelihood treatment declared inefficacious given current information. fact, predictive probability futility can written format predictive probability efficacy: \\[\\begin{align*} PP &= \\mathbb{E}([\\mathbb{P}(P_E<p_F\\,\\vert\\,x,Y)>\\theta_{F}]\\,\\vert\\,x)\\\\ &= \\mathbb{E}([\\mathbb{P}(P_E \\geq p_F\\,\\vert\\,x,Y)< 1 - \\theta_{F}]\\,\\vert\\,x)\\\\ &=1-\\mathbb{E}([\\mathbb{P}(P_E \\geq p_F\\,\\vert\\,x,Y)>1-\\theta_{F}]\\,\\vert\\,x) \\end{align*}\\] Thus using trick, predprob() predprobDist() functions can used calculate predictive probabilities futility. separate section describes advanced predictive probability design.","code":""},{"path":"https://genentech.github.io/phase1b/articles/introduction.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples using phase1b","title":"`phase1b`: Tools for Decision Making in Phase 1b Studies","text":"following subsections take reader series synthetic examples based specific Oncology indication. accompanying (highly modifiable) R code intended help familiarize user phase1b R-package, can course applied indication.","code":""},{"path":"https://genentech.github.io/phase1b/articles/introduction.html","id":"example-scenario","dir":"Articles","previous_headings":"Examples using phase1b","what":"Scenario for the example","title":"`phase1b`: Tools for Decision Making in Phase 1b Studies","text":"Assume following hypothetical scenario. current standard care (SOC) cancer XYZ chemotherapy regimen known ABC. example, explore potential advantage phase 1b combination trial XYZ indication combining ABC new molecule, say D, compared current SOC. combination example considered, unmet need progression free survival (PFS) hazard ratio (HR) 0.64. control comes 150 patient subset previous study using ABC XYZ, Phase 1b endpoint PET-CR hypothesized meaningful improvement PET-CR may predict meaningful improvement PFS.","code":""},{"path":[]},{"path":"https://genentech.github.io/phase1b/articles/introduction.html","id":"posterior-probability-calculations","dir":"Articles","previous_headings":"Examples using phase1b > Posterior Probability Design","what":"Posterior Probability Calculations","title":"`phase1b`: Tools for Decision Making in Phase 1b Studies","text":"Bayesian approach, quantify priori uncertainty PET-CR rates via prior distributions. sake example, use \\(\\text{Beta}(5.75,4.25)\\) prior describe uncertainty unknown PET-CR rate novel combo (ABC + D), however practice, prior chosen based historical data /eliciting expert knowledge opinion. Likewise, historical control (ABC), set prior distribution equal posterior distribution \\(\\text{Beta(75,75)}\\) distribution centered exactly observed PET-CR rate historical control. following lines code @ref(fig:ex1-prior) allow user able visualize prior uncertainty PET-CR rates historical control novel combination. prior distributions historical control novel combination treatment group. $ ext{Beta}(75,75)$ prior used historical control, $ ext{Beta}(5.75,4.25)$ prior used novel combination treatment group resulting Figure~@ref(fig:ex1-prior) see density prior historical control greatly concentrated area observed PET-CR rate prior PET-CR rate novel combination dispersed across many potential PET-CR rates indicating higher level apriori uncertainty. Now, using posterior distribution, can update uncertainty PET-CR rate novel combination via calculating posterior distribution. Recall prior distribution novel combination PET-CR rate \\(\\text{Beta}(5.75,4.25)\\), data likelihood, conditional PET-CR rate, follows binomial likelihood thus, due conjugacy, posterior distribution also follow Beta distribution updated parameters based observed data. example, running trial novel combination observe 55 responders total 80 patients, .e., PET-CR rate 68.75%, posterior updating based prior distribution observed data lead \\(\\text{Beta}(60.75,29.25)\\) posterior distribution novel combination PET-CR rate. Alternatively, use R-package function myPlot() achieve result, see Figure~@ref(fig:ex1-prior_myPlot). prior distributions historical control novel combination treatment group. $ ext{Beta}(75,75)$ prior used historical control, $ ext{Beta}(5.75,4.25)$ prior used novel combination treatment group. following code allows reader visualize posterior distribution PET-CR rate posterior distribution historical control.  resulting Figure~@ref(fig:ex1-posterior) see posterior distribution much peaked prior distribution Figure~@ref(fig:ex1-prior) reflecting fact observed data, uncertainty true PET-CR rate novel combination diminish. posterior distribution obtained, user can use postprob() command make posterior probability calculations PET-CR rate either novel combination historical control. example, user calculate probability PET-CR rate greater 60%, .e., \\(\\mathbb{P}(P_E > 0.6 \\,\\vert\\,x)\\), issuing following command: result indicates roughly 93% chance PET-CR rate novel combination 60%.","code":"xx <- seq(0, 1, .001) dens.control <- dbeta(xx, 75, 75) # Posterior of the control dens.prior <- dbeta(xx, 5.75, 4.25) # Prior of the Phase 1b trial plot(xx, dens.control,   type = \"l\", lwd = 2, col = \"darkgrey\", axes = FALSE,   xlab = \"PET-CR Rate\", ylab = \"Density\", ylim = c(0, 10),   main = \"Prior Distributions\" ) lines(xx, dens.prior, lwd = 2, col = \"deepskyblue\") axis(1, seq(0, 1, .25), c(\"0%\", \"25%\", \"50%\", \"75%\", \"100%\")) axis(2) box() legend(\"topright\", c(\"Hist. Control\", \"Novel Combo\"),   lwd = 2, lty = 1,   col = c(\"lightgrey\", \"deepskyblue\"), bty = \"n\" ) myPlot(75, 75, col = \"darkgrey\", ylim = c(0, 10), xlab = \"PET-CR Rate\", lwd = 2) par(new = TRUE) myPlot(5.75, 4.25, col = \"deepskyblue\", ylim = c(0, 10), lwd = 2, xlab = \"\") legend(\"topright\", c(\"Hist. Control\", \"Novel Combo\"),   lwd = 2, lty = 1,   col = c(\"darkgrey\", \"deepskyblue\"), bty = \"n\" ) xx <- seq(0, 1, .001) dens.control <- dbeta(xx, 75, 75) dens.post <- dbeta(xx, 5.75 + 55, 4.25 + 80 - 55) # 80 is sample size of 1b trial and 55 is the number of responders  plot(xx, dens.control,   type = \"l\", lwd = 2, col = \"darkgrey\", axes = FALSE,   xlab = \"PET-CR Rate\", ylab = \"Density\", ylim = c(0, 10),   main = \"Posterior Distributions\" ) lines(xx, dens.post, lwd = 2, col = \"deepskyblue\") axis(1, seq(0, 1, .25), c(\"0%\", \"25%\", \"50%\", \"75%\", \"100%\")) axis(2) box() legend(\"topright\", c(\"Hist. Control\", \"Novel Combo\"),   lwd = 2, lty = 1,   col = c(\"darkgrey\", \"deepskyblue\"), bty = \"n\" ) postprob(x = 55, n = 80, p = 0.6, parE = c(5.75, 4.25)) #> [1] 0.9322701"},{"path":"https://genentech.github.io/phase1b/articles/introduction.html","id":"operating-characteristics","dir":"Articles","previous_headings":"Examples using phase1b > Posterior Probability Design","what":"Operating Characteristics","title":"`phase1b`: Tools for Decision Making in Phase 1b Studies","text":"Similarly, user may interested calculating frequentist probability clinical trial stopped efficacy futility, conditional true values response rate. calculations need take account particular interim looks data reaching final sample size trial. Hence, calculations difficult perform closed manner. However, can resort Monte Carlo calculation, means simulate large number trials estimate high precision frequentist probabilities interest. key operating characteristics trial design. example, may interested conducting single arm Phase 1b trial interim analyses planned accrued 10, 20 30 patients (30 maximum number patients accrue). declare efficacy early, interim looks, posterior probability observed response rate, \\(p_E\\), greater predefined efficacy threshold, \\(p_1 = 30\\%\\), exceeds upper probability threshold \\(t_U=80\\%\\), .e., \\[ \\mathbb{P}(p_E>p_1)>t_U. \\] Likewise, declare futility early posterior probability observed response rate, \\(p_E\\), less predefined efficacy threshold, \\(p_0=20\\%\\), smaller lower probability threshold \\(t_L=60\\%\\), .e., \\[ \\mathbb{P}(p_E<p_0)<t_L. \\] Following usual Bayesian framework, need specify prior distribution unknown response rate \\(p_E\\) place \\(\\text{Beta}(1,1)\\) prior unknown response rate \\(p_E\\). Furthermore, may wish examine operating characteristics design scenario true response rate, \\(p\\), equal 40% ‚Äì scenario like declare efficacy. order calculate operating characteristics using 10,000 (parameter ns) simulated trials, issue following command: object results list, stores operating characteristics running simulations inside element oc. simulations expected number patients trial, stopping either efficacy futility, 19. Furthermore, 67% simulated trials stopped early interim analyses. 10,000 trials, 61.95% declared early efficacy 5.27% stopped early futility. However, combining trials stop early, 75.64% declared efficacy 5.4% declared futility. percentages sum 100% 10,000 simulated trials 18.62% declared efficacious futile time maximum sample size 30 patients reached ‚Äì .e., fell grayzone.","code":"set.seed(4) results <- ocPostprob(   nnE = c(10, 20, 30), truep = 0.4, p0 = 0.2, p1 = 0.3, tL = 0.6,   tU = 0.8, parE = c(1, 1), sim = 10000, wiggle = FALSE, randomdist = NULL, nnF = c(10, 20, 30) ) #> Warning in ocPostprob(nnE = c(10, 20, 30), truep = 0.4, p0 = 0.2, p1 = 0.3, : #> Advise to use sim >= 50000 to achieve convergence results$oc #>   ExpectedN PrStopEarly PrEarlyEff PrEarlyFut PrEfficacy PrFutility PrGrayZone #> 1    19.119      0.6722     0.6195     0.0527     0.7598      0.054     0.1862"},{"path":"https://genentech.github.io/phase1b/articles/introduction.html","id":"difference-in-posterior-distributions","dir":"Articles","previous_headings":"Examples using phase1b > Posterior Probability Design","what":"Difference in Posterior Distributions","title":"`phase1b`: Tools for Decision Making in Phase 1b Studies","text":"user may interested showing novel combination superior historical control comparing PET-CR rates. order make comparison, can make use dbetadiff() function compute distribution difference PET-CR rates novel combination historical control. relatively simple task , Bayesian point view, simply distribution difference posterior distributions, equivalent distribution difference two independent Beta random variables. interested user reminded read methods section detailed analytical calculations distribution. Returning previous example, recall placed \\(\\text{Beta}(5.75,4.25)\\) prior PET-CR rate novel combination, observed 55 responders 80 patients novel combination, well 75 responders 150 patients historical control. observed PET-CR rates led \\(\\text{Beta}(60.75,29.25)\\) \\(\\text{Beta}(75,75)\\) posterior distribution novel combination historical control PET-CR rates, respectively. Based learning endpoint, may believe seeing difference PET-CR rates greater threshold, say example 15%, may indicate meaningful improvement PFS novel combination historical control. Defining difference PET-CR rates \\(\\Delta=\\text{(Combo Response)-(Control Response)}\\), may ultimately interested making probabilistic calculations \\(\\mathbb{P}(\\Delta>15\\%)\\) \\(\\mathbb{P}(\\Delta\\leq 5\\%)\\) calculations may informative Go\" andNo Go‚Äù decisions. example, \\(\\mathbb{P}(\\Delta>15\\%)\\) \\(\\mathbb{P}(\\Delta\\leq 5\\%)\\) ‚Äúlarge‚Äù may decide declare go go, respectively. Consider probability exceeding 60% large, following example , evaluate following go/go criteria based distribution difference PET-CR code @ref(fig:ex1:betadiff1).  Alternatively, use R-package function myPlotDiff() achieve result far fewer lines code, see Figure~@ref(fig:ex1:betadiff1:myPlotDiff)). distribution difference PET-CR rates amongst novel combination group historical control. , see probability go decision (green) much likely probability go decision (red). Figure @ref(fig:ex1:betadiff1) see probability go decision (shaded green) much larger probability go decision (shaded red). fact, can calculate exact probability values go/go decision following commands: ‚Äúlarge‚Äù threshold exceeding 60%, see declare go decision situation since probability \\(\\Delta\\) exceeds 15% equal 66% larger 60% threshold. Alternatively, posterior probability can calculated using postprobDist() function, follows: function works similar way postprob explained . difference now beta prior distribution comparator response rate. hand, observed hypothetical situation number responders much lower, say 42 responders 80 patients, re-run analysis see impact go/go decisions. following code re-runs previous example much lower response rate \\(42/80=52.5\\%\\). distribution difference PET-CR rates amongst novel combination group historical control. , see probability go decision (green) much less likely probability go decision (red). Note now change response rate also affects posterior distribution PET-CR rate novel combination group. posterior distribution \\(\\text{Beta}(60.75,29.25)\\) distribution now, due low observed response rate, posterior distribution \\(\\text{Beta}(47.75,42.25)\\). Using new posterior distribution, obtain following distribution difference, Figure~@ref(fig:ex1:betadiff2), PET-CR rates two groups. see probability go decision much higher probability go decision due lower response rate novel combination group. , can execute following commands calculate exact probabilities: Thus, 61% chance novel combination results less 5% improvement PET-CR rates relative historical control, hence go decision declared.","code":"parX <- c(75, 75) parY <- c(5.75 + 55, 4.25 + 80 - 55) xx <- seq(-0.5, 0.75, 0.001) dens <- dbetadiff(xx, parY, parX)  x.poly <- c(rev(xx), xx) y.poly <- c(rep(0, length(xx)), dens)  idx1 <- which(x.poly < 0.05) idx2 <- which(x.poly > 0.15)  plot(xx, dens,   type = \"l\", main = \"PET-CR Comparison\",   xlab = \"(Combo Response) - (Control Response)\",   ylab = \"\", yaxs = \"i\", axes = FALSE ) axis(1, seq(-0.5, 0.75, .25), c(\"-50%\", \"-25%\", \"+0%\", \"+25%\", \"+50%\", \"+75%\")) polygon(x.poly[idx1], y.poly[idx1], col = \"red\") polygon(x.poly[idx2], y.poly[idx2], col = \"green\") box() legend(\"topright\", c(\"Prob. of No Go\", \"Prob. of Go\"),   pch = 15,   col = c(\"red\", \"green\"), bty = \"n\" )  arrows(.5, 2, .22, 1, lwd = 2) text(.5, 2.2, expression(\"Prob\" * (Delta > +15 * \"%\")))  arrows(-.25, 2, 0, .2, lwd = 2) text(-.25, 2.2, expression(\"Prob\" * (Delta < +5 * \"%\"))) myPlotDiff(c(5.75 + 55, 4.25 + 80 - 55), c(75, 75), 0.15, 0.05, 1, 0,   xlab = \"(Combo Response) - (Control Response)\" ) legend(\"topright\", c(\"Prob. of No Go\", \"Prob. of Go\"),   pch = 15,   col = c(\"red\", \"green\"), bty = \"n\" )  arrows(.5, 2, .22, 1, lwd = 2) text(.5, 2.2, expression(\"Prob\" * (Delta > +15 * \"%\")))  arrows(-.25, 2, 0, .2, lwd = 2) text(-.25, 2.2, expression(\"Prob\" * (Delta < +5 * \"%\"))) pbetadiff(0.05, parY = c(5.75 + 55, 4.25 + 80 - 55), parX = c(75, 75)) #> [1] 0.02684542 1 - pbetadiff(0.15, parY = c(5.75 + 55, 4.25 + 80 - 55), parX = c(75, 75)) #> [1] 0.6558079 1 - postprobDist(x = 55, n = 80, delta = 0.05, parE = c(5.75, 4.25), parS = c(75, 75)) #> [1] 0.02684542 postprobDist(x = 55, n = 80, delta = 0.15, parE = c(5.75, 4.25), parS = c(75, 75)) #> [1] 0.6558079 parX <- c(75, 75) parY <- c(5.75 + 42, 4.25 + 80 - 42) xx <- seq(-0.5, 0.75, 0.001) dens <- dbetadiff(xx, parY, parX)  x.poly <- c(rev(xx), xx) y.poly <- c(rep(0, length(xx)), dens)  idx1 <- which(x.poly < 0.05) idx2 <- which(x.poly > 0.15)  plot(xx, dens,   type = \"l\", main = \"PET-CR Comparison\",   xlab = \"(Combo Response) - (Control Response)\",   ylab = \"\", yaxs = \"i\", axes = FALSE ) axis(1, seq(-0.5, 0.75, .25), c(\"-50%\", \"-25%\", \"+0%\", \"+25%\", \"+50%\", \"+75%\")) polygon(x.poly[idx1], y.poly[idx1], col = \"red\") polygon(x.poly[idx2], y.poly[idx2], col = \"green\") box() legend(\"topright\", c(\"Prob. of No Go\", \"Prob. of Go\"),   pch = 15,   col = c(\"red\", \"green\"), bty = \"n\" ) arrows(.45, 2, .2, .5, lwd = 2) text(.45, 2.2, expression(\"Prob\" * (Delta > +15 * \"%\")))  arrows(-.3, 2, -.03, .9, lwd = 2) text(-.3, 2.2, expression(\"Prob\" * (Delta < +5 * \"%\"))) 1 - postprobDist(x = 42, n = 80, delta = 0.05, parE = c(5.75, 4.25), parS = c(75, 75)) #> [1] 0.6142228 postprobDist(x = 42, n = 80, delta = 0.15, parE = c(5.75, 4.25), parS = c(75, 75)) #> [1] 0.03532739"},{"path":"https://genentech.github.io/phase1b/articles/introduction.html","id":"PredProb-design","dir":"Articles","previous_headings":"Examples using phase1b","what":"Predictive Probability Design","title":"`phase1b`: Tools for Decision Making in Phase 1b Studies","text":"example aims illustrate usage predictive probabilities (PP) conduct interim analyses described basic PP design. single arm XYZ combo trial discussed previous section used section well. Besides, section also includes simulation study evaluate operating characteristics study design. Similar previous example, hypothesized 15% absolute increasement PET-CR may predict meaningful clinical benefit XYZ patients. Thus goal trial set evaluate PET-CR rate \\(P_{combo}\\) testing hyoithesis \\(H_0: P_{combo} \\leq P_{control}+15\\%\\) versus \\(H_A: P_{combo} > P_{control}+15\\%\\). Thus let‚Äôs determine , sample size reaches maximum, study declare efficacy posterior probability \\(P_{combo} > P_{control}+15\\%\\) greater threshold \\(\\theta_T=0.6\\). Otherwise, study declare futility. , assumed 2 interim analyses planed 25 40 patients along final analysis 80 patients evaluate efficacy futility. study stops interim Efficacy stop \\(PP>\\phi_U\\) Futility stop \\(PP<\\phi_L\\) set \\(\\phi_U=0.8\\) \\(\\phi_L=0.2\\) illustration. Please aware, ‚Äúgray zone‚Äù terms decision making final analysis using basic PP design (see details predictive probability section).","code":""},{"path":"https://genentech.github.io/phase1b/articles/introduction.html","id":"predictive-probability-calculation","dir":"Articles","previous_headings":"Examples using phase1b > Predictive Probability Design","what":"Predictive Probability Calculation","title":"`phase1b`: Tools for Decision Making in Phase 1b Studies","text":"calculate predictive probability comparing two distributions (treatment vs.¬†SOC), predprobDist() function can used. order perform calulation, maximal number patient (80), Beta prior treatment arm (\\(\\text{Beta}(5.75, 4.25)\\)), Beta posterior distribution SOC arm (\\(\\text{Beta}(75,75)\\)) required. Since beta distribution conjugate prior binomial distribution (see formula 1-8), posterior distribution SOC can directly entered parS argument. instance, 18 PET-CR first interim analysis (n=25), predictive probabilities can calculated case, study continue since PP, 57.5%, neither exceed 80% fall 20%.","code":"predprobDist(   x = 18, n = 25, Nmax = 80,   delta = 0.15,   thetaT = 0.6,   parE = c(5.75, 4.25),   parS = c(75, 75) )[1] #> $result #> [1] 0.5755374"},{"path":"https://genentech.github.io/phase1b/articles/introduction.html","id":"operating-characteristics-evaluation","dir":"Articles","previous_headings":"Examples using phase1b > Predictive Probability Design","what":"Operating Characteristics Evaluation","title":"`phase1b`: Tools for Decision Making in Phase 1b Studies","text":"Phase 1b trial starts, users may want evaluate design operating characteristics assumed true PET-CR rate combo trial. ocPredprobDist() function allow evaluation single scenario true response rate. following code assumes true PET-CR rate 75%. planed interim final looks 25, 40 80 patients entered vector nn argument. p true PET-CR rate assumed, targeting delta improvement control (delta ranges 0 1). tT threshold probability control + delta end trial, phiL phiU lower upper thresholds predictive probability, respectively. notations predprobDist() function, parE parS place enter beta parameters prior treatment control proportion, respectively. number simulation 10 case, just speed example. However, user needs increase number 10,000 higher generate correct result. According simulation result, expected sample size trial 44.4. 87% simulated trials declare efficacy rest 13% trials declare futility. terms early stopping, 71% simulated trials stop interim. Among , \\(60\\%/71\\%=84.5\\%\\) trials stop efficacy, \\(11\\%/71\\%=15.5\\) trials stop futility. Usually, one true scenario evaluated. Figure @ref(fig:ex2:summary) summerizes operating characteristics among different true PET-CR rate 10% 80%. Y axis percentage trials return efficacy/futility decision. true rate low comparing response rate control+delta, efficacy decision considered type error, true rate relatively high comparing control+delta, futility decision considered type II error. summary plot Go/Go decisions different true rates","code":"# with 100 simulated trials, assume true PET-CR rate of the combo trial is 40% set.seed(4) res1 <- ocPredprobDist(   nn = c(25, 40, 80), p = 0.75, delta = 0.15, tT = 0.6, phiL = 0.2, phiU = 0.8,   parE = c(5.75, 4.25), parS = c(75, 75), ns = 1e1 )  res1$oc #>      ExpectedN PrStopEarly PrEarlyEff PrEarlyFut PrEfficacy PrFutility #> [1,]      59.5         0.4        0.4          0        0.9        0.1 #>      PrGrayZone #> [1,]          0 set.seed(4) # Used for reproducibility p_par <- seq(0.1, 0.9, by = 0.1)  Mysim <- sapply(p_par, function(x) {   res <- ocPredprobDist(c(25, 40, 80), x,     delta = 0.15, tT = 0.6, phiL = 0.8, phiU = 0.2,     parE = c(5.75, 4.25), parS = c(75, 75), ns = 1e1   )   return(res$oc) })  peffbp <- Mysim[5, ] pfutbp <- Mysim[6, ]  par(mar = c(5, 4, 1, 1) + .1) plot(c(0, 1), c(0, 1), type = \"n\", xlab = \"True Rate\", ylab = \"Pr(Decision)\") grid() lines(p_par, peffbp, lwd = 5, col = \"green\") lines(p_par, pfutbp, lwd = 5, col = \"red\")  legend(.1, .6,   lwd = 5, col = c(\"green\", \"red\"), cex = .75,   c(\"Efficacy Decision\", \"Futility Decision\") )"},{"path":"https://genentech.github.io/phase1b/articles/introduction.html","id":"PredProb-advanced","dir":"Articles","previous_headings":"Examples using phase1b","what":"Advanced predictive probability design","title":"`phase1b`: Tools for Decision Making in Phase 1b Studies","text":"extension basic example, example shows way use predictive probabilities (PP) conduct interim analyses allowing gray zones final analyses, .e.¬†trial results neither efficacy futility decisions made possible (refering advance PP design predictive probability section). final analysis design used XYZ example, basic PP design used example earlier suitable related interim analyses, advanced predictive probability design used. advantage design allows option evaluation additional clinical endpoints PD markers decision falls ‚Äúgray zone‚Äù. Moreover, seperate delta can specified futility decision represent ‚Äúpool clinical improvement‚Äù, makes flexible decision rule. single arm XYZ combo trial discussed previous examples used well. simulation study evaluate operating characteristics study design carried . Similar first example, goal evaluate PET-CR rate \\(P_{combo}\\) testing hypothesis \\(H_0: P_{combo} \\leq P_{control}+15\\%\\) versus \\(H_A: P_{combo} > P_{control}+15\\%\\) efficacy. futility checks conducted testing hypothesis \\(H_0: P_{combo} \\geq P_{control}+5\\%\\) versus \\(H_A: P_{combo} < P_{control}+5\\%\\). , assume 2 interim analyses planed 25 40 patients along final analysis evaluate efficacy futility. Thus final analysis: design declare efficacy posterior probability \\(P_{combo} > P_{control}+15\\%\\) greater threshold \\(\\theta_{U}=0.6\\) (event ) design declare futility posterior probability \\(P_{combo} < P_{control}+5\\%\\) greater threshold \\(\\theta_{F}=0.6\\) (event B) \\(\\theta_{U}\\) \\(\\theta_{F}\\) thresholds set posterior probabilities final analysis. 60% assumed parameters. addition, assume study stops interim Efficacy stop \\(PP(\\text{event })>\\phi_U\\) Futility stop \\(PP(\\text{event B})>\\phi_F\\) \\(\\phi_U=\\phi_F=0.8\\) illustration. \\(\\phi_F\\) \\(\\phi_U\\) independent thresholds can set unequal values depending need users.","code":""},{"path":"https://genentech.github.io/phase1b/articles/introduction.html","id":"predictive-probability-calculation-1","dir":"Articles","previous_headings":"Examples using phase1b > Advanced predictive probability design","what":"Predictive Probability Calculation","title":"`phase1b`: Tools for Decision Making in Phase 1b Studies","text":"following code shows utilize predprobDist() function calculate PPs, 18 PET-CR first interim analysis: According result, study continue since neither PP(event ), 57.6%, PP(event B), 1.4% exceed \\(\\phi_U=\\phi_F=80\\%\\).","code":"# PP(event A) predprobDist(   x = 18, n = 25, Nmax = 80,   delta = 0.15,   thetaT = 0.6,   parE = c(5.75, 4.25),   parS = c(75, 75) )$result #> [1] 0.5755374   ## PP(event B) 1 - predprobDist(   x = 18, n = 25, Nmax = 80,   delta = 0.05,   thetaT = 1 - 0.6,   parE = c(5.75, 4.25),   parS = c(75, 75) )$result #> [1] 0.01368629"},{"path":"https://genentech.github.io/phase1b/articles/introduction.html","id":"operating-characteristics-evaluation-1","dir":"Articles","previous_headings":"Examples using phase1b > Advanced predictive probability design","what":"Operating Characteristics Evaluation","title":"`phase1b`: Tools for Decision Making in Phase 1b Studies","text":"evaluate design operating characteristics assumed true PET-CR rate combo trial, ocPredprobDist() function can used advanced PP design well. , additional arguments, deltaFu, tFu phiFu need specified. Also, phiL argument skipped. evaluate scenario true response rate \\(75\\%\\), following code can used: number simulation 10 reduce computational time code. However, user must increase number 10,000 higher generate correct result. Comparing example earlier, gray zone final analysis. According simulation result, 6% simulated trials declared neither efficacy futility final analysis (.e.¬†‚Äúgray zone‚Äù). expected sample size, 50, tends higher one example earlier. 94% simulated trials declare efficacy, \\(60\\%/94\\%=63.8\\%\\) stop interim. Besides, none simulated trial stop futility. Similar simulation analyses can conducted different assumed true PET-CR rates 75%, complete picture operating characteristics.","code":"# with 100 simulated trials, assume true PET-CR rate of the combo trial is 40% set.seed(4) # Used for reproducibility res1 <- ocPredprobDist(   nn = c(25, 40, 80), p = 0.75,   delta = 0.15, deltaFu = 0.05,   tT = 0.6, tFu = 0.6,   phiU = 0.8, phiFu = 0.8,   parE = c(5.75, 4.25), parS = c(75, 75), ns = 1e1 )  res1$oc #>      ExpectedN PrStopEarly PrEarlyEff PrEarlyFut PrEfficacy PrFutility #> [1,]      59.5         0.4        0.4          0        0.9          0 #>      PrGrayZone #> [1,]        0.1"},{"path":"https://genentech.github.io/phase1b/articles/introduction.html","id":"acknowledge","dir":"Articles","previous_headings":"","what":"Acknowledgments","title":"`phase1b`: Tools for Decision Making in Phase 1b Studies","text":"authors like thank everyone contributed phase1b R-package, particularly James Lymp implemented first functions earlier version R-package.","code":""},{"path":[]},{"path":"https://genentech.github.io/phase1b/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Saban√©s Bov√©. Author, maintainer. Markus Elze. Author. Tony Pourmohamad. Author. Jiawen Zhu. Author. James Lymp. Author. Anastasia Teterina. Author. F. Hoffmann-La Roche Ltd. Copyright holder, funder.","code":""},{"path":"https://genentech.github.io/phase1b/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Saban√©s Bov√© D, Elze M, Pourmohamad T, Zhu J, Lymp J, Teterina (2023). phase1b: Calculations decisions Phase 1b clinical trials. R package version 1.0.0, https://github.com/genentech/phase1b/.","code":"@Manual{,   title = {phase1b: Calculations for decisions on Phase 1b clinical trials},   author = {Daniel {Saban√©s Bov√©} and Markus Elze and Tony Pourmohamad and Jiawen Zhu and James Lymp and Anastasia Teterina},   year = {2023},   note = {R package version 1.0.0},   url = {https://github.com/genentech/phase1b/}, }"},{"path":"https://genentech.github.io/phase1b/index.html","id":"phase1b","dir":"","previous_headings":"","what":"Calculations for decisions on Phase 1b clinical trials","title":"Calculations for decisions on Phase 1b clinical trials","text":"Short description package","code":""},{"path":"https://genentech.github.io/phase1b/reference/ASLdata.html","id":null,"dir":"Reference","previous_headings":"","what":"An example dataset formatted as subject level VAD ‚Äî ASLdata","title":"An example dataset formatted as subject level VAD ‚Äî ASLdata","text":"example dataset formatted subject level VAD","code":""},{"path":"https://genentech.github.io/phase1b/reference/ASLdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An example dataset formatted as subject level VAD ‚Äî ASLdata","text":"","code":"ASLdata"},{"path":"https://genentech.github.io/phase1b/reference/ASLdata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"An example dataset formatted as subject level VAD ‚Äî ASLdata","text":"data frame 80 obs.  4 variables: SUBJID  SEX  AGE  ARM","code":""},{"path":"https://genentech.github.io/phase1b/reference/ATEdata.html","id":null,"dir":"Reference","previous_headings":"","what":"An example dataset formatted as time to event efficacy VAD ‚Äî ATEdata","title":"An example dataset formatted as time to event efficacy VAD ‚Äî ATEdata","text":"example dataset formatted time event efficacy VAD","code":""},{"path":"https://genentech.github.io/phase1b/reference/ATEdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An example dataset formatted as time to event efficacy VAD ‚Äî ATEdata","text":"","code":"ATEdata"},{"path":"https://genentech.github.io/phase1b/reference/ATEdata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"An example dataset formatted as time to event efficacy VAD ‚Äî ATEdata","text":"data frame 80 obs.  4 variables:","code":""},{"path":"https://genentech.github.io/phase1b/reference/Phase1b-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculations for decisions on Phase 1b clinical trials ‚Äî Phase1b-package","title":"Calculations for decisions on Phase 1b clinical trials ‚Äî Phase1b-package","text":"Phase 1b tools","code":""},{"path":"https://genentech.github.io/phase1b/reference/TTEdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Example of time to event dataset ‚Äî TTEdata","title":"Example of time to event dataset ‚Äî TTEdata","text":"example dataset containing oncology time event endpoints formatted time event analysis functions package","code":""},{"path":"https://genentech.github.io/phase1b/reference/TTEdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example of time to event dataset ‚Äî TTEdata","text":"","code":"TTEdata"},{"path":"https://genentech.github.io/phase1b/reference/TTEdata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example of time to event dataset ‚Äî TTEdata","text":"data frame 80 obs.  12 variables: ID Patient number formatted USUBJID treatment Factor w/ 2 levels: \"Control\" \"Experimental\" PFStime progression free surivival, days PFSevent censoring indicator PFS DoR duration response responder responder status, used censoring variable DoR TtR time response TtRevent censoring indicator TtR OStime survival time, days OSevent death indicator SEX covariate AGE covariate","code":""},{"path":"https://genentech.github.io/phase1b/reference/boundsPostprob.html","id":null,"dir":"Reference","previous_headings":"","what":"Decision cutpoints for boundary (based on posterior probability) ‚Äî boundsPostprob","title":"Decision cutpoints for boundary (based on posterior probability) ‚Äî boundsPostprob","text":"function used identify efficacy futility boundaries based posterior probabilities, .e.: Efficacy boundary: find minimum x (xU) Pr(P>p0|x,n,,b) >= tU Futility boundary: find maximum x (xL) Pr(P>p1|x,n,,b) <= tL","code":""},{"path":"https://genentech.github.io/phase1b/reference/boundsPostprob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decision cutpoints for boundary (based on posterior probability) ‚Äî boundsPostprob","text":"","code":"boundsPostprob(nvec, p0, p1 = p0, tL, tU, a, b)"},{"path":"https://genentech.github.io/phase1b/reference/boundsPostprob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decision cutpoints for boundary (based on posterior probability) ‚Äî boundsPostprob","text":"nvec vector number patients p0 efficacy threshold parameter postprob function p1 futility threshold parameter postprob function (default = p0) tL futility boundary probability threshold tU efficacy boundary probability threshold alpha parameter beta prior treatment group b beta parameter beta prior treatment group","code":""},{"path":"https://genentech.github.io/phase1b/reference/boundsPostprob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decision cutpoints for boundary (based on posterior probability) ‚Äî boundsPostprob","text":"matrix sample size nvec, function returns maximum number responses meet futility threshold (xL), corresponding response rate (pL), posterior probability (postL), upper bound one sided 95% CI response rate based exact binomial test (UciL), boundary parameters efficacy: minimal number responses meet efficacy threshold (xU), corresponding response rate (pU), posterior probability (postU) lower bound one sided 95% CI response rate based exact binomial test (LciU).","code":""},{"path":"https://genentech.github.io/phase1b/reference/boundsPostprob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Decision cutpoints for boundary (based on posterior probability) ‚Äî boundsPostprob","text":"","code":"## 40 pts trial with interim looks after each 10 pts., ## efficacy decision if more than 90% probability to be above 20% ORR, ## futility decision if less than 10% probability to be above 20% ORR, ## with uniform prior (i.e. beta(1, 1)) on the ORR: boundsPostprob(   nvec = c(10, 20, 30, 40), p0 = 0.20,   tL = 0.10, tU = 0.90, a = 1, b = 1 ) #>    nvec xL     pL  postL   UciL xU   pU  postU   LciU #> 10   10  0 0.0000 0.0859 0.2589  4 0.40 0.9496 0.1500 #> 20   20  1 0.0500 0.0576 0.2161  7 0.35 0.9569 0.1773 #> 30   30  2 0.0667 0.0374 0.1953  9 0.30 0.9254 0.1663 #> 40   40  4 0.1000 0.0664 0.2144 12 0.30 0.9479 0.1831 ## From this we see e.g. that at the third IA at 30 pts, we would stop for futility ## if 5 or less patients responded, and for efficacy if 9 or more pts responded."},{"path":"https://genentech.github.io/phase1b/reference/boundsPredprob.html","id":null,"dir":"Reference","previous_headings":"","what":"Decision cutpoints for boundary (based on predictive probability) ‚Äî boundsPredprob","title":"Decision cutpoints for boundary (based on predictive probability) ‚Äî boundsPredprob","text":"function used identify efficacy boundary futility boundary based predictive probabilities, .e.: Efficacy boundary: find minimum x (xU) Pr(Pr(P > p | x, Y) >= tT | x) > phiU, Futility boundary: find maximum x (xL) Pr(Pr(P > p | x, Y) >= tT | x) < phiL","code":""},{"path":"https://genentech.github.io/phase1b/reference/boundsPredprob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decision cutpoints for boundary (based on predictive probability) ‚Äî boundsPredprob","text":"","code":"boundsPredprob(nvec, Nmax = max(nvec), p, tT, phiL, phiU, a, b)"},{"path":"https://genentech.github.io/phase1b/reference/boundsPredprob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decision cutpoints for boundary (based on predictive probability) ‚Äî boundsPredprob","text":"nvec vector number patients Nmax maximum number patients end trial (default: maximum nvec) p threshold response rate tT threshold posterior probability p phiL futility boundary predictive probability threshold phiU efficacy boundary predictive probability threshold alpha parameter beta prior treatment group b beta parameter beta prior treatment group","code":""},{"path":"https://genentech.github.io/phase1b/reference/boundsPredprob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decision cutpoints for boundary (based on predictive probability) ‚Äî boundsPredprob","text":"matrix sample size nvec, function returns maximum number responses meet futility threshold (xL), corresponding response rate (pL), predictive probability (ppL) posterior probability (postL), upper bound one sided 95% CI response rate based exact binomial test (UciL), boundary parameters efficacy: minimal number responses meet efficacy threshold (xU), corresponding response rate (pU), predictive probability (ppL) posterior probability (postU), lower bound one sided 95% CI response rate based exact binomial test (LciU).","code":""},{"path":"https://genentech.github.io/phase1b/reference/boundsPredprob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Decision cutpoints for boundary (based on predictive probability) ‚Äî boundsPredprob","text":"","code":"## 40 pts trial with interim looks after each 10 pts., ## final efficacy decision if more than 80% probability to be above 20% ORR, ## final futility decision otherwise. ## Interim efficacy decision if more than 90% predictive probability reach this, ## interim futility decision if less than 10% predictive probability. ## Uniform prior (i.e. beta(1, 1)) on the ORR: boundsPredprob(   nvec = c(10, 20, 30, 40), p = 0.20, tT = 0.80,   phiL = 0.10, phiU = 0.90, a = 1, b = 1 ) #>    nvec xL     pL    ppL  postL   UciL xU   pU    ppU  postU   LciU #> 10   10  0 0.0000 0.0268 0.0859 0.2589  4 0.40 0.9287 0.9496 0.1500 #> 20   20  2 0.1000 0.0269 0.1787 0.2826  7 0.35 0.9600 0.9569 0.1773 #> 30   30  5 0.1667 0.0446 0.3931 0.3190  9 0.30 0.9604 0.9254 0.1663 #> 40   40  9 0.2250 0.0000 0.7040 0.3598 10 0.25 1.0000 0.8177 0.1424 ## From this we see e.g. that at the first IA at 10 pts, we would stop for futility ## if no patient responded, and for efficacy if 4 or more pts responded."},{"path":"https://genentech.github.io/phase1b/reference/dbetaMix.html","id":null,"dir":"Reference","previous_headings":"","what":"Beta-Mixture density function ‚Äî dbetaMix","title":"Beta-Mixture density function ‚Äî dbetaMix","text":"beta-mixture distribution defined K beta parameters corresponding weights.","code":""},{"path":"https://genentech.github.io/phase1b/reference/dbetaMix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beta-Mixture density function ‚Äî dbetaMix","text":"","code":"dbetaMix(x, par, weights, log = FALSE)"},{"path":"https://genentech.github.io/phase1b/reference/dbetaMix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beta-Mixture density function ‚Äî dbetaMix","text":"x (numeric): number successes. par (matrix): beta parameters matrix, K rows 2 columns, corresponding beta parameters K components. weights (numeric): mixture weights beta mixture prior length K. element corresponds row beta parameters par. log (flag): whether log values beta-mixture density function returned.","code":""},{"path":"https://genentech.github.io/phase1b/reference/dbetaMix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Beta-Mixture density function ‚Äî dbetaMix","text":"(log) density values","code":""},{"path":"https://genentech.github.io/phase1b/reference/dbetaMix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Beta-Mixture density function ‚Äî dbetaMix","text":"function calculates beta-mixture density values.","code":""},{"path":"https://genentech.github.io/phase1b/reference/dbetaMix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Beta-Mixture density function ‚Äî dbetaMix","text":"","code":"# Calculating the density of a mixture. dbetaMix(x = 0.3, par = rbind(c(0.2, 0.4)), weights = 1) #> [1] 0.4745802  # With 2 mixture components dbetaMix(   x = 0.3, par = rbind(c(0.2, 0.4), c(1, 1)),   weights = c(0.6, 0.4) ) #> [1] 0.6847481  # Can also specify x as a vector dbetaMix(   x = seq(0, 1, .01),   par = rbind(c(0.2, 0.4), c(1, 1)),   weights = c(0.6, 0.4) ) #>   [1]       Inf 3.9142739 2.4307529 1.8772591 1.5808806 1.3940462 1.2646075 #>   [8] 1.1692164 1.0957802 1.0373792 0.9897544 0.9501341 0.9166330 0.8879221 #>  [15] 0.8630365 0.8412578 0.8220396 0.8049587 0.7896821 0.7759437 0.7635287 #>  [22] 0.7522614 0.7419966 0.7326136 0.7240109 0.7161025 0.7088154 0.7020870 #>  [29] 0.6958631 0.6900971 0.6847481 0.6797808 0.6751639 0.6708699 0.6668746 #>  [36] 0.6631566 0.6596969 0.6564785 0.6534865 0.6507074 0.6481293 0.6457415 #>  [43] 0.6435345 0.6415000 0.6396303 0.6379190 0.6363601 0.6349486 0.6336801 #>  [50] 0.6325508 0.6315574 0.6306975 0.6299690 0.6293704 0.6289006 0.6285594 #>  [57] 0.6283467 0.6282631 0.6283099 0.6284887 0.6288020 0.6292525 0.6298440 #>  [64] 0.6305809 0.6314682 0.6325119 0.6337191 0.6350978 0.6366571 0.6384078 #>  [71] 0.6403619 0.6425332 0.6449379 0.6475940 0.6505229 0.6537486 0.6572996 #>  [78] 0.6612086 0.6655140 0.6702611 0.6755033 0.6813044 0.6877413 0.6949069 #>  [85] 0.7029154 0.7119082 0.7220632 0.7336071 0.7468341 0.7621338 0.7800342 #>  [92] 0.8012713 0.8269062 0.8585340 0.8986820 0.9516401 1.0254085 1.1371003 #>  [99] 1.3324335 1.8018727       Inf"},{"path":"https://genentech.github.io/phase1b/reference/dbetabinom.html","id":null,"dir":"Reference","previous_headings":"","what":"Beta-Binomial Density Function ‚Äî dbetabinom","title":"Beta-Binomial Density Function ‚Äî dbetabinom","text":"Calculates density function beta-binomial distribution. beta-binomial density function following form: p(x) = (m! / (x!*(m-x)!)) * Beta(x+,m-x+b) / Beta(,b)","code":""},{"path":"https://genentech.github.io/phase1b/reference/dbetabinom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beta-Binomial Density Function ‚Äî dbetabinom","text":"","code":"dbetabinom(x, m, a, b, log = FALSE)"},{"path":"https://genentech.github.io/phase1b/reference/dbetabinom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beta-Binomial Density Function ‚Äî dbetabinom","text":"x (numeric): number successes. m (number): number trials. (numeric): first parameter beta distribution. b (numeric): second parameter beta distribution. log (flag): whether return log density value (default).","code":""},{"path":"https://genentech.github.io/phase1b/reference/dbetabinom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Beta-Binomial Density Function ‚Äî dbetabinom","text":"density values beta-binomial distribution x.","code":""},{"path":"https://genentech.github.io/phase1b/reference/dbetabinom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Beta-Binomial Density Function ‚Äî dbetabinom","text":"","code":"# dbetabinom -- dbetabinom(x = 2, m = 29, a = 0.2, b = 0.4, log = FALSE) #> [1] 0.04286893  # Can also specify x as a vector. dbetabinom(x = 1:28, m = 29, a = 0.2, b = 0.4, log = FALSE) #>  [1] 0.06991718 0.04286893 0.03215170 0.02632895 0.02266016 0.02014236 #>  [7] 0.01831825 0.01694866 0.01589629 0.01507689 0.01443628 0.01393847 #> [13] 0.01355928 0.01328256 0.01309808 0.01300034 0.01298800 0.01306396 #> [19] 0.01323585 0.01351746 0.01393126 0.01451316 0.01532164 0.01645657 #> [25] 0.01810223 0.02064146 0.02503732 0.03474567"},{"path":"https://genentech.github.io/phase1b/reference/dbetabinomMix.html","id":null,"dir":"Reference","previous_headings":"","what":"Beta-Mixture-Binomial Density Function ‚Äî dbetabinomMix","title":"Beta-Mixture-Binomial Density Function ‚Äî dbetabinomMix","text":"Calculates density function mixture beta-binomial distributions.","code":""},{"path":"https://genentech.github.io/phase1b/reference/dbetabinomMix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beta-Mixture-Binomial Density Function ‚Äî dbetabinomMix","text":"","code":"dbetabinomMix(x, m, par, weights, log = FALSE)"},{"path":"https://genentech.github.io/phase1b/reference/dbetabinomMix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beta-Mixture-Binomial Density Function ‚Äî dbetabinomMix","text":"x (numeric): number successes. m (number): number trials. par (matrix): beta parameters matrix, K rows 2 columns, corresponding beta parameters K components. weights (numeric): mixture weights beta mixture prior length K. element corresponds row beta parameters par. log (flag): whether return log density value (default).","code":""},{"path":"https://genentech.github.io/phase1b/reference/dbetabinomMix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Beta-Mixture-Binomial Density Function ‚Äî dbetabinomMix","text":"(log) density values mixture beta-binomial distributions x.","code":""},{"path":"https://genentech.github.io/phase1b/reference/dbetabinomMix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Beta-Mixture-Binomial Density Function ‚Äî dbetabinomMix","text":"","code":"dbetabinomMix(x = 2, m = 29, par = rbind(c(0.2, 0.4)), weights = 1) #> [1] 0.04286893  dbetabinomMix(   x = 2, m = 29, par = rbind(c(0.2, 0.4), c(1, 1)),   weights = c(0.6, 0.4) ) #> [1] 0.03905469 # x could be a vector dbetabinomMix(   x = 1:28, m = 29, par = rbind(c(0.2, 0.4), c(1, 1)),   weights = c(0.6, 0.4) ) #>  [1] 0.05528364 0.03905469 0.03262435 0.02913070 0.02692943 0.02541875 #>  [7] 0.02432428 0.02350253 0.02287111 0.02237947 0.02199510 0.02169642 #> [13] 0.02146890 0.02130287 0.02119218 0.02113354 0.02112613 0.02117171 #> [19] 0.02127484 0.02144381 0.02169209 0.02204123 0.02252632 0.02320728 #> [25] 0.02419467 0.02571821 0.02835573 0.03418074"},{"path":"https://genentech.github.io/phase1b/reference/dbetadiff.html","id":null,"dir":"Reference","previous_headings":"","what":"The Difference between Two Beta Distributions ‚Äî dbetadiff","title":"The Difference between Two Beta Distributions ‚Äî dbetadiff","text":"Probability Density Function difference two Beta Distributions. Density, distribution function quantile function distribution difference two Beta distributions parameters parX parY. denote X Y two random variables representing response rate Control Treatment group respectively. assignment Control Treatment practically interchangeable. denote Z difference two groups Z = Y-X.","code":""},{"path":"https://genentech.github.io/phase1b/reference/dbetadiff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Difference between Two Beta Distributions ‚Äî dbetadiff","text":"","code":"dbetadiff(   z,   parY,   parX,   eps = .Machine$double.eps,   rel.tol = .Machine$double.eps^0.1 )"},{"path":"https://genentech.github.io/phase1b/reference/dbetadiff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Difference between Two Beta Distributions ‚Äî dbetadiff","text":"z (numeric): vector differences Control Treatment arms Z = Y-X parY (numeric): two parameters Y's Beta distribution (Treatment) parX (numeric): two parameters X's Beta distribution (Control) eps (number): lowest floating point number lower bound integration rel.tol (number): used stats::integrate()","code":""},{"path":"https://genentech.github.io/phase1b/reference/dbetadiff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Difference between Two Beta Distributions ‚Äî dbetadiff","text":"density values","code":""},{"path":"https://genentech.github.io/phase1b/reference/dbetadiff.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"The Difference between Two Beta Distributions ‚Äî dbetadiff","text":"X Y can either Control Treatment Z = X-Y, subject assumptions.","code":""},{"path":"https://genentech.github.io/phase1b/reference/dbetadiff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Difference between Two Beta Distributions ‚Äî dbetadiff","text":"","code":"# The following examples use these parameters: parX <- c(1, 52) parY <- c(5.5, 20.5)  # The difference between Control and Treatment is denoted as z. z <- seq(from = -1, to = 1, length = 100) plot(z, dbetadiff(z, parY = parY, parX = parX),   type = \"l\" )   # Calculate probability of Go, if difference was at least 15%. test <- integrate(   f = dbetadiff,   parY = parY,   parX = parX,   lower = 0.15,   upper = 1 ) str(test) #> List of 5 #>  $ value       : num 0.677 #>  $ abs.error   : num 2.41e-07 #>  $ subdivisions: int 1 #>  $ message     : chr \"OK\" #>  $ call        : language integrate(f = dbetadiff, lower = 0.15, upper = 1, parY = parY, parX = parX) #>  - attr(*, \"class\")= chr \"integrate\" test$value #> [1] 0.677447  # Calculate probability of Stop, if difference was at most 50%. integrate(   f = dbetadiff,   parY = parY,   parX = parX,   lower = -1,   upper = 0.5 ) #> 0.9993974 with absolute error < 8.6e-06"},{"path":"https://genentech.github.io/phase1b/reference/h_getBetamixPost.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Beta-Mixture-Binomial Posterior Distribution ‚Äî h_getBetamixPost","title":"Compute Beta-Mixture-Binomial Posterior Distribution ‚Äî h_getBetamixPost","text":"helper function computes posterior parameters beta-mixture-binomial distribution.","code":""},{"path":"https://genentech.github.io/phase1b/reference/h_getBetamixPost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Beta-Mixture-Binomial Posterior Distribution ‚Äî h_getBetamixPost","text":"","code":"h_getBetamixPost(x, n, par, weights)"},{"path":"https://genentech.github.io/phase1b/reference/h_getBetamixPost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Beta-Mixture-Binomial Posterior Distribution ‚Äî h_getBetamixPost","text":"x (numeric): number successes. par (matrix): beta parameters matrix, K rows 2 columns, corresponding beta parameters K components. weights (numeric): mixture weights beta mixture prior length K. element corresponds row beta parameters par.","code":""},{"path":"https://genentech.github.io/phase1b/reference/h_getBetamixPost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Beta-Mixture-Binomial Posterior Distribution ‚Äî h_getBetamixPost","text":"list updated beta parameters weights.","code":""},{"path":"https://genentech.github.io/phase1b/reference/h_get_bounds.html","id":null,"dir":"Reference","previous_headings":"","what":"Generating bounds for the Integration of Beta Mixture Posterior ‚Äî h_get_bounds","title":"Generating bounds for the Integration of Beta Mixture Posterior ‚Äî h_get_bounds","text":"Using quantile Beta Mixture Distribution parameters given standard care S experimental group E determine bounds inputs [stats::integrate()].","code":""},{"path":"https://genentech.github.io/phase1b/reference/h_get_bounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generating bounds for the Integration of Beta Mixture Posterior ‚Äî h_get_bounds","text":"","code":"h_get_bounds(controlBetamixPost)"},{"path":"https://genentech.github.io/phase1b/reference/h_get_bounds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generating bounds for the Integration of Beta Mixture Posterior ‚Äî h_get_bounds","text":"controlBetamixPost (list): list posterior parameters beta-mixture-binomial distribution generic names par weights. See [getBetaMix()].","code":""},{"path":"https://genentech.github.io/phase1b/reference/h_get_bounds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generating bounds for the Integration of Beta Mixture Posterior ‚Äî h_get_bounds","text":"Integrand function","code":""},{"path":"https://genentech.github.io/phase1b/reference/h_get_decision.html","id":null,"dir":"Reference","previous_headings":"","what":"Generating random decision and sample size looks. ‚Äî h_get_decision","title":"Generating random decision and sample size looks. ‚Äî h_get_decision","text":"helper function ocPostprob generate numeric decisions decisions random looks all_sizes.","code":""},{"path":"https://genentech.github.io/phase1b/reference/h_get_decision.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generating random decision and sample size looks. ‚Äî h_get_decision","text":"","code":"h_get_decision(nnr, truep, p0, p1, parE = c(1, 1), nnE, nnF, tL, tU)"},{"path":"https://genentech.github.io/phase1b/reference/h_get_decision.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generating random decision and sample size looks. ‚Äî h_get_decision","text":"nnr (numeric): union nnEand nnF. truep (number): assumed true response rate true rate (scenario). p0 (number): lower Futility threshold response rate. p1 (number): upper Efficacy threshold response rate. parE (numeric): alpha beta parameters prior treatment proportion. Default set alpha = 1, beta = 1, uniform prior. nnE (numeric): sample size sizes study can stopped Efficacy decision. different Futility decision, specify nnF. nnF (numeric): sample size sizes study can stopped Futility decision different Efficacy decision. tL (number): posterior probability threshold p0. tU (number): posterior probability threshold p1.","code":""},{"path":"https://genentech.github.io/phase1b/reference/h_get_decision.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generating random decision and sample size looks. ‚Äî h_get_decision","text":"list following objects : decision : resulting numeric decision, one TRUE Go, FALSE Stop, NA Gray zone. all_sizes : resulting numeric look size, anything maximum look size indicated interim, Futility Efficacy .","code":""},{"path":"https://genentech.github.io/phase1b/reference/h_get_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Generating random distance in given looks for sample sizes for Efficacy and Futility. ‚Äî h_get_distance","title":"Generating random distance in given looks for sample sizes for Efficacy and Futility. ‚Äî h_get_distance","text":"helper function ocPostprob generate random distance's wiggle room around looks nn. Numeric looks nn must minimum two elements generate length(nn)-1 distances.","code":""},{"path":"https://genentech.github.io/phase1b/reference/h_get_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generating random distance in given looks for sample sizes for Efficacy and Futility. ‚Äî h_get_distance","text":"","code":"h_get_distance(nn)"},{"path":"https://genentech.github.io/phase1b/reference/h_get_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generating random distance in given looks for sample sizes for Efficacy and Futility. ‚Äî h_get_distance","text":"nn (number numeric): union nnE nnF (futility analysis looks exists) supplied.","code":""},{"path":"https://genentech.github.io/phase1b/reference/h_get_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generating random distance in given looks for sample sizes for Efficacy and Futility. ‚Äî h_get_distance","text":"numeric length(nn)-1 elements.","code":""},{"path":"https://genentech.github.io/phase1b/reference/h_get_looks.html","id":null,"dir":"Reference","previous_headings":"","what":"Generating looks from random distance ‚Äî h_get_looks","title":"Generating looks from random distance ‚Äî h_get_looks","text":"helper function ocPostprob applies numeric element dist looks nn.","code":""},{"path":"https://genentech.github.io/phase1b/reference/h_get_looks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generating looks from random distance ‚Äî h_get_looks","text":"","code":"h_get_looks(dist, nnE, nnF)"},{"path":"https://genentech.github.io/phase1b/reference/h_get_looks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generating looks from random distance ‚Äî h_get_looks","text":"dist (numeric logical): distance random looks around look locations nn, distis generated h_get_distance numeric least one element. NULL, one location look set nnE nnF. nnE (numeric): sample size sizes study can stopped Efficacy decision. different Futility decision, specify nnF. nnF (numeric): sample size sizes study can stopped Futility decision different Efficacy decision.","code":""},{"path":"https://genentech.github.io/phase1b/reference/h_get_looks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generating looks from random distance ‚Äî h_get_looks","text":"Uses distance h_get_distance add looks, creating wiggled looks: nnrE result Efficacy looks random distance added. nnrF result Futility looks random distance added.","code":""},{"path":"https://genentech.github.io/phase1b/reference/h_get_oc.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating list for operating characteristics. ‚Äî h_get_oc","title":"Creating list for operating characteristics. ‚Äî h_get_oc","text":"Generates operating characteristics.","code":""},{"path":"https://genentech.github.io/phase1b/reference/h_get_oc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating list for operating characteristics. ‚Äî h_get_oc","text":"","code":"h_get_oc(all_sizes, nnr, decision, nnrE, nnrF)"},{"path":"https://genentech.github.io/phase1b/reference/h_get_oc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating list for operating characteristics. ‚Äî h_get_oc","text":"all_sizes (numeric): sample sizes looks simulated length(sim) times dist applied. nnr (numeric): union nnEand nnF. decision (numeric): Go, Stop Gray Zone decisions looks simulated length(sim) times. nnrE (numeric): looks random distance, applied nnE. nnrF (numeric): looks random distance, applied nnF.","code":""},{"path":"https://genentech.github.io/phase1b/reference/h_get_oc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creating list for operating characteristics. ‚Äî h_get_oc","text":"list results containing : ExpectedN: expected number patients trials PrStopEarly: probability stop trial early (reaching maximum sample size) PrEarlyEff: probability Early Go decision PrEarlyFut: probability Early Stop decision PrEfficacy: probability Go decision PrFutility: probability Stop decision PrGrayZone: probability Go Stop ,\"Evaluate\" Gray decision zone","code":""},{"path":"https://genentech.github.io/phase1b/reference/h_integrand.html","id":null,"dir":"Reference","previous_headings":"","what":"The Posterior Beta Mixture Integrand when Delta is absolute\nThe helper function to generate Integrand function when relativeDelta = FALSE,\na default setting. ‚Äî h_integrand","title":"The Posterior Beta Mixture Integrand when Delta is absolute\nThe helper function to generate Integrand function when relativeDelta = FALSE,\na default setting. ‚Äî h_integrand","text":"Posterior Beta Mixture Integrand Delta absolute helper function generate Integrand function relativeDelta = FALSE, default setting.","code":""},{"path":"https://genentech.github.io/phase1b/reference/h_integrand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Posterior Beta Mixture Integrand when Delta is absolute\nThe helper function to generate Integrand function when relativeDelta = FALSE,\na default setting. ‚Äî h_integrand","text":"","code":"h_integrand(p_s, delta, activeBetamixPost, controlBetamixPost)"},{"path":"https://genentech.github.io/phase1b/reference/h_integrand.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Posterior Beta Mixture Integrand when Delta is absolute\nThe helper function to generate Integrand function when relativeDelta = FALSE,\na default setting. ‚Äî h_integrand","text":"p_s (number): probability success response rate standard care control S group. delta (number): margin response rate treatment group better standard care control S group. Note can also negative, e.g. non-inferiority assessed. activeBetamixPost (list): list posterior parameters beta-mixture-binomial distribution generic names par weights. See [getBetaMix()]. controlBetamixPost (list): list posterior parameters beta-mixture-binomial distribution generic names par weights. See [getBetaMix()].","code":""},{"path":"https://genentech.github.io/phase1b/reference/h_integrand.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Posterior Beta Mixture Integrand when Delta is absolute\nThe helper function to generate Integrand function when relativeDelta = FALSE,\na default setting. ‚Äî h_integrand","text":"Function argument [stats::integrate()].","code":""},{"path":"https://genentech.github.io/phase1b/reference/h_integrand_relDelta.html","id":null,"dir":"Reference","previous_headings":"","what":"The Posterior Beta Mixture Integrand when delta is relative ‚Äî h_integrand_relDelta","title":"The Posterior Beta Mixture Integrand when delta is relative ‚Äî h_integrand_relDelta","text":"helper function generate Integrand function relativeDelta = TRUE.","code":""},{"path":"https://genentech.github.io/phase1b/reference/h_integrand_relDelta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Posterior Beta Mixture Integrand when delta is relative ‚Äî h_integrand_relDelta","text":"","code":"h_integrand_relDelta(p_s, delta, activeBetamixPost, controlBetamixPost)"},{"path":"https://genentech.github.io/phase1b/reference/h_integrand_relDelta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Posterior Beta Mixture Integrand when delta is relative ‚Äî h_integrand_relDelta","text":"p_s (number): probability success response rate standard care control S group. delta (number): margin response rate treatment group better standard care control S group. Note can also negative, e.g. non-inferiority assessed. activeBetamixPost (list): list posterior parameters beta-mixture-binomial distribution generic names par weights. See [getBetaMix()]. controlBetamixPost (list): list posterior parameters beta-mixture-binomial distribution generic names par weights. See [getBetaMix()].","code":""},{"path":"https://genentech.github.io/phase1b/reference/h_integrand_relDelta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Posterior Beta Mixture Integrand when delta is relative ‚Äî h_integrand_relDelta","text":"Function argument [stats::integrate()].","code":""},{"path":"https://genentech.github.io/phase1b/reference/h_predprobdist.html","id":null,"dir":"Reference","previous_headings":"","what":"The predictive probability of success in two-arm studies. ‚Äî h_predprobdist","title":"The predictive probability of success in two-arm studies. ‚Äî h_predprobdist","text":"helper function generate predictive probability success based difference treatment group (E) control standard care (S) group.","code":""},{"path":"https://genentech.github.io/phase1b/reference/h_predprobdist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The predictive probability of success in two-arm studies. ‚Äî h_predprobdist","text":"","code":"h_predprobdist(   x,   n,   xS,   nS,   Nmax,   NmaxControl,   delta,   relativeDelta,   parE,   parS,   weights,   weightsS,   thetaT )"},{"path":"https://genentech.github.io/phase1b/reference/h_predprobdist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The predictive probability of success in two-arm studies. ‚Äî h_predprobdist","text":"x (number): number successes E group interim. n (number): number patients E group interim. xS (number): number successes S group interim. Nmax (number): maximum number patients E group final analysis. NmaxControl (number): maximum number patients S group final analysis. delta (number): difference response rates met. relativeDelta (flag): TRUE, relativeDelta used. Represents minimum response rate magnitude delta S non-responding patients. See [postprobDist()]. parE (numeric): parameters beta distribution. matrix, needs 2 columns, row corresponds component beta-mixture distribution E group. See details. parS (numeric): parameters beta distribution. matrix, needs 2 columns, row corresponds component beta-mixture distribution S group. weights (numeric): mixture weights beta mixture prior. weightsS (numeric): weights S group. thetaT (number): threshold probability used.","code":""},{"path":"https://genentech.github.io/phase1b/reference/h_predprobdist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The predictive probability of success in two-arm studies. ‚Äî h_predprobdist","text":"list returned names result predictive probability table numeric values counts responses remaining patients, density probabilities counts, posterior corresponding probabilities threshold, successfor trial success indicators.","code":""},{"path":"https://genentech.github.io/phase1b/reference/h_predprobdist_single_arm.html","id":null,"dir":"Reference","previous_headings":"","what":"The predictive probability of success in single arm studies. ‚Äî h_predprobdist_single_arm","title":"The predictive probability of success in single arm studies. ‚Äî h_predprobdist_single_arm","text":"helper function generate predictive probability success based treatment group (E) control standard care (S)., indicated NmaxControl == 0.","code":""},{"path":"https://genentech.github.io/phase1b/reference/h_predprobdist_single_arm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The predictive probability of success in single arm studies. ‚Äî h_predprobdist_single_arm","text":"","code":"h_predprobdist_single_arm(   x,   mE,   Nmax,   delta,   relativeDelta,   parE,   parS,   weights,   weightsS,   thetaT,   density )"},{"path":"https://genentech.github.io/phase1b/reference/h_predprobdist_single_arm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The predictive probability of success in single arm studies. ‚Äî h_predprobdist_single_arm","text":"x (number): number successes E group interim. (number): number successes remaining Nmax-n number patients treatment E group. Nmax (number): maximum number patients E group final analysis. delta (number): difference response rates met. relativeDelta (flag): TRUE, relativeDelta used. Represents minimum response rate magnitude delta S non-responding patients. See [postprobDist()]. parE (numeric): parameters beta distribution. matrix, needs 2 columns, row corresponds component beta-mixture distribution E group. See details. parS (numeric): parameters beta distribution. matrix, needs 2 columns, row corresponds component beta-mixture distribution S group. weights (numeric): mixture weights beta mixture prior. weightsS (numeric): weights S group. thetaT (number): threshold probability used. density (numeric): beta binomial mixed density future success Nmax-n patients E group.","code":""},{"path":"https://genentech.github.io/phase1b/reference/h_predprobdist_single_arm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The predictive probability of success in single arm studies. ‚Äî h_predprobdist_single_arm","text":"list returned names result predictive probability table numeric values counts responses remaining patients, probabilities counts, corresponding probabilities threshold, trial success indicators.","code":""},{"path":"https://genentech.github.io/phase1b/reference/is.bool.html","id":null,"dir":"Reference","previous_headings":"","what":"Predicate checking for a boolean option ‚Äî is.bool","title":"Predicate checking for a boolean option ‚Äî is.bool","text":"Predicate checking boolean option","code":""},{"path":"https://genentech.github.io/phase1b/reference/is.bool.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predicate checking for a boolean option ‚Äî is.bool","text":"","code":"is.bool(x)"},{"path":"https://genentech.github.io/phase1b/reference/is.bool.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predicate checking for a boolean option ‚Äî is.bool","text":"x object checked","code":""},{"path":"https://genentech.github.io/phase1b/reference/is.bool.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predicate checking for a boolean option ‚Äî is.bool","text":"Returns TRUE x length one logical vector (.e., scalar)","code":""},{"path":"https://genentech.github.io/phase1b/reference/is.probRange.html","id":null,"dir":"Reference","previous_headings":"","what":"Predicate checking for a probability range ‚Äî is.probRange","title":"Predicate checking for a probability range ‚Äî is.probRange","text":"Predicate checking probability range","code":""},{"path":"https://genentech.github.io/phase1b/reference/is.probRange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predicate checking for a probability range ‚Äî is.probRange","text":"","code":"is.probRange(x, bounds = TRUE)"},{"path":"https://genentech.github.io/phase1b/reference/is.probRange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predicate checking for a probability range ‚Äî is.probRange","text":"x object checked bounds whether include bounds 0 1 (default)","code":""},{"path":"https://genentech.github.io/phase1b/reference/is.probRange.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predicate checking for a probability range ‚Äî is.probRange","text":"Returns TRUE x probability range","code":""},{"path":"https://genentech.github.io/phase1b/reference/is.probability.html","id":null,"dir":"Reference","previous_headings":"","what":"Predicate checking for a probability ‚Äî is.probability","title":"Predicate checking for a probability ‚Äî is.probability","text":"Predicate checking probability","code":""},{"path":"https://genentech.github.io/phase1b/reference/is.probability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predicate checking for a probability ‚Äî is.probability","text":"","code":"is.probability(x, bounds = TRUE)"},{"path":"https://genentech.github.io/phase1b/reference/is.probability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predicate checking for a probability ‚Äî is.probability","text":"x object checked bounds whether include bounds 0 1 (default)","code":""},{"path":"https://genentech.github.io/phase1b/reference/is.probability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predicate checking for a probability ‚Äî is.probability","text":"Returns TRUE x probability","code":""},{"path":"https://genentech.github.io/phase1b/reference/is.scalar.html","id":null,"dir":"Reference","previous_headings":"","what":"Checking for scalar ‚Äî is.scalar","title":"Checking for scalar ‚Äî is.scalar","text":"Checking scalar","code":""},{"path":"https://genentech.github.io/phase1b/reference/is.scalar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checking for scalar ‚Äî is.scalar","text":"","code":"is.scalar(x)"},{"path":"https://genentech.github.io/phase1b/reference/is.scalar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checking for scalar ‚Äî is.scalar","text":"x input","code":""},{"path":"https://genentech.github.io/phase1b/reference/is.scalar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checking for scalar ‚Äî is.scalar","text":"Returns TRUE x length one vector (.e., scalar)","code":""},{"path":"https://genentech.github.io/phase1b/reference/logit.html","id":null,"dir":"Reference","previous_headings":"","what":"The Logit Function ‚Äî logit","title":"The Logit Function ‚Äî logit","text":"just calculates logit.","code":""},{"path":"https://genentech.github.io/phase1b/reference/logit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Logit Function ‚Äî logit","text":"","code":"logit(x)"},{"path":"https://genentech.github.io/phase1b/reference/logit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Logit Function ‚Äî logit","text":"x (numeric): probabilities transform.","code":""},{"path":"https://genentech.github.io/phase1b/reference/logit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Logit Function ‚Äî logit","text":"logit x.","code":""},{"path":"https://genentech.github.io/phase1b/reference/logit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Logit Function ‚Äî logit","text":"","code":"x <- seq(0.1, 0.9, 0.1) logit(x) #> [1] -2.1972246 -1.3862944 -0.8472979 -0.4054651  0.0000000  0.4054651  0.8472979 #> [8]  1.3862944  2.1972246"},{"path":"https://genentech.github.io/phase1b/reference/myPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the Beta distribution ‚Äî myPlot","title":"Plot the Beta distribution ‚Äî myPlot","text":"function plot PDF beta distribution","code":""},{"path":"https://genentech.github.io/phase1b/reference/myPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the Beta distribution ‚Äî myPlot","text":"","code":"myPlot(alpha, beta, ...)"},{"path":"https://genentech.github.io/phase1b/reference/myPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the Beta distribution ‚Äî myPlot","text":"alpha first parameter Beta distribution beta second parameter Beta distribution ... additional arguments plot","code":""},{"path":"https://genentech.github.io/phase1b/reference/myPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the Beta distribution ‚Äî myPlot","text":"nothing, produces plot side effect","code":""},{"path":"https://genentech.github.io/phase1b/reference/myPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the Beta distribution ‚Äî myPlot","text":"","code":"myPlot(1, 2)  myPlot(1, 1)"},{"path":"https://genentech.github.io/phase1b/reference/myPlotDiff.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Diff Between two Beta distributions ‚Äî myPlotDiff","title":"Plot Diff Between two Beta distributions ‚Äî myPlotDiff","text":"function plot PDF diffience two Beta distributions","code":""},{"path":"https://genentech.github.io/phase1b/reference/myPlotDiff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Diff Between two Beta distributions ‚Äî myPlotDiff","text":"","code":"myPlotDiff(parY, parX, cut_B = 0.2, cut_W = 0.1, shade = 1, note = 1, ...)"},{"path":"https://genentech.github.io/phase1b/reference/myPlotDiff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Diff Between two Beta distributions ‚Äî myPlotDiff","text":"parY non-negative parameters treatment Beta distribution. parX non-negative parameters historical control Beta distribution cut_B meaningful improvement threshold cut_W poor improvement throshold shade paint two areas curve, default value=1 \"yes\". numbers stands \"\"; note show values colored area, default value=1 \"yes\". numbers stands \"\" ... additional arguments plot","code":""},{"path":"https://genentech.github.io/phase1b/reference/myPlotDiff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Diff Between two Beta distributions ‚Äî myPlotDiff","text":"nothing, produces plot side effect","code":""},{"path":"https://genentech.github.io/phase1b/reference/myPlotDiff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Diff Between two Beta distributions ‚Äî myPlotDiff","text":"","code":"myPlotDiff(c(5, 10), c(2, 5), 0.2, 0.05, 1, 0)"},{"path":"https://genentech.github.io/phase1b/reference/oc2.html","id":null,"dir":"Reference","previous_headings":"","what":"Run simulations to obtain operating characteristics for methods that include\nhistorical data on control ‚Äî oc2","title":"Run simulations to obtain operating characteristics for methods that include\nhistorical data on control ‚Äî oc2","text":"Interim looks done three times total including last one, approximately equal distance looks.","code":""},{"path":"https://genentech.github.io/phase1b/reference/oc2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run simulations to obtain operating characteristics for methods that include\nhistorical data on control ‚Äî oc2","text":"","code":"oc2(   method = c(\"PointMass.Bayes\", \"Prior.Bayes\", \"RCT.Bayes\", \"RCT.BayesRobust\",     \"RCTvanilla.Bayes\", \"PointMass.PP\", \"Prior.PP\", \"RCT.PP\", \"RCT.PProbust\",     \"RCTvanilla.PP\"),   nSim,   histSize,   trialSize,   drift = 0,   controlRate,   nmeRate,   delta,   tL = 0.8,   tU = 0.8,   tT = 0.85,   phiL = 0.05,   phiU = 0.95,   parE = c(1, 1),   weights )"},{"path":"https://genentech.github.io/phase1b/reference/oc2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run simulations to obtain operating characteristics for methods that include\nhistorical data on control ‚Äî oc2","text":"method 8 different methods can selected: PointMass.Bayes: single arm trial pointmass derived historical data control response rate, see postprob Prior.Bayes: single arm trial prior derived historical data control response rate, see postprobDist RCT.Bayes: RCT (1:1 randomization) prior derived historical data control response rate, see postprobDist RCT.BayesRobust: RCT.Bayes, robust prior, enabling dynamic borrowing historical information RCT.vanillaBayes: RCT, using historical control data PointMass.PP: single arm trial pointmass derived historical data control response rate, using predictive probability method, see predprob Prior.PP: single arm trial prior derived historical data control response rate, using predictive probability method, see predprobDist RCT.PP: RCT (1:1 randomization) prior derived historical data control response rate, using predictive probability method, see predprobDist RCT.PProbust: RCT.PP,  robust prior, enabling dynamic borrowing historical information RCT.vanillaPP: RCT using predictive probability method, using historical control data nSim number trials simulate histSize historical data size trialSize total trial sample size drift drift parameter: actual control response rate historical control response rate plus drift. Hence positive drift means controls now higher response rates historical trial. controlRate actual control response rate nmeRate treatment response rate delta delta stopping efficacy used. Implicitly zero delta stopping futility used. tL Bayes methods: probability threshold control response rate (default: 0.8) tU Bayes methods: probability threshold control response rate + delta (default: 0.8) tT threshold probability response rate p0 end trial (default: 0.85) phiL lower threshold predictive probability (default: 0.05) phiU upper threshold predictive probability (default: 0.95) parE beta parameters matrix, K rows 2 columns, corresponding beta parameters K components. Default uniform prior. weights mixture weights beta mixture prior. Default uniform weights across mixture components.","code":""},{"path":"https://genentech.github.io/phase1b/reference/oc2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run simulations to obtain operating characteristics for methods that include\nhistorical data on control ‚Äî oc2","text":"Returned operating characteristics matrix include: ExpectedN: expected number patients trials ExpectedNactive: expected number patients treatment PrStopEarly: probability stop trial early (reaching maximum sample size) PrEarlyEff: probability decide efficacy early PrEarlyFut: probability decide futility early PrEfficacy: probability decide efficacy PrFutility: probability decide futility PrGrayZone: probability decision end (\"gray zone\")","code":""},{"path":"https://genentech.github.io/phase1b/reference/oc2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run simulations to obtain operating characteristics for methods that include\nhistorical data on control ‚Äî oc2","text":"","code":"## this looks OK now: oc2(   method = \"Prior.PP\",   histSize = 1e5L,   trialSize = 100,   drift = 0,   controlRate = 0.5,   nmeRate = 0.70,   nSim = 20,   delta = 0.15 ) #>      ExpectedN ExpectedNactive ExpectedNcontrol PrStopEarly PrEarlyEff #> [1,]     85.15           85.15                0         0.3       0.15 #>      PrEarlyFut PrEfficacy PrFutility PrGrayZone #> [1,]       0.15        0.5        0.5          0  ## this one as well: oc2(   method = \"Prior.Bayes\",   histSize = 1e6L,   trialSize = 100,   drift = 0,   controlRate = 0.5,   nmeRate = 0.65,   nSim = 20,   delta = 0.15 ) #>      ExpectedN ExpectedNactive ExpectedNcontrol PrStopEarly PrEarlyEff #> [1,]      83.5            83.5                0        0.25       0.25 #>      PrEarlyFut PrEfficacy PrFutility PrGrayZone #> [1,]          0       0.35          0       0.65  ## this example takes longer to run, therefore we don't execute it here: if (FALSE) {   ## the different methods we are looking at:   methods <- c(     \"PointMass.Bayes\", \"Prior.Bayes\", \"RCT.Bayes\", \"RCTvanilla.Bayes\",     \"PointMass.PP\", \"Prior.PP\", \"RCT.PP\", \"RCTvanilla.PP\"   )    ## the control rate will always be 50%   ## but the historical data will be generated randomly from that   ## binomial distribution!    ## delta will be 0.15    ## 200 simulations    ## the different prior sample sizes (historical data size, histSizes <- c(10, 20, 50, 150))   ##   ## later: add very large size, but with heterogeneity =>   ## mixture of beta priors   histSizes <- c(20, 150)    ## the trial sample size (total)   trialSizes <- c(40)    ## the drift   drift <- c(0, 0.1, 0.2)    ## the different true rates for the NME: nmeRates <- seq(from=0.05, to=0.95, by=0.05)   ##   nmeRates <- c(0.4, 0.5, 0.6, 0.7, 0.8)    ## so the whole grid is   wholeGrid <- expand.grid(     method = methods,     drift = drift,     histSize = histSizes,     trialSize = trialSizes,     nmeRate = nmeRates, stringsAsFactors = FALSE   )    ## summarize the methods    ## compute the operating characteristics for all combinations   if (file.exists(savefile <- \"allSims4.RData\")) {     load(savefile)   } else {     ## setup the result list     allOcs <- vector(       mode = \"list\",       length = nrow(wholeGrid)     )      for (i in seq_len(nrow(wholeGrid))) {       set.seed(i)       allOcs[[i]] <- with(         wholeGrid[i, ],         oc2(           method = method,           histSize = histSize,           trialSize = trialSize,           drift = drift,           controlRate = 0.5,           nmeRate = nmeRate,           nSim = 200,           delta = 0.15         )       )     }      save(allOcs,       file = savefile     )   }    length(allOcs)   allOcs    allOcs[[1]]    allPossibleNames <- colnames(allOcs[[1]])   allPossibleNames    allOcsMatrix <-     t(sapply(       allOcs,       function(x) {         res <- rep(NA, length(allPossibleNames))         names(res) <- allPossibleNames         res[colnames(x)] <- x         res       }     ))     allOcsMatrix   wholeMatrix <- cbind(wholeGrid, allOcsMatrix)    library(reshape)     ## write a table to a Word file in the current directory   outputTab <- function(tab,                         out = \"output.docx\", # name of the output file                         # how many digits for numbers?                         digits = 2) {     library(officer)     doc <- read_docx()     dat <- as.data.frame(tab)     whichNum <- which(sapply(dat, is.numeric))     whichInt <- which(sapply(dat, function(x) {       is.numeric(x) && all(x == round(x))     }))     for (i in whichNum) {       if (i %in% whichInt) {         dat[[i]] <- format(dat[[i]], nsmall = 0)       } else {         dat[[i]] <- format(dat[[i]], digits = digits, nsmall = digits)       }     }      doc <- body_add_table(doc, dat, style = \"Normal Table\")     print(doc, target = paste0(getwd(), \"/myreport.docx\"))   }     ## --------------------------------------------------   ## derive the tables   ## (here change drift and histSize values manually to get the   ## different tables for the slides)   tab1 <- subset(     wholeMatrix,     (drift == 0.2) &       (histSize == 150) &       (method %in% ppNames)   ) }"},{"path":"https://genentech.github.io/phase1b/reference/oc3.html","id":null,"dir":"Reference","previous_headings":"","what":"Run simulations to obtain operating characteristics for methods that include\nhistorical data on control ‚Äî oc3","title":"Run simulations to obtain operating characteristics for methods that include\nhistorical data on control ‚Äî oc3","text":"function differs oc2 respect historical actual control rates determined, see parameter controlRateDist.","code":""},{"path":"https://genentech.github.io/phase1b/reference/oc3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run simulations to obtain operating characteristics for methods that include\nhistorical data on control ‚Äî oc3","text":"","code":"oc3(   method = c(\"PointMass.Bayes\", \"Prior.Bayes\", \"RCT.Bayes\", \"RCTvanilla.Bayes\",     \"PointMass.PP\", \"Prior.PP\", \"RCT.PP\", \"RCTvanilla.PP\"),   nSim,   histSize,   trialSize,   controlRateDist,   nmeRate,   delta,   tL = 0.8,   tU = 0.8,   tT = 0.85,   phiL = 0.05,   phiU = 0.95,   parE = c(1, 1),   weights )"},{"path":"https://genentech.github.io/phase1b/reference/oc3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run simulations to obtain operating characteristics for methods that include\nhistorical data on control ‚Äî oc3","text":"method 8 different methods can selected: PointMass.Bayes: single arm trial pointmass derived historical data control response rate, see postprob Prior.Bayes: single arm trial prior derived historical data control response rate, see postprobDist RCT.Bayes: RCT (1:1 randomization) prior derived historical data control response rate, see postprobDist RCT.vanillaBayes: RCT, using historical control data PointMass.PP: single arm trial pointmass derived historical data control response rate, using predictive probability method, see predprob Prior.PP: single arm trial prior derived historical data control response rate, using predictive probability method, see predprobDist RCT.PP: RCT (1:1 randomization) prior derived historical data control response rate, using predictive probability method, see predprobDist RCT.vanillaPP: RCT using predictive probability method, using historical control data nSim number trials simulate histSize historical data size trialSize total trial sample size controlRateDist control response rate distribution. shall function without arguments, gives back random draw control response rate distribution. invoked obtain control rates historical actual control data sets. nmeRate treatment response rate delta delta stopping efficacy used. Implicitly zero delta stopping futility used. tL Bayes methods: probability threshold control response rate (default: 0.8) tU Bayes methods: probability threshold control response rate + delta (default: 0.8) tT threshold probability response rate p0 end trial (default: 0.85) phiL lower threshold predictive probability (default: 0.05) phiU upper threshold predictive probability (default: 0.95) parE beta parameters matrix, K rows 2 columns, corresponding beta parameters K components. Default uniform prior. weights mixture weights beta mixture prior. Default uniform weights across mixture components.","code":""},{"path":"https://genentech.github.io/phase1b/reference/oc3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run simulations to obtain operating characteristics for methods that include\nhistorical data on control ‚Äî oc3","text":"Returned operating characteristics matrix include: ExpectedN: expected number patients trials ExpectedNactive: expected number patients treatment PrStopEarly: probability stop trial early (reaching maximum sample size) PrEarlyEff: probability decide efficacy early PrEarlyFut: probability decide futility early PrEfficacy: probability decide efficacy PrFutility: probability decide futility PrGrayZone: probability decision end (\"gray zone\")","code":""},{"path":"https://genentech.github.io/phase1b/reference/oc3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run simulations to obtain operating characteristics for methods that include\nhistorical data on control ‚Äî oc3","text":"Interim looks done three times total including last one, approximately equal distance looks.","code":""},{"path":"https://genentech.github.io/phase1b/reference/oc3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run simulations to obtain operating characteristics for methods that include\nhistorical data on control ‚Äî oc3","text":"","code":"## this looks OK now: oc3(   method = \"Prior.PP\",   histSize = 1e5L,   trialSize = 100,   controlRateDist = function() {     rbeta(n = 1, 10, 10)   },   nmeRate = 0.70,   nSim = 20,   delta = 0.15 ) #>      ExpectedN ExpectedNactive ExpectedNcontrol PrStopEarly PrEarlyEff #> [1,]     65.35           65.35                0        0.65       0.25 #>      PrEarlyFut PrEfficacy PrFutility PrGrayZone #> [1,]        0.4       0.35       0.65          0  ## this one as well: oc3(   method = \"Prior.Bayes\",   histSize = 1e6L,   trialSize = 100,   controlRateDist = function() {     rbeta(n = 1, 10, 10)   },   nmeRate = 0.65,   nSim = 20,   delta = 0.15 ) #>      ExpectedN ExpectedNactive ExpectedNcontrol PrStopEarly PrEarlyEff #> [1,]      86.8            86.8                0         0.2       0.15 #>      PrEarlyFut PrEfficacy PrFutility PrGrayZone #> [1,]       0.05       0.15        0.1       0.75  ## this example takes longer to run, therefore we don't execute it here: if (FALSE) {   ## the different methods we are looking at:   methods <- c(     \"PointMass.Bayes\", \"Prior.Bayes\", \"RCT.Bayes\", \"RCTvanilla.Bayes\",     \"PointMass.PP\", \"Prior.PP\", \"RCT.PP\", \"RCTvanilla.PP\"   )    ## the control rate will come from a Beta(10, 10) distribution   ## and the historical data will be generated randomly from the resulting   ## binomial distribution!    ## delta will be 0.15    ## 200 simulations    ## the different prior sample sizes (historical data size) e.g. histSizes <- c(10, 20, 50, 150)   ##   ## later: add very large size, but with heterogeneity =>   ## mixture of beta priors   histSizes <- c(20, 150)    ## the trial sample size (total)   trialSizes <- c(40)    ## the different true rates for the NME: nmeRates <- seq(from=0.05, to=0.95, by=0.05)   ##   nmeRates <- c(0.4, 0.5, 0.6, 0.7, 0.8)    ## so the whole grid is   wholeGrid <- expand.grid(     method = methods,     histSize = histSizes,     trialSize = trialSizes,     nmeRate = nmeRates, stringsAsFactors = FALSE   )    ## summarize the methods    ## compute the operating characteristics for all combinations   if (file.exists(savefile <- \"allSims4.RData\")) {     load(savefile)   } else {     ## setup the result list     allOcs <- vector(       mode = \"list\",       length = nrow(wholeGrid)     )      for (i in seq_len(nrow(wholeGrid))) {       set.seed(i)       allOcs[[i]] <- with(         wholeGrid[i, ],         oc3(           method = method,           histSize = histSize,           trialSize = trialSize,           controlRateDist = function() {             rbeta(n = 1, 10, 10)           },           nmeRate = nmeRate,           nSim = 200,           delta = 0.15         )       )     }      save(allOcs,       file = savefile     )   }    length(allOcs)   allOcs    allOcs[[1]]    allPossibleNames <- colnames(allOcs[[1]])   allPossibleNames    allOcsMatrix <-     t(sapply(       allOcs,       function(x) {         res <- rep(NA, length(allPossibleNames))         names(res) <- allPossibleNames         res[colnames(x)] <- x         res       }     ))     allOcsMatrix   wholeMatrix <- cbind(wholeGrid, allOcsMatrix)    library(reshape)     ## write a table to a Word file in the current directory   outputTab <- function(tab,                         # name of the output file                         out = \"output.docx\",                         # how many digits for numbers?                         digits = 2) {     library(officer)     doc <- read_docx()     dat <- as.data.frame(tab)     whichNum <- which(sapply(dat, is.numeric))     whichInt <- which(sapply(dat, function(x) {       is.numeric(x) && all(x == round(x))     }))     for (i in whichNum) {       if (i %in% whichInt) {         dat[[i]] <- format(dat[[i]], nsmall = 0)       } else {         dat[[i]] <- format(dat[[i]], digits = digits, nsmall = digits)       }     }      doc <- body_add_table(doc, dat, style = \"Normal Table\")     writeDoc(doc, target = paste0(getwd(), \"/myreport.docx\"))   }     ## --------------------------------------------------   ## derive the tables   ## (here change drift and histSize values manually to get the   ## different tables for the slides)   tab1 <- subset(     wholeMatrix,     (histSize == 150) &       (method %in% ppNames)   ) }"},{"path":"https://genentech.github.io/phase1b/reference/ocPostprob.html","id":null,"dir":"Reference","previous_headings":"","what":"Operating Characteristics for Posterior Probability method ‚Äî ocPostprob","title":"Operating Characteristics for Posterior Probability method ‚Äî ocPostprob","text":"Calculate operating characteristics posterior probability method. assumed true response rate truep. trial stopped Efficacy posterior probability p1 larger tU, stopped Futility posterior probability p0 larger tL: Stop criteria Efficacy : P_E(p > p1) > tU Stop criteria Futility : P_E(p < p0) > tL Resulting operating characteristics include following: ExpectedN: expected number patients trials PrStopEarly: probability stop trial early (reaching maximum sample size) PrEarlyEff: probability Early Go decision PrEarlyFut: probability Early Stop decision PrEfficacy: probability Go decision PrFutility: probability Stop decision PrGrayZone: probability Go Stop ,\"Evaluate\" Gray decision zone","code":""},{"path":"https://genentech.github.io/phase1b/reference/ocPostprob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Operating Characteristics for Posterior Probability method ‚Äî ocPostprob","text":"","code":"ocPostprob(   nnE,   truep,   p0,   p1,   tL,   tU,   parE = c(1, 1),   sim = 50000,   wiggle = FALSE,   randomdist = NULL,   nnF = nnE )"},{"path":"https://genentech.github.io/phase1b/reference/ocPostprob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Operating Characteristics for Posterior Probability method ‚Äî ocPostprob","text":"nnE (numeric): sample size sizes study can stopped Efficacy decision. different Futility decision, specify nnF. truep (number): assumed true response rate true rate (scenario). p0 (number): lower Futility threshold response rate. p1 (number): upper Efficacy threshold response rate. tL (number): posterior probability threshold p0. tU (number): posterior probability threshold p1. parE (numeric): alpha beta parameters prior treatment proportion. Default set alpha = 1, beta = 1, uniform prior. sim (number): number simulations. wiggle (logical): generate random look locations (default). TRUE, optional specify dist (see @details). randomdist (logical): Random distance added looks. NULL, wiggle = TRUE, function generate add random distance within range closest looks. nnF (numeric): sample size sizes study can stopped Futility decision different Efficacy decision.","code":""},{"path":"https://genentech.github.io/phase1b/reference/ocPostprob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Operating Characteristics for Posterior Probability method ‚Äî ocPostprob","text":"list following elements: oc: matrix operating characteristics (see @details section) nn: vector look locations supplied nnE: vector Efficacy look locations nnF: vector Futility look locations params: multiple parameters","code":""},{"path":"https://genentech.github.io/phase1b/reference/ocPostprob.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Operating Characteristics for Posterior Probability method ‚Äî ocPostprob","text":"ExpectedN average simulated sample sizes. wiggle = TRUE, one can specify dist, though algorithm generate dist = NULL. nnF = NULL, Futility decision Stop analysed. Note nnF = c(0) equivalent. default, nnF set identical looks nnE, wiggle = TRUE, looks , e.g. nnE = nnF wiggle distance applied.","code":""},{"path":"https://genentech.github.io/phase1b/reference/ocPostprob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Operating Characteristics for Posterior Probability method ‚Äî ocPostprob","text":"","code":"# For three looks of 10, 20 and 30 we have the following assumptions : # True response rate of the treatment group = 40% # The following are the Go and Stop rules respectively : # Look for Efficacy: P(response rate > 30% )> 80% # Look for Futility: P(response rate < 20% )> 60% # Prior of treatment arm parE= Beta(1,1). res <- ocPostprob(   nnE = c(10, 20, 30), truep = 0.40, p0 = 0.20, p1 = 0.30, tL = 0.60, tU = 0.80, parE = c(1, 1),   sim = 50000, wiggle = TRUE, randomdist = NULL, nnF = c(10, 20, 30) )  res$oc #>   ExpectedN PrStopEarly PrEarlyEff PrEarlyFut PrEfficacy PrFutility PrGrayZone #> 1  18.21216     0.69034     0.6481    0.04224    0.76774    0.04406     0.1882  # We specify the distance in this example. res <- ocPostprob(   nnE = c(10, 20, 30), truep = 0.40, p0 = 0.20, p1 = 0.30, tL = 0.60, tU = 0.80, parE = c(1, 1),   sim = 50000, wiggle = TRUE, randomdist = c(-1, 3), nnF = c(10, 20, 30) )  res$oc #>   ExpectedN PrStopEarly PrEarlyEff PrEarlyFut PrEfficacy PrFutility PrGrayZone #> 1   19.0872     0.67406    0.61948    0.05458    0.75528    0.05588    0.18884  # Here, nnE = nnF, and no wiggle room is allowed. Random distance also not supplied. res <- ocPostprob(   nnE = c(10, 20, 30), truep = 0.40, p0 = 0.20, p1 = 0.30, tL = 0.60, tU = 0.80, parE = c(1, 1),   sim = 50000, wiggle = FALSE, randomdist = NULL, nnF = c(10, 20, 30) )  res$oc #>   ExpectedN PrStopEarly PrEarlyEff PrEarlyFut PrEfficacy PrFutility PrGrayZone #> 1    19.169      0.6737    0.61908    0.05462    0.74996    0.05618    0.19386  # Here, we only have one Futility and Efficacy look or stop. res <- ocPostprob(   nnE = c(10), truep = 0.40, p0 = 0.20, p1 = 0.30, tL = 0.60, tU = 0.80, parE = c(1, 1),   sim = 50000, wiggle = FALSE, randomdist = NULL, nnF = 10 )  res$oc #>   ExpectedN PrStopEarly PrEarlyEff PrEarlyFut PrEfficacy PrFutility PrGrayZone #> 1        10           0          0          0    0.36794    0.04698    0.58508  # Here, we only have one Futility but many Efficacy looks or stop. res <- ocPostprob(   nnE = c(10, 20, 30), truep = 0.40, p0 = 0.20, p1 = 0.30, tL = 0.60, tU = 0.80, parE = c(1, 1),   sim = 50000, wiggle = FALSE, randomdist = NULL, nnF = 10 )  res$oc #>   ExpectedN PrStopEarly PrEarlyEff PrEarlyFut PrEfficacy PrFutility PrGrayZone #> 1   19.1768           0     0.6214          0    0.75442    0.04634    0.19924"},{"path":"https://genentech.github.io/phase1b/reference/ocPostprobDist.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate operating characteristics for posterior probability method\nwith beta prior on SOC ‚Äî ocPostprobDist","title":"Calculate operating characteristics for posterior probability method\nwith beta prior on SOC ‚Äî ocPostprobDist","text":"trial stopped efficacy posterior probability least deltaE better control larger tU, stopped futility posterior probability least deltaF worse control larger tL. Otherwise trial continued, maximum sample size may happen decision made (\"gray zone\").","code":""},{"path":"https://genentech.github.io/phase1b/reference/ocPostprobDist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate operating characteristics for posterior probability method\nwith beta prior on SOC ‚Äî ocPostprobDist","text":"","code":"ocPostprobDist(   nn,   p,   deltaE,   deltaF,   relativeDelta = FALSE,   tL,   tU,   parE = c(a = 1, b = 1),   parS = c(a = 1, b = 1),   ns = 10000,   nr = FALSE,   d = NULL,   nnF = nn )"},{"path":"https://genentech.github.io/phase1b/reference/ocPostprobDist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate operating characteristics for posterior probability method\nwith beta prior on SOC ‚Äî ocPostprobDist","text":"nn vector look locations efficacy (futility looks different, please specify also nnF) p true rate (scenario) deltaE delta efficacy: P(pE > pS + deltaE) large stop efficacy deltaF delta futility: P(pE < pS - deltaF) large stop futility relativeDelta see postprobDist tL probability threshold control - deltaF tU probability threshold control + deltaE parE beta parameters prior treatment proportion parS beta parameters prior control proportion ns number simulations nr generate random look locations? (default) d distance random looks around look locations nn nnF vector look locations futility (default: efficacy)","code":""},{"path":"https://genentech.github.io/phase1b/reference/ocPostprobDist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate operating characteristics for posterior probability method\nwith beta prior on SOC ‚Äî ocPostprobDist","text":"list following elements: oc: matrix operating characteristics (see Details section) Decision: vector decisions made simulated trials (TRUE success, FALSE failure, NA decision) SampleSize: vector sample sizes simulated trials nn: vector look locations nnE: vector efficacy look locations nnF: vector futility look locations todo: like return nnr instead, actual look locations? params: input parameters function","code":""},{"path":"https://genentech.github.io/phase1b/reference/ocPostprobDist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate operating characteristics for posterior probability method\nwith beta prior on SOC ‚Äî ocPostprobDist","text":"Returned operating characteristics matrix include: ExpectedN: expected number patients trials PrStopEarly: probability stop trial early (reaching maximum sample size) PrEarlyEff: probability decide efficacy early PrEarlyFut: probability decide futility early PrEfficacy: probability decide efficacy PrFutility: probability decide futility PrGrayZone: probability decision end (\"gray zone\")","code":""},{"path":"https://genentech.github.io/phase1b/reference/ocPostprobDist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate operating characteristics for posterior probability method\nwith beta prior on SOC ‚Äî ocPostprobDist","text":"","code":"# operating characteristics for posterior probability method with beta prior on SOC  # design details # multiple looks @ 10, 20, 30 patietns # True response rate of the treatment group=0.4  # stop for efficacy (deltaE): P(pE > pS + deltaE) >tU # stop for futility (deltaF): P(pE < pS - deltaF) >tL # where pE is the response rate of treatment group, pS is the response rate of # control group. Both of them are random variables.   res1 <- ocPostprobDist(   nn = c(10, 20, 30),   p = 0.4,   deltaE = 0.1,   deltaF = -0.1,   tL = 0.6,   tU = 0.6,   parE = c(1, 1),   parS = c(5, 25),   ns = 100 )  res1$oc #>      ExpectedN PrStopEarly PrEarlyEff PrEarlyFut PrEfficacy PrFutility #> [1,]      11.7        0.95       0.95          0       0.97       0.01 #>      PrGrayZone #> [1,]       0.02   # generate random look locations around 10,20,30 patients # this call will generate d (distance for random looks around the look locations) # based on \"floor(min(nn - c(0,nn[-length(nn)]))/2)\" as d is missing: res2 <- ocPostprobDist(   nn = c(10, 20, 30),   p = 0.4,   deltaE = 0.1,   deltaF = -0.1,   tL = 0.6,   tU = 0.6,   parE = c(1, 1),   parS = c(5, 25),   ns = 100, nr = TRUE )  res2$oc #>      ExpectedN PrStopEarly PrEarlyEff PrEarlyFut PrEfficacy PrFutility #> [1,]     12.24        0.94       0.94          0       0.99          0 #>      PrGrayZone #> [1,]       0.01  # specify the distance for random looks around the look locations in nn (d=5 for illustration) res3 <- ocPostprobDist(   nn = c(10, 20, 30),   p = 0.4,   deltaE = 0.1,   deltaF = -0.1,   tL = 0.6,   tU = 0.6,   parE = c(1, 1),   parS = c(5, 25),   ns = 100,   nr = TRUE,   d = 5 )  res3$oc #>      ExpectedN PrStopEarly PrEarlyEff PrEarlyFut PrEfficacy PrFutility #> [1,]     13.22        0.96       0.93       0.03       0.95       0.03 #>      PrGrayZone #> [1,]       0.02   # finally, we can also have separate specification of efficacy and futility analyses. E.g. # here have futility decisions only at the final analysis: res4 <- ocPostprobDist(   nn = c(10, 20, 30), p = 0.4, deltaE = 0.1, deltaF = -0.1, tL = 0.6, tU = 0.6,   parE = c(1, 1), parS = c(5, 25), ns = 100, nr = TRUE, d = 5, nnF = c(30) ) res4$oc #>      ExpectedN PrStopEarly PrEarlyEff PrEarlyFut PrEfficacy PrFutility #> [1,]     13.95        0.86       0.86          0       0.92       0.01 #>      PrGrayZone #> [1,]       0.07 # compared to res3, we see that there is no early futility stopping anymore, # and the overall probability for stopping for futility (which is the type II error here) # is much lower."},{"path":"https://genentech.github.io/phase1b/reference/ocPredprob.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate operating characteristics for predictive probability method\n(gray zone allowed in the final analysis) ‚Äî ocPredprob","title":"Calculate operating characteristics for predictive probability method\n(gray zone allowed in the final analysis) ‚Äî ocPredprob","text":"Decision rule 1:trial stopped efficacy predictive probability successful trial larger phiU, stopped futility phiL. trial successful maximum number patients posterior probability treatment p0 response rate tT. Otherwise decision \"failure\". case, gray zone.","code":""},{"path":"https://genentech.github.io/phase1b/reference/ocPredprob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate operating characteristics for predictive probability method\n(gray zone allowed in the final analysis) ‚Äî ocPredprob","text":"","code":"ocPredprob(   nn,   p,   p0,   p1 = p0,   tT,   tFu = 1 - tT,   phiL = 1 - phiFu,   phiU,   phiFu = 1 - phiL,   parE = c(1, 1),   ns = 10000,   nr = FALSE,   d = NULL,   nnF = nn )"},{"path":"https://genentech.github.io/phase1b/reference/ocPredprob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate operating characteristics for predictive probability method\n(gray zone allowed in the final analysis) ‚Äî ocPredprob","text":"nn vector look locations efficacy (futility looks different, please specify also nnF) p true rate (scenario) p0 threshold response rate p1 futility threshold response rate. Specify decisian rule 2 used. tT threshold probability response rate p0 end trial tFu threshold probability response rate p1 end trial. Specify decisian rule 2 used. phiL lower threshold predictive probability phiU upper threshold predictive probability phiFu threshold predictive probability futility. Specify decisian rule 2 used. phiL argument skipped case. parE beta parameters prior treatment proportion ns number simulations nr generate random look locations? (default) d distance random looks around look locations nn nnF vector look locations futility (default: efficacy)","code":""},{"path":"https://genentech.github.io/phase1b/reference/ocPredprob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate operating characteristics for predictive probability method\n(gray zone allowed in the final analysis) ‚Äî ocPredprob","text":"list following elements: oc: matrix operating characteristics (see Details section) Decision: vector decisions made simulated trials (TRUE success, FALSE failure) SampleSize: vector sample sizes simulated trials nn: vector look locations nnE: vector efficacy look locations nnF: vector futility look locations params: multiple parameters","code":""},{"path":"https://genentech.github.io/phase1b/reference/ocPredprob.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate operating characteristics for predictive probability method\n(gray zone allowed in the final analysis) ‚Äî ocPredprob","text":"Decision rule 2:variation can requested skipping argument phiL utilizing arguments p1, tFu & PhiFu. trial can stopped futility predictive probability unsuccessful trial larger phiFu. case, decision \"failure\" posterior probability treatment response rate p1 tFu maximum number patients. Returned operating characteristics matrix include: ExpectedN: expected number patients trials PrStopEarly: probability stop trial early (reaching maximum sample size) PrEarlyEff: probability decide efficacy early PrEarlyFut: probability decide futility early PrEfficacy: probability decide efficacy PrFutility: probability decide futility PrGrayZone: probability decision end (\"gray zone\")","code":""},{"path":"https://genentech.github.io/phase1b/reference/ocPredprob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate operating characteristics for predictive probability method\n(gray zone allowed in the final analysis) ‚Äî ocPredprob","text":"","code":"## to examine operating characteristics of a phase Ib design with 2 interim analyses ## (sample size @ 10, 20 using predictive probability) and one final analysis (sample size @ 30);  # design details # multiple looks @ 10, 20, 30 patietns # True response rate of the treatment group=40% # control response rate=25%  # denote treatment response rate as RRS # trial success is defined as: P(RRS>control)>tT set.seed(20) res1 <- ocPredprob(c(10, 20, 30),   p = 0.4, p0 = 0.25, tT = 0.6, phiL = 0.2,   phiU = 0.8, parE = c(1, 1), ns = 100 ) res1$oc #>      ExpectedN PrStopEarly PrEarlyEff PrEarlyFut PrEfficacy PrFutility #> [1,]      14.9        0.91       0.82       0.09        0.9        0.1 #>      PrGrayZone #> [1,]          0   # this call will generate d (distance for random looks around the look locations) # based on \"floor(min(nn - c(0,nn[-length(nn)]))/2)\" as d is missing:  res2 <- ocPredprob(c(10, 20, 30), 0.4,   p0 = 0.25, tT = 0.6, phiL = 0.2, phiU = 0.8,   parE = c(1, 1), ns = 100, nr = TRUE ) res2$oc #>      ExpectedN PrStopEarly PrEarlyEff PrEarlyFut PrEfficacy PrFutility #> [1,]        14         0.9       0.86       0.04       0.96       0.04 #>      PrGrayZone #> [1,]          0  # now d is specified. note that d has to be a positive value; res3 <- ocPredprob(c(10, 20, 30), 0.4,   p0 = 0.25, tT = 0.6, phiL = 0.2, phiU = 0.8,   parE = c(1, 1), ns = 100, nr = TRUE, d = 5 ) res3$oc #>      ExpectedN PrStopEarly PrEarlyEff PrEarlyFut PrEfficacy PrFutility #> [1,]     13.81        0.93       0.87       0.06       0.94       0.06 #>      PrGrayZone #> [1,]          0   # finally, we can also have separate specification of efficacy and futility analyses. E.g. # here have futility decisions only at the final analysis:   res4 <- ocPredprob(c(10, 20, 30), 0.4,   p0 = 0.25, tT = 0.6, phiL = 0.2, phiU = 0.8,   parE = c(1, 1), ns = 100, nr = TRUE, d = 5, nnF = c(30) ) res4$oc #>      ExpectedN PrStopEarly PrEarlyEff PrEarlyFut PrEfficacy PrFutility #> [1,]     15.65        0.84       0.84          0       0.94       0.06 #>      PrGrayZone #> [1,]          0 # compared to res3, we see that there is no early futility stopping anymore, # and the overall probability for stopping for futility (which is the type II error here) # is much lower.  # 2) # to examine operating characteristics of a phase Ib design with a seperate # rule for futility at final analysis # denote treatment response rate as RRS # trial success is defined as: P(RRS>p0)>tT # trial failure is defined as: P(RRS<p1)>tFu # (gray zone could occur in the final analysis)  # when tFu=1-tT and phiFu=1-phiL, this decisian rule (res5) is the same as the res1  set.seed(20) res5 <- ocPredprob(c(10, 20, 30),   p = 0.4, p0 = 0.25, tT = 0.6, tFu = 0.4, phiFu = 0.8,   phiU = 0.8, parE = c(1, 1), ns = 100 ) res5$oc #>      ExpectedN PrStopEarly PrEarlyEff PrEarlyFut PrEfficacy PrFutility #> [1,]      14.9        0.91       0.82       0.09        0.9        0.1 #>      PrGrayZone #> [1,]          0"},{"path":"https://genentech.github.io/phase1b/reference/ocPredprobDist.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate operating characteristics for predictive probability method\nwith beta prior on SOC response rate (gray zone allowed in the final analysis) ‚Äî ocPredprobDist","title":"Calculate operating characteristics for predictive probability method\nwith beta prior on SOC response rate (gray zone allowed in the final analysis) ‚Äî ocPredprobDist","text":"Decision rule 1: trial stopped efficacy predictive probability successful trial larger phiU, stopped futility phiL. trial successful maximum number patients posterior probability treatment least delta better control tT. Otherwise decision \"failure\". case, gray zone.","code":""},{"path":"https://genentech.github.io/phase1b/reference/ocPredprobDist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate operating characteristics for predictive probability method\nwith beta prior on SOC response rate (gray zone allowed in the final analysis) ‚Äî ocPredprobDist","text":"","code":"ocPredprobDist(   nn,   p,   delta = 0,   deltaFu = delta,   relativeDelta = FALSE,   tT,   tFu = 1 - tT,   phiL = 1 - phiFu,   phiU,   phiFu = 1 - phiL,   parE = c(a = 1, b = 1),   parS = c(a = 1, b = 1),   ns = 10000,   nr = FALSE,   d = NULL,   nnF = nn )"},{"path":"https://genentech.github.io/phase1b/reference/ocPredprobDist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate operating characteristics for predictive probability method\nwith beta prior on SOC response rate (gray zone allowed in the final analysis) ‚Äî ocPredprobDist","text":"nn vector look locations p true rate (scenario) delta want better control + delta (default: 0) deltaFu declare futility worse control + deltaW. Specify decisian rule 2 used. relativeDelta see postprobDist tT threshold probability control + delta end trial tFu threshold probability control + deltaFu end trial. Specify decisian rule 2 used. phiL lower threshold predictive probability phiU upper threshold predictive probability phiFu threshold predictive probability futility. Specify decisian rule 2 used. phiL argument skipped case. parE beta parameters prior treatment proportion parS beta parameters prior control proportion ns number simulations nr generate random look locations? (default) d distance random looks around look locations nn nnF vector look locations futility (default: efficacy)","code":""},{"path":"https://genentech.github.io/phase1b/reference/ocPredprobDist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate operating characteristics for predictive probability method\nwith beta prior on SOC response rate (gray zone allowed in the final analysis) ‚Äî ocPredprobDist","text":"list following elements: oc: matrix operating characteristics (see Details section) Decision: vector decisions made simulated trials (TRUE success, FALSE failure) SampleSize: vector sample sizes simulated trials nn: vector look locations nnE: vector efficacy look locations nnF: vector futility look locations params: input parameters function","code":""},{"path":"https://genentech.github.io/phase1b/reference/ocPredprobDist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate operating characteristics for predictive probability method\nwith beta prior on SOC response rate (gray zone allowed in the final analysis) ‚Äî ocPredprobDist","text":"Decision rule 2:variation can requested skipping argument phiL utilizing arguments DeltaFu, tFu & PhiFu. trial can stopped futility predictive probability unsuccessful trial larger phiFu. case, decision \"failure\" posterior probability treatment deltaFu better control tFu maximum number patients. Returned operating characteristics matrix include: ExpectedN: expected number patients trials PrStopEarly: probability stop trial early (reaching maximum sample size) PrEarlyEff: probability decide efficacy early PrEarlyFut: probability decide futility early PrEfficacy: probability decide efficacy PrFutility: probability decide futility PrGrayZone: probability decision end (\"gray zone\")","code":""},{"path":"https://genentech.github.io/phase1b/reference/ocPredprobDist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate operating characteristics for predictive probability method\nwith beta prior on SOC response rate (gray zone allowed in the final analysis) ‚Äî ocPredprobDist","text":"","code":"## to examine operating characteristics of a phase Ib design with 2 interim analyses ## (sample size @ 10, 20 using predictive probability) and one final analysis ## (sample size @ 30);  # design details # multiple looks @ 10, 20, 30 patients # True response rate of the treatment group=0.4 # response rate improvement (delta)=10%  as an absolute value (default) # 1) # denote treatment response rate as RRS # trial success is defined as: P(RRS>control+delta)>tT # note: ns is suggested to be a larger value than 10 in a real study in order to # achieve correct results   set.seed(20) res1 <- ocPredprobDist(c(10, 20, 30), 0.4,   delta = 0.1, tT = 0.6, phiL = 0.2, phiU = 0.8,   parE = c(1, 1), parS = c(5, 25), ns = 10 ) res1$oc #>      ExpectedN PrStopEarly PrEarlyEff PrEarlyFut PrEfficacy PrFutility #> [1,]        17         0.7        0.7          0        0.9        0.1 #>      PrGrayZone #> [1,]          0    # this function will generate d based on \"floor(min(nn - c(0,nn[-length(nn)]))/2)\" # if d is missing res2 <- ocPredprobDist(c(10, 20, 30), 0.4,   delta = 0.1, tT = 0.6, phiL = 0.2, phiU = 0.8,   parE = c(1, 1), parS = c(5, 25), ns = 10, nr = TRUE ) res2$oc #>      ExpectedN PrStopEarly PrEarlyEff PrEarlyFut PrEfficacy PrFutility #> [1,]      10.3           1          1          0          1          0 #>      PrGrayZone #> [1,]          0  # note that d has to be a positive value; res3 <- ocPredprobDist(c(10, 20, 30), 0.4,   delta = 0.1, tT = 0.6, phiL = 0.2, phiU = 0.8,   parE = c(1, 1), parS = c(5, 25), ns = 10, nr = TRUE, d = 5 ) res3$oc #>      ExpectedN PrStopEarly PrEarlyEff PrEarlyFut PrEfficacy PrFutility #> [1,]        18         0.7        0.6        0.1        0.9        0.1 #>      PrGrayZone #> [1,]          0   # finally, we can also have separate specification of efficacy and futility analyses. E.g. # here have futility decisions only at the final analysis:   res4 <- ocPredprobDist(c(10, 20, 30), 0.4,   delta = 0.1, tT = 0.6, phiL = 0.2, phiU = 0.8,   parE = c(1, 1), parS = c(5, 25), ns = 10, nr = TRUE, d = 5, nnF = c(30) ) res4$oc #>      ExpectedN PrStopEarly PrEarlyEff PrEarlyFut PrEfficacy PrFutility #> [1,]      14.5         0.8        0.8          0          1          0 #>      PrGrayZone #> [1,]          0 # compared to res3, we see that there is no early futility stopping anymore, # and the overall probability for stopping for futility (which is the type II error here) # is much lower.  # 2) # to examine operating characteristics of a phase Ib design with a # seperate rule for futility at final analysis # denote treatment response rate as RRS # trial success is defined as: P(RRS>control+delta)>tT # trial failure is defined as: P(RRS<control+deltaFu)>tFu # (gray zone could occur in the final analysis)  set.seed(20) res5 <- ocPredprobDist(c(10, 20, 30), 0.4,   delta = 0.1, deltaFu = 0.05, tT = 0.6, tFu = 0.6, phiFu = 0.8,   phiU = 0.8, parE = c(1, 1), parS = c(5, 25), ns = 10 ) res5$oc #>      ExpectedN PrStopEarly PrEarlyEff PrEarlyFut PrEfficacy PrFutility #> [1,]        17         0.7        0.7          0        0.9          0 #>      PrGrayZone #> [1,]        0.1   # when tFu=1-tT and phiFu=1-phiL, this decisian rule (res6) is the same as the res1 set.seed(20) res6 <- ocPredprobDist(c(10, 20, 30), 0.4,   delta = 0.1, tT = 0.6, tFu = 0.4, phiFu = 0.8, phiU = 0.8,   parE = c(1, 1), parS = c(5, 25), ns = 10 ) res6$oc #>      ExpectedN PrStopEarly PrEarlyEff PrEarlyFut PrEfficacy PrFutility #> [1,]        17         0.7        0.7          0        0.9        0.1 #>      PrGrayZone #> [1,]          0  # If both phiL and phiFu arguments are specified, phiL will be overwrite by 1-phiFu. # See warning message (which we suppress here to let checks pass). set.seed(20) res7 <- suppressWarnings(ocPredprobDist(c(10, 20, 30), 0.4,   delta = 0.1, tT = 0.6, tFu = 0.4, phiL = 0.1, phiFu = 0.8, phiU = 0.8,   parE = c(1, 1), parS = c(5, 25), ns = 10 )) res7$oc #>      ExpectedN PrStopEarly PrEarlyEff PrEarlyFut PrEfficacy PrFutility #> [1,]        17         0.7        0.7          0        0.9        0.1 #>      PrGrayZone #> [1,]          0"},{"path":"https://genentech.github.io/phase1b/reference/ocRctPostprobDist.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate operating characteristics for RCT against SOC,\nusing the posterior probability method with beta priors ‚Äî ocRctPostprobDist","title":"Calculate operating characteristics for RCT against SOC,\nusing the posterior probability method with beta priors ‚Äî ocRctPostprobDist","text":"randomization works follows. According randomization ratio maximum sample size, patients allocated treatment SOC arms. number patients active treatment arm rounded next higher integer. , sequence patients determined start, number patients arms constant across trial simulations.","code":""},{"path":"https://genentech.github.io/phase1b/reference/ocRctPostprobDist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate operating characteristics for RCT against SOC,\nusing the posterior probability method with beta priors ‚Äî ocRctPostprobDist","text":"","code":"ocRctPostprobDist(   nn,   pE,   pS,   deltaE,   deltaF,   relativeDelta = FALSE,   tL = 0.8,   tU = 0.8,   parE = c(a = 1, b = 1),   parS = c(a = 1, b = 1),   randRatio = 1,   ns = 10000,   nr = FALSE,   d = NULL,   nnF = nn )"},{"path":"https://genentech.github.io/phase1b/reference/ocRctPostprobDist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate operating characteristics for RCT against SOC,\nusing the posterior probability method with beta priors ‚Äî ocRctPostprobDist","text":"nn vector look locations efficacy. Note maximum sample size derived maximum value (latest look) vector. (futility looks different, please specify also nnF) pE true rate treatment population pS true rate standard care population deltaE delta efficacy: P(pE > pS + deltaE) large stop efficacy. Must non-negative value 0 1. deltaF delta futility: P(pE < pS - deltaF) large stop futility. Must numeric value -1 1. Can also NULL. (see details) relativeDelta see postprobDist tL probability threshold control - deltaF (default: 0.8) tU probability threshold control + deltaE (default: 0.8) parE beta parameters prior control proportion parS beta parameters prior treatment proportion randRatio randomization ratio (active vs. control) used. default: 1. ns number simulations nr generate random look locations? (default) d distance random looks around look locations nn nnF vector look locations futility (default: efficacy)","code":""},{"path":"https://genentech.github.io/phase1b/reference/ocRctPostprobDist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate operating characteristics for RCT against SOC,\nusing the posterior probability method with beta priors ‚Äî ocRctPostprobDist","text":"list following elements: oc: matrix operating characteristics (see Details section) Decision: vector decisions made simulated trials (TRUE success, FALSE failure, NA decision) SampleSize: vector sample sizes simulated trials SampleSizeActive: vector patients treatment simulated trials SampleSizeControl: vector patients control simulated trials nn: vector look locations nnE: vector efficacy look locations nnF: vector futility look locations todo: like return nnr instead, actual look locations? params: input parameters function","code":""},{"path":"https://genentech.github.io/phase1b/reference/ocRctPostprobDist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate operating characteristics for RCT against SOC,\nusing the posterior probability method with beta priors ‚Äî ocRctPostprobDist","text":"randomized controlled trial (RCT) stopped efficacy posterior probability least deltaE better control larger tU, stopped futility posterior probability least deltaF worse control larger tL. Otherwise trial continued, maximum sample size may happen decision made (\"gray zone\"). variation can requested deltaF set NULL. futility decision made probability deltaE better control lower 1 - tL. Returned operating characteristics matrix include: ExpectedN: expected total number patients trials ExpectedNactive: expected number patients treatment ExpectedNcontrol: expected number patients SOC PrStopEarly: probability stop trial early (reaching maximum sample size) PrEfficacy: probability decide efficacy PrFutility: probability decide futility PrGrayZone: probability decision end (\"gray zone\")","code":""},{"path":"https://genentech.github.io/phase1b/reference/ocRctPostprobDist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate operating characteristics for RCT against SOC,\nusing the posterior probability method with beta priors ‚Äî ocRctPostprobDist","text":"","code":"# note, deltaF has to be a value between 0 and 1 including the bounds, or NULL.  res <- ocRctPostprobDist(   nn = c(10, 20, 30), pE = 0.4, pS = 0.3, deltaE = 0.15, deltaF = 0.05,   relativeDelta = FALSE,   tL = 0.8, tU = 0.8,   parE = c(a = 1, b = 1),   parS = c(a = 1, b = 1),   randRatio = 1,   ns = 100, nr = FALSE, d = NULL )  res$oc #>      ExpectedN ExpectedNactive ExpectedNcontrol PrStopEarly PrEarlyEff #> [1,]      25.2           12.52            12.68        0.28       0.15 #>      PrEarlyFut PrEfficacy PrFutility PrGrayZone #> [1,]       0.13       0.19       0.13       0.68   # separate specification of efficacy and futility analyses can be performed. E.g. # here have futility decisions only at the final analysis:  res2 <- ocRctPostprobDist(   nn = c(10, 20, 30), pE = 0.4, pS = 0.3, deltaE = 0.15, deltaF = 0.05,   relativeDelta = FALSE,   tL = 0.8, tU = 0.8,   parE = c(a = 1, b = 1),   parS = c(a = 1, b = 1),   randRatio = 1,   ns = 100, nr = FALSE, d = NULL, nnF = c(30) ) res2$oc #>      ExpectedN ExpectedNactive ExpectedNcontrol PrStopEarly PrEarlyEff #> [1,]      27.6           13.78            13.82        0.16       0.16 #>      PrEarlyFut PrEfficacy PrFutility PrGrayZone #> [1,]          0       0.22       0.04       0.74 # compared to res3, we see that there is no early futility stopping anymore, # and the overall probability for stopping for futility (which is the type II error here) # is much lower.  # Also, when deltaF is set to NULL, the futility decision is made when the probability to # be deltaE better than the control is lower than 1 - tL. i.e. Pr(pE-pS>deltaE)<1-tL res3 <- ocRctPostprobDist(   nn = c(10, 20, 30), pE = 0.4, pS = 0.3, deltaE = 0.15, deltaF = NULL,   relativeDelta = FALSE,   tL = 0.2, tU = 0.8,   parE = c(a = 1, b = 1),   parS = c(a = 1, b = 1),   randRatio = 1,   ns = 100, nr = FALSE, d = NULL ) res3$oc #>      ExpectedN ExpectedNactive ExpectedNcontrol PrStopEarly PrEarlyEff #> [1,]        10            4.77             5.23           1       0.12 #>      PrEarlyFut PrEfficacy PrFutility PrGrayZone #> [1,]       0.88       0.12       0.88          0  # As when deltaF is set to null, it sometimes makes sense for a futility decision # to be made even when the treatment is better than the control, e.g. when that difference # is small. This can be accomplished by specifying a negative value for deltaF. res4 <- ocRctPostprobDist(   nn = c(10, 20, 30), pE = 0.4, pS = 0.3,   deltaE = 0.15, deltaF = -0.05,   relativeDelta = FALSE,   tL = 0.2, tU = 0.8,   parE = c(a = 1, b = 1),   parS = c(a = 1, b = 1),   randRatio = 1,   ns = 100, nr = FALSE, d = NULL ) res4$oc #>      ExpectedN ExpectedNactive ExpectedNcontrol PrStopEarly PrEarlyEff #> [1,]      11.4            5.75             5.65        0.99       0.15 #>      PrEarlyFut PrEfficacy PrFutility PrGrayZone #> [1,]       0.84       0.16       0.84          0"},{"path":"https://genentech.github.io/phase1b/reference/ocRctPredprobDist.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate operating characteristics for RCT against SOC,\nusing the predictive probability method with beta priors ‚Äî ocRctPredprobDist","title":"Calculate operating characteristics for RCT against SOC,\nusing the predictive probability method with beta priors ‚Äî ocRctPredprobDist","text":"randomization works follows. According randomization ratio maximum sample size, patients allocated treatment SOC arms. number patients active treatment arm rounded next higher integer. , sequence patients determined start, number patients arms constant across trial simulations.","code":""},{"path":"https://genentech.github.io/phase1b/reference/ocRctPredprobDist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate operating characteristics for RCT against SOC,\nusing the predictive probability method with beta priors ‚Äî ocRctPredprobDist","text":"","code":"ocRctPredprobDist(   nn,   pE,   pS,   delta = 0,   deltaFu = delta,   relativeDelta = FALSE,   tT,   tFu = 1 - tT,   phiL = 1 - phiFu,   phiU,   phiFu = 1 - phiL,   parE = c(a = 1, b = 1),   parS = c(a = 1, b = 1),   randRatio = 1,   ns = 10000,   nr = FALSE,   d = NULL,   nnF = nn )"},{"path":"https://genentech.github.io/phase1b/reference/ocRctPredprobDist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate operating characteristics for RCT against SOC,\nusing the predictive probability method with beta priors ‚Äî ocRctPredprobDist","text":"nn vector look locations efficacy . Note maximum sample size derived maximum value (latest look) vector. (futility looks different, please specify also nnF) pE true rate treatment population pS true rate standard care population delta want better control + delta (default: 0) deltaFu declare futility worse control + deltaW. Specify decisian rule 2 used. relativeDelta see postprobDist tT threshold probability control + delta end trial tFu threshold probability control + deltaFu end trial. Specify decisian rule 2 used. phiL lower threshold predictive probability phiU upper threshold predictive probability phiFu threshold predictive probability futility. Specify decisian rule 2 used. phiL argument skipped case. parE beta parameters prior control proportion parS beta parameters prior treatment proportion randRatio randomization ratio (active vs. control) used. default: 1. ns number simulations nr generate random look locations? (default) d distance random looks around look locations nn nnF vector look locations futility (default: efficacy)","code":""},{"path":"https://genentech.github.io/phase1b/reference/ocRctPredprobDist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate operating characteristics for RCT against SOC,\nusing the predictive probability method with beta priors ‚Äî ocRctPredprobDist","text":"list following elements: oc: matrix operating characteristics (see Details section) Decision: vector decisions made simulated trials (TRUE success, FALSE failure) SampleSize: vector sample sizes simulated trials SampleSizeActive: vector patients treatment simulated trials SampleSizeControl: vector patients control simulated trials nn: vector look locations nnE: vector efficacy look locations nnF: vector futility look locations todo: like return nnr instead, actual look locations? params: input parameters function","code":""},{"path":"https://genentech.github.io/phase1b/reference/ocRctPredprobDist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate operating characteristics for RCT against SOC,\nusing the predictive probability method with beta priors ‚Äî ocRctPredprobDist","text":"Decision rule 1:trial stopped efficacy predictive probability successful trial larger phiU, stopped futility phiL. trial successful maximum number patients posterior probability treatment least delta better control tT. Otherwise decision \"failure\". Hence gray zone. Decision rule 2:variation can requested skipping argument phiL utilizing arguments p1, tFu & PhiFu. trial can stopped futility predictive probability unsuccessful trial larger phiFu. case, decision \"failure\" posterior probability treatment response rate p1 tFu maximum number patients. Returned operating characteristics matrix include: ExpectedN: expected number patients trials ExpectedNactive: expected number patients treatment ExpectedNcontrol: expected number patients SOC PrStopEarly: probability stop trial early (reaching maximum sample size) PrEfficacy: probability decide efficacy PrFutility: probability decide futility PrGrayZone: probability decision end (\"gray zone\")","code":""},{"path":"https://genentech.github.io/phase1b/reference/ocRctPredprobDist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate operating characteristics for RCT against SOC,\nusing the predictive probability method with beta priors ‚Äî ocRctPredprobDist","text":"","code":"# similar input parameters as the oc.predprobDist function # default simulation number is 10000. for illustration, the ns is set as 100 to # save program running time. Please note that 10 simulation run (ns=10) may not # be sufficient for a consistent OC evaluation. # 1) set.seed(20) res <- ocRctPredprobDist(   nn = c(10, 20, 30), pE = 0.4, pS = 0.3, delta = 0.1,   relativeDelta = FALSE, tT = 0.6,   phiL = 0.2, phiU = 0.8,   parE = c(a = 1, b = 1), parS = c(a = 1, b = 1),   randRatio = 1,   ns = 10, nr = FALSE, d = NULL )  res$oc #>      ExpectedN ExpectedNactive ExpectedNcontrol PrStopEarly PrEarlyEff #> [1,]        19               9               10         0.6        0.1 #>      PrEarlyFut PrEfficacy PrFutility PrGrayZone #> [1,]        0.5        0.3        0.7          0  # separate specification of efficacy and futility analyses can be performed. E.g. # here have futility decisions only at the final analysis: set.seed(20) res1 <- ocRctPredprobDist(   nn = c(10, 20, 30), pE = 0.4, pS = 0.3, delta = 0.1, relativeDelta = FALSE,   tT = 0.6,   phiL = 0.2, phiU = 0.8,   parE = c(a = 1, b = 1), parS = c(a = 1, b = 1),   randRatio = 1,   ns = 10, nr = FALSE, d = NULL, nnF = c(30) )  res1$oc #>      ExpectedN ExpectedNactive ExpectedNcontrol PrStopEarly PrEarlyEff #> [1,]        28            13.9             14.1         0.1        0.1 #>      PrEarlyFut PrEfficacy PrFutility PrGrayZone #> [1,]          0        0.4        0.6          0  # 2) # to examine operating characters of a phase Ib design with a # seperate rule for futility # at final analysis # denote treatment response rate as RRS # trial success is defined as: P(RRS>control+delta)>tT # trial failure is defined as: P(RRS<control+deltaFu)>tFu # (gray zone could occur in the final analysis)  set.seed(20) res2 <- ocRctPredprobDist(   nn = c(10, 20, 30), pE = 0.4, pS = 0.3, delta = 0.1, deltaFu = 0.05,   relativeDelta = FALSE,   tT = 0.6, tFu = 0.6,   phiFu = 0.8, phiU = 0.8,   parE = c(a = 1, b = 1), parS = c(a = 1, b = 1),   randRatio = 1,   ns = 10, nr = FALSE, d = NULL )  res2$oc #>      ExpectedN ExpectedNactive ExpectedNcontrol PrStopEarly PrEarlyEff #> [1,]        24            11.8             12.2         0.4        0.1 #>      PrEarlyFut PrEfficacy PrFutility PrGrayZone #> [1,]        0.3        0.4        0.4        0.2"},{"path":"https://genentech.github.io/phase1b/reference/pbetaMix.html","id":null,"dir":"Reference","previous_headings":"","what":"Beta-Mixture CDF ‚Äî pbetaMix","title":"Beta-Mixture CDF ‚Äî pbetaMix","text":"Calculates CDF Beta-Mixture distribution.","code":""},{"path":"https://genentech.github.io/phase1b/reference/pbetaMix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beta-Mixture CDF ‚Äî pbetaMix","text":"","code":"pbetaMix(q, par, weights, lower.tail = TRUE)"},{"path":"https://genentech.github.io/phase1b/reference/pbetaMix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beta-Mixture CDF ‚Äî pbetaMix","text":"q (number): abscissa. par (matrix): beta parameters matrix, K rows 2 columns, corresponding beta parameters K components. weights (numeric): mixture weights beta mixture prior add 1. lower.tail (flag): TRUE (default), probabilities P[X <= x], otherwise P[X > x].","code":""},{"path":"https://genentech.github.io/phase1b/reference/pbetaMix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Beta-Mixture CDF ‚Äî pbetaMix","text":"(one minus) cdf value","code":""},{"path":"https://genentech.github.io/phase1b/reference/pbetaMix.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Beta-Mixture CDF ‚Äî pbetaMix","text":"q can vector.","code":""},{"path":"https://genentech.github.io/phase1b/reference/pbetaMix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Beta-Mixture CDF ‚Äî pbetaMix","text":"","code":"pbetaMix(q = 0.3, par = rbind(c(0.2, 0.4)), weights = 1) #> [1] 0.5947341  # Can get the one minus CDF values. pbetaMix(q = 0.3, par = rbind(c(0.2, 0.4)), weights = 1, lower.tail = FALSE) #> [1] 0.4052659  # With 2 mixture components pbetaMix(   q = 0.3, par = rbind(c(0.2, 0.4), c(1, 1)),   weights = c(0.6, 0.4) ) #> [1] 0.4768404  # Can also specify x as a vector. pbetaMix(   q = seq(0, 1, .01), par = rbind(c(0.2, 0.4), c(1, 1)),   weights = c(0.6, 0.4) ) #>   [1] 0.0000000 0.1788327 0.2090334 0.2302374 0.2474000 0.2622119 0.2754695 #>   [8] 0.2876164 0.2989265 0.3095818 0.3197098 0.3294035 0.3387328 0.3477521 #>  [15] 0.3565040 0.3650231 0.3733377 0.3814710 0.3894429 0.3972698 0.4049661 #>  [22] 0.4125442 0.4200147 0.4273871 0.4346696 0.4418696 0.4489937 0.4560478 #>  [29] 0.4630371 0.4699666 0.4768404 0.4836628 0.4904372 0.4971671 0.5038556 #>  [36] 0.5105056 0.5171196 0.5237003 0.5302499 0.5367707 0.5432648 0.5497340 #>  [43] 0.5561802 0.5626052 0.5690107 0.5753984 0.5817696 0.5881261 0.5944691 #>  [50] 0.6008001 0.6071205 0.6134317 0.6197349 0.6260315 0.6323228 0.6386100 #>  [57] 0.6448944 0.6511773 0.6574601 0.6637440 0.6700303 0.6763205 0.6826158 #>  [64] 0.6889178 0.6952279 0.7015477 0.7078787 0.7142227 0.7205813 0.7269564 #>  [71] 0.7333501 0.7397644 0.7462016 0.7526640 0.7591544 0.7656755 0.7722304 #>  [78] 0.7788226 0.7854559 0.7921344 0.7988628 0.8056463 0.8124910 0.8194036 #>  [85] 0.8263919 0.8334652 0.8406340 0.8479110 0.8553117 0.8628546 0.8705630 #>  [92] 0.8784664 0.8866030 0.8950244 0.9038019 0.9130404 0.9229032 0.9336724 #>  [99] 0.9459138 0.9611540 1.0000000"},{"path":"https://genentech.github.io/phase1b/reference/pbetadiff.html","id":null,"dir":"Reference","previous_headings":"","what":"Beta difference Cumulative Probability Function ‚Äî pbetadiff","title":"Beta difference Cumulative Probability Function ‚Äî pbetadiff","text":"Calculates Cumulative Probability Function Beta difference given probability.","code":""},{"path":"https://genentech.github.io/phase1b/reference/pbetadiff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beta difference Cumulative Probability Function ‚Äî pbetadiff","text":"","code":"pbetadiff(q, parY, parX, rel.tol = .Machine$double.eps^0.1)"},{"path":"https://genentech.github.io/phase1b/reference/pbetadiff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beta difference Cumulative Probability Function ‚Äî pbetadiff","text":"q (number): vector quantiles parY (numeric): two parameters Y's Beta distribution (Treatment) parX (numeric): two parameters X's Beta distribution (Control) rel.tol (number): used stats::integrate()","code":""},{"path":"https://genentech.github.io/phase1b/reference/pbetadiff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Beta difference Cumulative Probability Function ‚Äî pbetadiff","text":"probability distribution value","code":""},{"path":"https://genentech.github.io/phase1b/reference/pbetadiff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Beta difference Cumulative Probability Function ‚Äî pbetadiff","text":"","code":"# The following examples use these parameters: parX <- c(1, 52) parY <- c(5.5, 20.5)  # Calculate probability based on quantile `Q(Z) =< 0.122838` pbetadiff(   q = 0.122838,   parY = parY,   parX = parX ) #> [1] 0.2000019  # Calculate probability based on quantile `Q(Z) =< 0.5` pbetadiff(   q = 0.5,   parY = parY,   parX = parX ) #> [1] 0.9993969"},{"path":"https://genentech.github.io/phase1b/reference/plotBounds.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the boundary decision cutpoints ‚Äî plotBounds","title":"Plot the boundary decision cutpoints ‚Äî plotBounds","text":"function plot response rate futility efficacy boundaries, used together boundsPredprob boundsPostprob","code":""},{"path":"https://genentech.github.io/phase1b/reference/plotBounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the boundary decision cutpoints ‚Äî plotBounds","text":"","code":"plotBounds(   z,   area = TRUE,   grid = TRUE,   yt = \"x\",   add = FALSE,   cols = c(\"green\", \"red\", \"darkgreen\", \"orange\"),   lwds = c(3, 3),   ltype = \"l\",   lpch = 16,   lcex = 1,   gy = 20 )"},{"path":"https://genentech.github.io/phase1b/reference/plotBounds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the boundary decision cutpoints ‚Äî plotBounds","text":"z output boundsPredprob boundsPostprob area color futility/efficacy stop area grid show grid y-axis yt indicate y axis: response rate \"p\", number responses \"x\" add add boundary lines cols specific color [1] efficacy area [2] futility area [3] efficacy boundary [4] futility boundary lwds line width (two dimensional vector) ltype line type lpch value plotting characters symbols lcex value giving amount plotting characters symbols scaled relative default. gy value adjust gray level plot (default 20), applies grid==TRUE","code":""},{"path":"https://genentech.github.io/phase1b/reference/plotBounds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the boundary decision cutpoints ‚Äî plotBounds","text":"nothing, produces plot side effect","code":""},{"path":"https://genentech.github.io/phase1b/reference/plotBounds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the boundary decision cutpoints ‚Äî plotBounds","text":"","code":"# examples plotBounds(boundsPredprob(   nvec = c(10, 20, 30, 40), p = 0.20, tT = 0.80,   phiL = 0.10, phiU = 0.90, a = 1, b = 1 ), yt = \"x\")  plotBounds(boundsPredprob(   nvec = c(10, 20, 30, 40), p = 0.20, tT = 0.80,   phiL = 0.10, phiU = 0.90, a = 1, b = 1 ), yt = \"p\") plotBounds(   boundsPostprob(     nvec = c(10, 20, 30, 40), p0 = 0.20,     tL = 0.10, tU = 0.90, a = 1, b = 1   ),   yt = \"p\", add = TRUE )"},{"path":"https://genentech.github.io/phase1b/reference/plotDecision.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a summary plot corresponding to the sumTable output ‚Äî plotDecision","title":"Plot a summary plot corresponding to the sumTable output ‚Äî plotDecision","text":"function return plot showing curve prob meaningful improvement estunated diff curve prob poor improvement estunated diff","code":""},{"path":"https://genentech.github.io/phase1b/reference/plotDecision.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a summary plot corresponding to the sumTable output ‚Äî plotDecision","text":"","code":"plotDecision(data, Pos_cut, Neg_cut)"},{"path":"https://genentech.github.io/phase1b/reference/plotDecision.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a summary plot corresponding to the sumTable output ‚Äî plotDecision","text":"data output object sumTable Pos_cut cut prob meaningful improvement Neg_cut cut prob poor improvement","code":""},{"path":"https://genentech.github.io/phase1b/reference/plotDecision.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a summary plot corresponding to the sumTable output ‚Äî plotDecision","text":"data item imputed function","code":""},{"path":"https://genentech.github.io/phase1b/reference/plotDecision.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a summary plot corresponding to the sumTable output ‚Äî plotDecision","text":"","code":"summaries <- do.call(cbind, lapply(c(0:8), sumTable, TotalSample = 25, parX = c(1, 52), cut_B = 0.2, cut_W = 0.05))  plotDecision(summaries, Pos_cut = 60, Neg_cut = 60)  #>               summaries summaries summaries summaries summaries summaries #> # resp             0.00      1.00      2.00      3.00      4.00      5.00 #> obs ORR [%]        0.00      4.00      8.00     12.00     16.00     20.00 #> mode [%]           0.00      1.02      4.80      8.83     12.92     17.04 #> CI lower [%]      -4.55     -2.42     -0.24      2.03      4.55      7.27 #> CI upper [%]      17.51     13.05     18.83     24.07     28.97     33.64 #> prob.go [%]        0.05      0.74      3.79     11.58     25.23     43.17 #> prob.nogo [%]     93.39     66.49     36.46     16.09      6.00      1.98 #>               summaries summaries summaries #> # resp             6.00      7.00      8.00 #> obs ORR [%]       24.00     28.00     32.00 #> mode [%]          21.18     25.32     29.47 #> CI lower [%]      10.17     13.20     16.37 #> CI upper [%]      38.13     42.46     46.67 #> prob.go [%]       61.70     77.26     88.13 #> prob.nogo [%]      0.59      0.17      0.04"},{"path":"https://genentech.github.io/phase1b/reference/plotOc.html","id":null,"dir":"Reference","previous_headings":"","what":"Display the operating characteristics using an oc object ‚Äî plotOc","title":"Display the operating characteristics using an oc object ‚Äî plotOc","text":"Reads results ocPredprob, ocPostprob etc. displays bar plot operating characteristics","code":""},{"path":"https://genentech.github.io/phase1b/reference/plotOc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display the operating characteristics using an oc object ‚Äî plotOc","text":"","code":"plotOc(z)"},{"path":"https://genentech.github.io/phase1b/reference/plotOc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display the operating characteristics using an oc object ‚Äî plotOc","text":"z returned oc value","code":""},{"path":"https://genentech.github.io/phase1b/reference/plotOc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display the operating characteristics using an oc object ‚Äî plotOc","text":"nothing, plots side effect","code":""},{"path":"https://genentech.github.io/phase1b/reference/plotOc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display the operating characteristics using an oc object ‚Äî plotOc","text":"","code":"# get operating character result from oc.postprob  res1 <- ocPostprob(   nnE = c(10, 20, 30), truep = 0.4, p0 = 0.2,   p1 = 0.3, tL = 0.6, tU = 0.8, parE = c(1, 1), sim = 50000 ) res1$oc #>   ExpectedN PrStopEarly PrEarlyEff PrEarlyFut PrEfficacy PrFutility PrGrayZone #> 1     19.18      0.6727    0.62098    0.05172    0.75338    0.05352     0.1931  plotOc(res1)"},{"path":"https://genentech.github.io/phase1b/reference/postprob.html","id":null,"dir":"Reference","previous_headings":"","what":"Posterior Probability of Efficacy Given Beta-Mixture Prior ‚Äî postprob","title":"Posterior Probability of Efficacy Given Beta-Mixture Prior ‚Äî postprob","text":"Compute posterior probability response probability P_E threshold. posterior probability can expressed Pr(P_E > p | data). Prior P_E ~ sum(weights * beta(parE[, 1], parE[, 2])), .e., mixture beta priors. Default one component uniform beta(1,1). observed x successes n trials. Posterior mixture beta priors, updated mixture weights beta parameters.","code":""},{"path":"https://genentech.github.io/phase1b/reference/postprob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Posterior Probability of Efficacy Given Beta-Mixture Prior ‚Äî postprob","text":"","code":"postprob(x, n, p, parE = c(1, 1), weights, betamixPost, log.p = FALSE)"},{"path":"https://genentech.github.io/phase1b/reference/postprob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Posterior Probability of Efficacy Given Beta-Mixture Prior ‚Äî postprob","text":"x (numeric): number successes. n (number): number patients. p (number): threshold P_E measured. parE (matrix): beta parameters matrix, K rows 2 columns, corresponding beta parameters K components. weights (vector): mixture weights beta mixture prior. betamixPost (matrix): optional result [h_getBetamixPost()] order speed computations. supplied, directly used, bypassing arguments (except p log.p course). log.p (number): whether return log probability","code":""},{"path":"https://genentech.github.io/phase1b/reference/postprob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Posterior Probability of Efficacy Given Beta-Mixture Prior ‚Äî postprob","text":"posterior probability response rate P_E p.","code":""},{"path":"https://genentech.github.io/phase1b/reference/postprob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Posterior Probability of Efficacy Given Beta-Mixture Prior ‚Äî postprob","text":"","code":"# Example taken from Lee and Liu (2008) : # We observed 16 successes out of 23 patients # We set a threshold of 0.60 # Assume a beta(0.6,0.4) prior for P_E # Posterior will be a beta(16.6, 7.4), Pr(P_E > p | data) = 0.836  postprob(x = 16, n = 23, p = 0.60, par = c(0.6, 0.4)) #> [1] 0.8359808  # We could instead specify a mixture prior # 2 component beta mixture prior, i.e., P_E ~ 0.6*beta(0.6,0.4) + 0.4*beta(1,1) and Pr(P_E > p | data) = 0.823 postprob(   x = 16, n = 23, p = 0.60,   par =     rbind(       c(0.6, 0.4),       c(1, 1)     ),   weights = c(0.6, 0.4) ) #> [1] 0.8226271"},{"path":"https://genentech.github.io/phase1b/reference/postprobBeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Posterior Probability of Efficacy Given Beta Prior ‚Äî postprobBeta","title":"Posterior Probability of Efficacy Given Beta Prior ‚Äî postprobBeta","text":"Compute posterior probability threshold assuming beta prior response rate response rate experimental treatment E exceeds threshold set compute posterior probability p :  Pr(P_E > p | data). Prior P_E ~ beta(, b), default set uniform beta(1,1). observed x successes n trials posterior P_E | data  ~ beta(+ x, b + n - x).","code":""},{"path":"https://genentech.github.io/phase1b/reference/postprobBeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Posterior Probability of Efficacy Given Beta Prior ‚Äî postprobBeta","text":"","code":"postprobBeta(x, n, p, a = 1, b = 1)"},{"path":"https://genentech.github.io/phase1b/reference/postprobBeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Posterior Probability of Efficacy Given Beta Prior ‚Äî postprobBeta","text":"x (numeric): number successes. n (number): number patients. p (number): threshold set compute posterior probability. (matrix): first parameter alpha beta prior (successes). b (matrix): second parameter beta beta prior (failures).","code":""},{"path":"https://genentech.github.io/phase1b/reference/postprobBeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Posterior Probability of Efficacy Given Beta Prior ‚Äî postprobBeta","text":"posterior probability response rate P_E threshold p.","code":""},{"path":"https://genentech.github.io/phase1b/reference/postprobBeta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Posterior Probability of Efficacy Given Beta Prior ‚Äî postprobBeta","text":"","code":"# Example taken from Lee & Liu (2006) # We observed 16 successes out of 23 patients # should we write this in the documentation # We set a threshold of 0.60 # Assume a beta(0.6,0.4) prior for P_E # Posterior will be a beta(16.6,22.8), Pr(P_E > p | data) = 0.8358808   # Example taken from Lee and Liu (2006) postprobBeta(x = 16, n = 23, p = 0.60, a = 0.6, b = 0.4) #> [1] 0.8359808 # Interpretation : The probability 16 of 23 successes is greater than 60 % threshold is approximately 84 %"},{"path":"https://genentech.github.io/phase1b/reference/postprobDist.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Posterior Probability with Beta Prior on standard of care S ‚Äî postprobDist","title":"Compute the Posterior Probability with Beta Prior on standard of care S ‚Äî postprobDist","text":"Using approach Thall Simon (Biometrics, 1994), evaluates posterior probability achieving superior response rate treatment group E compared standard care S. ESee note two formulations difference response rates.","code":""},{"path":"https://genentech.github.io/phase1b/reference/postprobDist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Posterior Probability with Beta Prior on standard of care S ‚Äî postprobDist","text":"","code":"postprobDist(   x,   n,   xS = 0,   nS = 0,   delta,   relativeDelta = FALSE,   parE = c(1, 1),   weights,   parS = c(1, 1),   weightsS )"},{"path":"https://genentech.github.io/phase1b/reference/postprobDist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Posterior Probability with Beta Prior on standard of care S ‚Äî postprobDist","text":"x (numeric): number success counts E group. n (number): number patients E group. xS (number): number success counts S group. nS (number): number patients S group. delta (number): margin response rate treatment group better standard care control S group. Note can also negative, e.g. non-inferiority assessed. relativeDelta (flag): TRUE, relativeDelta used. Represents minimum response rate magnitude delta S non-responding patients. See note. parE (numeric matrix): parameters beta distribution. matrix, needs 2 columns, row corresponds component beta-mixture distribution E group. See details. weights (numeric): non-negative mixture weights beta mixture prior group E. See details. parS (numeric matrix): parameters beta distribution. matrix, needs 2 columns, row corresponds component beta-mixture distribution S group. See details. weightsS (numeric): non-negative mixture weights beta mixture prior group S. See details.","code":""},{"path":"https://genentech.github.io/phase1b/reference/postprobDist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Posterior Probability with Beta Prior on standard of care S ‚Äî postprobDist","text":"posterior probability","code":""},{"path":"https://genentech.github.io/phase1b/reference/postprobDist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the Posterior Probability with Beta Prior on standard of care S ‚Äî postprobDist","text":"beta mixture prior E arm requires argument parE weights. beta mixture prior S arm requires argument parS weightsS. See [postprob()] details. beta-mixture used, default, weights uniform across components. Weights can exceed 1, algorithm normalize weights weights sum 1.","code":""},{"path":[]},{"path":"https://genentech.github.io/phase1b/reference/postprobDist.html","id":"delta-","dir":"Reference","previous_headings":"","what":"Delta :","title":"Compute the Posterior Probability with Beta Prior on standard of care S ‚Äî postprobDist","text":"desired improvement denoted delta. two options using delta. absolute case relativeDelta = FALSE relative relativeDelta = TRUE. absolute case define absolute delta, greater P_S, response rate standard care control S group posterior Pr(P_E > P_S + delta | data). relative case, suppose treatment group's response rate assumed greater P_S + (1-P_S) * delta posterior Pr(P_E > P_S + (1 - P_S) * delta | data).","code":""},{"path":"https://genentech.github.io/phase1b/reference/postprobDist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the Posterior Probability with Beta Prior on standard of care S ‚Äî postprobDist","text":"","code":"# An example similar to Lee and Liu (2008). postprobDist(   x = 16,   n = 23,   parE = c(0.6, 0.4),   parS = c(0.6, 0.4),   delta = 0.1,   relativeDelta = FALSE ) #> [1] 0.4431067  # For a sequence of success outcomes for Experimental arm. postprobDist(   x = c(16, 17),   n = 23,   parE = c(0.6, 0.4),   parS = c(0.6, 0.4),   delta = 0.1,   relativeDelta = FALSE ) #> [1] 0.4431067 0.4706541  # When we use a relative difference and look at several possible number of responses. postprobDist(   x = 1:23,   n = 23,   parE = c(0.2, 0.8),   parS = c(0.6, 0.4),   delta = 0.1,   relativeDelta = TRUE ) #>  [1] 0.008765651 0.031367331 0.066103157 0.105615555 0.144114579 0.179531092 #>  [7] 0.212086794 0.242636671 0.271938471 0.300533490 0.328811161 0.357080040 #> [13] 0.385614492 0.414685509 0.444586146 0.475659417 0.508336740 0.543200029 #> [19] 0.581095188 0.623367348 0.672432629 0.733545997 0.823358859  # When we use beta mixtures for both the Experimental and SOC arms. postprobDist(   x = 16,   n = 23,   parE =     rbind(       c(0.6, 0.4),       c(10, 20)     ),   parS =     rbind(       c(0.6, 0.4),       c(10, 10)     ),   weightsS = c(1, 3),   delta = 0.1 ) #> [1] 0.6168586  # Experimental arm only (strictly single arm trial), uniform prior in Experimental arm. # Non-uniform Prior used for SOC arm as no precedent data. postprobDist(   x = 16,   n = 23,   xS = 0,   nS = 0,   delta = 0,   relativeDelta = FALSE,   parS = c(2, 3),   weightsS = 1 ) #> [1] 0.8842491 # Experimental arm and SOC, uniform prior in both E and S arms, default setting used. postprobDist(   x = 16,   n = 20,   xS = 10,   nS = 20,   delta = 0,   relativeDelta = FALSE,   weightsS = 1 ) #> [1] 0.9741857  # Experimental and SOC arm, with beta mix prior for both arms. # For each of the SOC arm is of 3 priors, therefore 3 sets of beta parameters, and 3 weights. postprobDist(   x = 16,   n = 20,   xS = 10,   nS = 20,   delta = 0.1,   relativeDelta = TRUE,   parE = rbind(c(1, 1), c(3, 4), c(8, 9)),   weights = c(5, 3, 2),   parS = rbind(c(4, 5), c(2, 3), c(4, 4)),   weightsS = c(2, 5, 3) ) #> [1] 0.9415121"},{"path":"https://genentech.github.io/phase1b/reference/predprob.html","id":null,"dir":"Reference","previous_headings":"","what":"Predictive probability of trial success ‚Äî predprob","title":"Predictive probability of trial success ‚Äî predprob","text":"Compute predictive probability trial success given current data. Success means end trial posterior probability Pr(P_E > p) >= thetaT, p fixed response rate threshold P_E response rate treatment group E group. predictive probability success : pp = sum : Pr(Y=|x,n)*{Pr(P_E > p|x,Y=)>=thetaT} Y number future responses treatment group x current number responses treatment group n. prior response rate experimental arm P_E ~ beta(, b). table following contents included return output : : Y = , number future successes Nmax-n subjects. density: Pr(Y = |x) using beta-(mixture)-binomial distribution. posterior: Pr(P_E > p | x, Y=) using beta posterior. success: indicator (b > thetaT).","code":""},{"path":"https://genentech.github.io/phase1b/reference/predprob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predictive probability of trial success ‚Äî predprob","text":"","code":"predprob(x, n, Nmax, p, thetaT, parE = c(1, 1), weights)"},{"path":"https://genentech.github.io/phase1b/reference/predprob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predictive probability of trial success ‚Äî predprob","text":"x (number): number successes. n (number): number patients. Nmax (number): maximum number patients end trial E group. p (number): threshold response rate. thetaT (number): threshold probability p. parE (numeric): beta parameters matrix, K rows 2 columns, corresponding beta parameters K components. weights (numeric): mixture weights beta mixture prior.","code":""},{"path":"https://genentech.github.io/phase1b/reference/predprob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predictive probability of trial success ‚Äî predprob","text":"list returned names result predictive probability table numeric values counts responses remaining patients, probabilities counts, corresponding probabilities threshold, trial success indicators.","code":""},{"path":"https://genentech.github.io/phase1b/reference/predprob.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Predictive probability of trial success ‚Äî predprob","text":"Lee, J. J., & Liu, D. D. (2008). predictive probability design phase II cancer clinical trials. Clinical Trials, 5(2), 93-106. doi:10.1177/1740774508089279","code":""},{"path":"https://genentech.github.io/phase1b/reference/predprob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predictive probability of trial success ‚Äî predprob","text":"","code":"# The original Lee and Liu (Table 1) example: # Nmax = 40, x = 16, n = 23, beta(0.6,0.4) prior distribution, # thetaT = 0.9. The control response rate is 60%: predprob(   x = 16, n = 23, Nmax = 40, p = 0.6, thetaT = 0.9,   parE = c(0.6, 0.4) ) #> $result #> [1] 0.5655589 #>  #> $table #>    counts cumul_counts density   posterior success #> 1       0           23  0.0000 0.005858397   FALSE #> 2       1           24  0.0000 0.013782046   FALSE #> 3       2           25  0.0001 0.029584325   FALSE #> 4       3           26  0.0006 0.058130376   FALSE #> 5       4           27  0.0021 0.104881818   FALSE #> 6       5           28  0.0058 0.174328134   FALSE #> 7       6           29  0.0135 0.267887754   FALSE #> 8       7           30  0.0276 0.382146405   FALSE #> 9       8           31  0.0497 0.508508727   FALSE #> 10      9           32  0.0794 0.634871049   FALSE #> 11     10           33  0.1129 0.748893301   FALSE #> 12     11           34  0.1426 0.841482798   FALSE #> 13     12           35  0.1587 0.908912106    TRUE #> 14     13           36  0.1532 0.952764733    TRUE #> 15     14           37  0.1246 0.978098514    TRUE #> 16     15           38  0.0811 0.991013775    TRUE #> 17     16           39  0.0381 0.996776597    TRUE #> 18     17           40  0.0099 0.999003945    TRUE #>   # Lowering/Increasing the probability threshold thetaT of course increases # /decreases the predictive probability of success, respectively: predprob(   x = 16, n = 23, Nmax = 40, p = 0.6, thetaT = 0.8,   parE = c(0.6, 0.4) ) #> $result #> [1] 0.7081907 #>  #> $table #>    counts cumul_counts density   posterior success #> 1       0           23  0.0000 0.005858397   FALSE #> 2       1           24  0.0000 0.013782046   FALSE #> 3       2           25  0.0001 0.029584325   FALSE #> 4       3           26  0.0006 0.058130376   FALSE #> 5       4           27  0.0021 0.104881818   FALSE #> 6       5           28  0.0058 0.174328134   FALSE #> 7       6           29  0.0135 0.267887754   FALSE #> 8       7           30  0.0276 0.382146405   FALSE #> 9       8           31  0.0497 0.508508727   FALSE #> 10      9           32  0.0794 0.634871049   FALSE #> 11     10           33  0.1129 0.748893301   FALSE #> 12     11           34  0.1426 0.841482798    TRUE #> 13     12           35  0.1587 0.908912106    TRUE #> 14     13           36  0.1532 0.952764733    TRUE #> 15     14           37  0.1246 0.978098514    TRUE #> 16     15           38  0.0811 0.991013775    TRUE #> 17     16           39  0.0381 0.996776597    TRUE #> 18     17           40  0.0099 0.999003945    TRUE #>   predprob(   x = 16, n = 23, Nmax = 40, p = 0.6, thetaT = 0.95,   parE = c(0.6, 0.4) ) #> $result #> [1] 0.4068235 #>  #> $table #>    counts cumul_counts density   posterior success #> 1       0           23  0.0000 0.005858397   FALSE #> 2       1           24  0.0000 0.013782046   FALSE #> 3       2           25  0.0001 0.029584325   FALSE #> 4       3           26  0.0006 0.058130376   FALSE #> 5       4           27  0.0021 0.104881818   FALSE #> 6       5           28  0.0058 0.174328134   FALSE #> 7       6           29  0.0135 0.267887754   FALSE #> 8       7           30  0.0276 0.382146405   FALSE #> 9       8           31  0.0497 0.508508727   FALSE #> 10      9           32  0.0794 0.634871049   FALSE #> 11     10           33  0.1129 0.748893301   FALSE #> 12     11           34  0.1426 0.841482798   FALSE #> 13     12           35  0.1587 0.908912106   FALSE #> 14     13           36  0.1532 0.952764733    TRUE #> 15     14           37  0.1246 0.978098514    TRUE #> 16     15           38  0.0811 0.991013775    TRUE #> 17     16           39  0.0381 0.996776597    TRUE #> 18     17           40  0.0099 0.999003945    TRUE #>   # Mixed beta prior predprob(   x = 20, n = 23, Nmax = 40, p = 0.6, thetaT = 0.9,   parE = rbind(c(1, 1), c(25, 15)),   weights = c(3, 1) ) #> $result #> [1] 0.9874431 #>  #> $table #>    counts cumul_counts density posterior success #> 1       0           23  0.0000 0.1560061   FALSE #> 2       1           24  0.0000 0.2352310   FALSE #> 3       2           25  0.0000 0.3303366   FALSE #> 4       3           26  0.0000 0.4359140   FALSE #> 5       4           27  0.0001 0.5449206   FALSE #> 6       5           28  0.0003 0.6499804   FALSE #> 7       6           29  0.0011 0.7446568   FALSE #> 8       7           30  0.0031 0.8244101   FALSE #> 9       8           31  0.0080 0.8870640   FALSE #> 10      9           32  0.0177 0.9327462    TRUE #> 11     10           33  0.0348 0.9634096    TRUE #> 12     11           34  0.0613 0.9821219    TRUE #> 13     12           35  0.0973 0.9923193    TRUE #> 14     13           36  0.1394 0.9971675    TRUE #> 15     14           37  0.1783 0.9991255    TRUE #> 16     15           38  0.1964 0.9997794    TRUE #> 17     16           39  0.1708 0.9999557    TRUE #> 18     17           40  0.0913 0.9999932    TRUE #>"},{"path":"https://genentech.github.io/phase1b/reference/predprobDist.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the predictive probability that the trial will be\nsuccessful, with a prior distribution on the SOC ‚Äî predprobDist","title":"Compute the predictive probability that the trial will be\nsuccessful, with a prior distribution on the SOC ‚Äî predprobDist","text":"Compute predictive probability trial success given current data. Success means end trial posterior probability Pr(P_E > P_S + delta_0 | data) >= thetaT. predictive probability success : pp = sum : Pr(Y = | x , n)*{Pr(P_E > P_S + delta | x,Y=) >= thetaT}, Y number future responses treatment group x current number responses treatment group n. Prior P_E ~ beta(, b) uniform beta(1,1). However, also beta mixture prior can specified. Analogously P_S either classic beta prior beta mixture prior can specified. Also data SOC might available. predictive probability generally defined pp = sum , j: Pr(Y = | x, n)*Pr(Z = j | xS, nS )*{Pr(P_E > P_S + delta | x,xS, Y=, Z=j ) >= thetaT} Z future number responses SOC group, xS current number responses SOC group. case NmaxControl = 0, table following contents included return output : : Y = , number future successes Nmax-n subjects. density: Pr(Y = |x) using beta-(mixture)-binomial distribution. posterior: Pr(P_E > P_S + delta | x, Y = ) using beta posterior. success: indicator (b>thetaT). table following contents included  return value (case NmaxControl zero): : Y=(number future successes Nmax-n subjects) py: Pr(Y=|x) using beta-(mixture)-binomial distribution b: Pr(P_E > P_S + delta | x, Y=) bgttheta: indicator (b>thetaT) NmaxControl zero, .e., data control treatment available trial, list included following elements: pyz: matrix probabilities Pr(Y=, Z=j | x, xS) b: matrix Pr(P_E > P_S + delta | x, xS, Y=, Z=j) bgttheta: matrix indicators (b>thetaT)","code":""},{"path":"https://genentech.github.io/phase1b/reference/predprobDist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the predictive probability that the trial will be\nsuccessful, with a prior distribution on the SOC ‚Äî predprobDist","text":"","code":"predprobDist(   x,   n,   xS = 0,   nS = 0,   Nmax,   NmaxControl = 0,   delta = 0,   relativeDelta = FALSE,   parE = c(a = 1, b = 1),   weights,   parS = c(a = 1, b = 1),   weightsS,   thetaT )"},{"path":"https://genentech.github.io/phase1b/reference/predprobDist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the predictive probability that the trial will be\nsuccessful, with a prior distribution on the SOC ‚Äî predprobDist","text":"x (number): number successes treatment group interim n (number): number patients treatment group interim xS (number): number successes SOC group interim nS (number): number patients SOC group Nmax (number): maximum number patients treatment group end trial NmaxControl (number): maximum number patients end trial SOC group delta (``): margin response rate treatment group better SOC group relativeDelta (``): see [postprobDist()] parE (``): beta parameters matrix, K rows 2 columns, corresponding beta parameters K components. default uniform prior. weights (``): mixture weights beta mixture prior. Default uniform weights across mixture components. parS (``): beta prior parameters SOC group weightsS (``): weights SOC group thetaT (``): threshold probability used","code":""},{"path":"https://genentech.github.io/phase1b/reference/predprobDist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the predictive probability that the trial will be\nsuccessful, with a prior distribution on the SOC ‚Äî predprobDist","text":"list returned names result predictive probability table (single arm case)  list tables ... (completed)","code":""},{"path":"https://genentech.github.io/phase1b/reference/predprobDist.html","id":"delta-from-postprobdist-","dir":"Reference","previous_headings":"","what":"Delta from postprobDist :","title":"Compute the predictive probability that the trial will be\nsuccessful, with a prior distribution on the SOC ‚Äî predprobDist","text":"desired improvement denoted delta. two options using delta. absolute case relativeDelta = FALSE relative relativeDelta = TRUE. absolute case define absolute delta, greater P_S, response rate SOC group posterior Pr(P_E > P_S + delta | data). relative case, suppose treatment group's response rate assumed greater P_S + (1-P_S) * delta posterior Pr(P_E > P_S + (1 - P_S) * delta | data).","code":""},{"path":"https://genentech.github.io/phase1b/reference/predprobDist.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute the predictive probability that the trial will be\nsuccessful, with a prior distribution on the SOC ‚Äî predprobDist","text":"Lee, J. J., & Liu, D. D. (2008). predictive probability design phase II cancer clinical trials. Clinical Trials, 5(2), 93-106. doi:10.1177/1740774508089279","code":""},{"path":"https://genentech.github.io/phase1b/reference/predprobDist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the predictive probability that the trial will be\nsuccessful, with a prior distribution on the SOC ‚Äî predprobDist","text":"","code":"# The original Lee and Liu (Table 1) example: # Nmax=40, x=16, n=23, beta(0.6,0.4) prior distribution, # thetaT=0.9. The control response rate is 60%: predprob(   x = 16, n = 23, Nmax = 40, p = 0.6, thetaT = 0.9,   parE = c(0.6, 0.4) ) #> $result #> [1] 0.5655589 #>  #> $table #>    counts cumul_counts density   posterior success #> 1       0           23  0.0000 0.005858397   FALSE #> 2       1           24  0.0000 0.013782046   FALSE #> 3       2           25  0.0001 0.029584325   FALSE #> 4       3           26  0.0006 0.058130376   FALSE #> 5       4           27  0.0021 0.104881818   FALSE #> 6       5           28  0.0058 0.174328134   FALSE #> 7       6           29  0.0135 0.267887754   FALSE #> 8       7           30  0.0276 0.382146405   FALSE #> 9       8           31  0.0497 0.508508727   FALSE #> 10      9           32  0.0794 0.634871049   FALSE #> 11     10           33  0.1129 0.748893301   FALSE #> 12     11           34  0.1426 0.841482798   FALSE #> 13     12           35  0.1587 0.908912106    TRUE #> 14     13           36  0.1532 0.952764733    TRUE #> 15     14           37  0.1246 0.978098514    TRUE #> 16     15           38  0.0811 0.991013775    TRUE #> 17     16           39  0.0381 0.996776597    TRUE #> 18     17           40  0.0099 0.999003945    TRUE #>  # So the predictive probability is 56.6%. 12 responses # in the remaining 17 patients are required for success.  # Now to the modified example, where the control response # rate p has a beta(7, 11) distribution. # For example if the 60% threshold (control) stems from a trial # with 10 patients, of which 6 were observed with response. predprobDist(   x = 16, n = 23, Nmax = 40, delta = 0, thetaT = 0.9,   parE = c(0.6, 0.4), parS = c(7, 11) ) #> $result #> [1] 0.9778204 #>  #> $table #>    counts      density posterior success #> 1       0 1.885196e-06 0.5530716   FALSE #> 2       1 2.273514e-05 0.6214508   FALSE #> 3       2 1.429066e-04 0.6856889   FALSE #> 4       3 6.210428e-04 0.7444267   FALSE #> 5       4 2.088409e-03 0.7967127   FALSE #> 6       5 5.765730e-03 0.8420189   FALSE #> 7       6 1.353693e-02 0.8802192   FALSE #> 8       7 2.762957e-02 0.9115393    TRUE #> 9       8 4.969953e-02 0.9364854    TRUE #> 10      9 7.939015e-02 0.9557619    TRUE #> 11     10 1.129104e-01 0.9701884    TRUE #> 12     11 1.426318e-01 0.9806229    TRUE #> 13     12 1.587354e-01 0.9878972    TRUE #> 14     13 1.531657e-01 0.9927688    TRUE #> 15     14 1.245523e-01 0.9958900    TRUE #> 16     15 8.109152e-02 0.9977932    TRUE #> 17     16 3.813232e-02 0.9988905    TRUE #> 18     17 9.881666e-03 0.9994836    TRUE #>  # Now only7 responses are needed in the remaining 17 patients # in order to have a successful trial. # Also, the predictive probability for a Go decision # is now 97.78% instead of merely 56.6%.  # If the response threshold of 60% stems from an SOC estimate (e.g. 50% = 5/10) # and a margin of e.g. 10%, then the margin can be specified with # the delta argument: predprobDist(   x = 16, n = 23, Nmax = 40, delta = 0.1, thetaT = 0.9,   parE = c(1, 1), parS = c(6, 11) ) #> $result #> [1] 0.8004621 #>  #> $table #>    counts      density posterior success #> 1       0 2.283242e-06 0.3716084   FALSE #> 2       1 2.749403e-05 0.4400664   FALSE #> 3       2 1.721366e-04 0.5092459   FALSE #> 4       3 7.433170e-04 0.5772595   FALSE #> 5       4 2.477723e-03 0.6423841   FALSE #> 6       5 6.764185e-03 0.7031617   FALSE #> 7       6 1.566443e-02 0.7584690   FALSE #> 8       7 3.145318e-02 0.8075520   FALSE #> 9       8 5.550560e-02 0.8500272   FALSE #> 10      9 8.672751e-02 0.8858553   FALSE #> 11     10 1.202621e-01 0.9152925    TRUE #> 12     11 1.475944e-01 0.9388274    TRUE #> 13     12 1.589479e-01 0.9571117    TRUE #> 14     13 1.477400e-01 0.9708907    TRUE #> 15     14 1.151221e-01 0.9809398    TRUE #> 16     15 7.137569e-02 0.9880117    TRUE #> 17     16 3.172253e-02 0.9927963    TRUE #> 18     17 7.697378e-03 0.9958932    TRUE #>  # This again changes the result: Only 10 future responses are required, # the predictive probability of success is now 80%.  # Next we will use a beta mixture prior, with a weight of 1/3 for an # informative beta(50, 10) prior, on the experimental response rate: predprobDist(   x = 16, n = 23, Nmax = 40, delta = 0.1, thetaT = 0.9,   parE = rbind(c(1, 1), c(50, 10)),   weights = c(2, 1), parS = c(6, 11) ) #> $result #> [1] 0.8719377 #>  #> $table #>    counts      density posterior success #> 1       0 0.0000013665 0.3716442   FALSE #> 2       1 0.0000164568 0.4401569   FALSE #> 3       2 0.0001030642 0.5094585   FALSE #> 4       3 0.0004453712 0.5777253   FALSE #> 5       4 0.0014870715 0.6433349   FALSE #> 6       5 0.0040748393 0.7049694   FALSE #> 7       6 0.0095102819 0.7616623   FALSE #> 8       7 0.0193925232 0.8127701   FALSE #> 9       8 0.0352153786 0.8578603   FALSE #> 10      9 0.0578159915 0.8965520   FALSE #> 11     10 0.0867552786 0.9284286    TRUE #> 12     11 0.1194156177 0.9531859    TRUE #> 13     12 0.1495254621 0.9710045    TRUE #> 14     13 0.1661334169 0.9828056    TRUE #> 15     14 0.1566053804 0.9900552    TRUE #> 16     15 0.1165762124 0.9942733    TRUE #> 17     16 0.0605313683 0.9966617    TRUE #> 18     17 0.0163949189 0.9980136    TRUE #>  # Now still 10 future responses are required for success, but the predictive # success probability is higher (87.2%).  # We can also have additional controls in our trial. For example # assume that in the interim analysis we had 10 control patients observed # with 5 responses out of 20 in total at the end. # We also had historical control data (say 60 patients of # which 20 responded), but in order to be robust against changes in the response # rate over time, we will again use a beta mixture, putting only 1/3 of weight # on the historical controls: predprobDist(   x = 16, n = 23, xS = 5, nS = 10,   Nmax = 40, NmaxControl = 20,   delta = 0.1, thetaT = 0.9,   parE = rbind(c(1, 1), c(50, 10)),   weights = c(2, 1),   parS = rbind(c(1, 1), c(20, 40)),   weightsS = c(2, 1) ) #> $result #> [1] 0.5989817 #>  #> $tables #> $tables$pyz #>               0            1            2            3            4 #> 0  1.636390e-08 7.156485e-08 1.591139e-07 2.356831e-07 2.610416e-07 #> 1  1.970710e-07 8.618577e-07 1.916213e-06 2.838338e-06 3.143732e-06 #> 2  1.234198e-06 5.397564e-06 1.200069e-05 1.777569e-05 1.968828e-05 #> 3  5.333342e-06 2.332450e-05 5.185858e-05 7.681409e-05 8.507897e-05 #> 4  1.780775e-05 7.787929e-05 1.731531e-04 2.564783e-04 2.840743e-04 #> 5  4.879639e-05 2.134030e-04 4.744702e-04 7.027959e-04 7.784138e-04 #> 6  1.138861e-04 4.980621e-04 1.107368e-03 1.640258e-03 1.816743e-03 #> 7  2.322264e-04 1.015604e-03 2.258046e-03 3.344668e-03 3.704541e-03 #> 8  4.217058e-04 1.844261e-03 4.100443e-03 6.073669e-03 6.727170e-03 #> 9  6.923492e-04 3.027876e-03 6.732036e-03 9.971643e-03 1.104455e-02 #> 10 1.038899e-03 4.543453e-03 1.010170e-02 1.496286e-02 1.657280e-02 #> 11 1.430008e-03 6.253904e-03 1.390463e-02 2.059586e-02 2.281189e-02 #> 12 1.790574e-03 7.830784e-03 1.741059e-02 2.578896e-02 2.856375e-02 #> 13 1.989455e-03 8.700558e-03 1.934441e-02 2.865337e-02 3.173636e-02 #> 14 1.875357e-03 8.201566e-03 1.823497e-02 2.701005e-02 2.991622e-02 #> 15 1.396006e-03 6.105202e-03 1.357402e-02 2.010614e-02 2.226948e-02 #> 16 7.248660e-04 3.170083e-03 7.048212e-03 1.043997e-02 1.156327e-02 #> 17 1.963299e-04 8.586168e-04 1.909008e-03 2.827665e-03 3.131910e-03 #>               5            6            7            8            9 #> 0  2.326759e-07 1.759661e-07 1.156659e-07 6.436294e-08 2.734766e-08 #> 1  2.802123e-06 2.119166e-06 1.392968e-06 7.751249e-07 3.293487e-07 #> 2  1.754888e-05 1.327172e-05 8.723754e-06 4.854382e-06 2.062615e-06 #> 3  7.583400e-05 5.735108e-05 3.769797e-05 2.097724e-05 8.913179e-06 #> 4  2.532058e-04 1.914923e-04 1.258716e-04 7.004193e-05 2.976064e-05 #> 5  6.938287e-04 5.247228e-04 3.449104e-04 1.919273e-04 8.154943e-05 #> 6  1.619329e-03 1.224652e-03 8.049875e-04 4.479398e-04 1.903285e-04 #> 7  3.301993e-03 2.497203e-03 1.641459e-03 9.133991e-04 3.881010e-04 #> 8  5.996173e-03 4.534734e-03 2.980768e-03 1.658665e-03 7.047626e-04 #> 9  9.844412e-03 7.445047e-03 4.893772e-03 2.723167e-03 1.157067e-03 #> 10 1.477195e-02 1.117160e-02 7.343307e-03 4.086224e-03 1.736226e-03 #> 11 2.033307e-02 1.537732e-02 1.010781e-02 5.624545e-03 2.389855e-03 #> 12 2.545992e-02 1.925461e-02 1.265642e-02 7.042736e-03 2.992441e-03 #> 13 2.828778e-02 2.139324e-02 1.406218e-02 7.824980e-03 3.324815e-03 #> 14 2.666542e-02 2.016630e-02 1.325569e-02 7.376204e-03 3.134131e-03 #> 15 1.984960e-02 1.501168e-02 9.867467e-03 5.490807e-03 2.333030e-03 #> 16 1.030676e-02 7.794710e-03 5.123612e-03 2.851062e-03 1.211409e-03 #> 17 2.791586e-03 2.111197e-03 1.387730e-03 7.722102e-04 3.281102e-04 #>              10 #> 0  6.714161e-09 #> 1  8.085884e-08 #> 2  5.063954e-07 #> 3  2.188287e-06 #> 4  7.306577e-06 #> 5  2.002131e-05 #> 6  4.672782e-05 #> 7  9.528322e-05 #> 8  1.730272e-04 #> 9  2.840731e-04 #> 10 4.262634e-04 #> 11 5.867366e-04 #> 12 7.346783e-04 #> 13 8.162799e-04 #> 14 7.694648e-04 #> 15 5.727855e-04 #> 16 2.974148e-04 #> 17 8.055479e-05 #>  #> $tables$b #>            0         1         2         3         4         5          6 #> 0  0.5257346 0.4312132 0.3464980 0.2680767 0.1946083 0.1278211 0.07269905 #> 1  0.6164888 0.5248360 0.4366781 0.3493814 0.2622247 0.1781748 0.10497694 #> 2  0.7011371 0.6164236 0.5290576 0.4365535 0.3381350 0.2374450 0.14489916 #> 3  0.7759524 0.7012532 0.6186670 0.5251436 0.4190636 0.3038799 0.19209595 #> 4  0.8386592 0.7757668 0.7011830 0.6107733 0.5013600 0.3751874 0.24579597 #> 5  0.8885541 0.8379634 0.7735289 0.6898140 0.5816063 0.4489661 0.30507234 #> 6  0.9262891 0.8874080 0.8341266 0.7598142 0.6570959 0.5231075 0.36911214 #> 7  0.9534412 0.9249253 0.8827878 0.8195885 0.7260451 0.5960170 0.43736984 #> 8  0.9720282 0.9521299 0.9203481 0.8689964 0.7874849 0.6665275 0.50942884 #> 9  0.9841041 0.9709592 0.9482116 0.9085447 0.8409019 0.7334844 0.58443319 #> 10 0.9915057 0.9833341 0.9679771 0.9390206 0.8858537 0.7952108 0.66022457 #> 11 0.9957471 0.9909860 0.9812476 0.9613482 0.9218925 0.8493818 0.73288679 #> 12 0.9980000 0.9953960 0.9895849 0.9766815 0.9489523 0.8937678 0.79763325 #> 13 0.9991074 0.9977573 0.9944615 0.9864822 0.9678227 0.9274362 0.85085818 #> 14 0.9996155 0.9989408 0.9971338 0.9923469 0.9801227 0.9512658 0.89163037 #> 15 0.9998370 0.9995057 0.9985292 0.9956911 0.9877617 0.9673400 0.92141809 #> 16 0.9999308 0.9997681 0.9992393 0.9975518 0.9923973 0.9779514 0.94275092 #> 17 0.9999701 0.9998893 0.9995995 0.9985857 0.9952127 0.9849739 0.95808432 #>             7          8           9          10 #> 0  0.03446032 0.01337663 0.004262331 0.001121434 #> 1  0.05165626 0.02087630 0.006951808 0.001920433 #> 2  0.07407344 0.03122238 0.010897011 0.003173482 #> 3  0.10214142 0.04501075 0.016525195 0.005098255 #> 4  0.13617138 0.06292971 0.024413350 0.008024192 #> 5  0.17649408 0.08586691 0.035385174 0.012466593 #> 6  0.22363510 0.11505762 0.050652910 0.019241758 #> 7  0.27841864 0.15220229 0.071967427 0.029613131 #> 8  0.34180117 0.19937000 0.101642262 0.045393701 #> 9  0.41418768 0.25838321 0.142170641 0.068807293 #> 10 0.49421282 0.32949245 0.195144167 0.101833237 #> 11 0.57771556 0.40988163 0.259716644 0.145041894 #> 12 0.65829416 0.49352938 0.331871554 0.196700263 #> 13 0.72980920 0.57339337 0.405739215 0.253236958 #> 14 0.78891577 0.64439909 0.476191446 0.310932082 #> 15 0.83555624 0.70474947 0.540514258 0.367368500 #> 16 0.87168673 0.75516790 0.598295826 0.421730160 #> 17 0.89979569 0.79748034 0.650440254 0.474339349 #>  #> $tables$success #>        0     1     2     3     4     5     6     7     8     9    10 #> 0  FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #> 1  FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #> 2  FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #> 3  FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #> 4  FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #> 5  FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #> 6   TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #> 7   TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #> 8   TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #> 9   TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #> 10  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #> 11  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE #> 12  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE #> 13  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE #> 14  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE #> 15  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE #> 16  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE #> 17  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE #>  #>  # Now we only have 59.9% predictive probability of success. The bgttheta matrix # lists the cases where we would have success, for all possible combinations # of future responses in the control and experimental arms. We see that the # success threshold for experimental responses depends on the number of # control responses."},{"path":"https://genentech.github.io/phase1b/reference/qbetaMix.html","id":null,"dir":"Reference","previous_headings":"","what":"Beta-Mixture Quantile Function ‚Äî qbetaMix","title":"Beta-Mixture Quantile Function ‚Äî qbetaMix","text":"Calculates quantile Beta-Mixture distribution given probability.","code":""},{"path":"https://genentech.github.io/phase1b/reference/qbetaMix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beta-Mixture Quantile Function ‚Äî qbetaMix","text":"","code":"qbetaMix(p, par, weights, lower.tail = TRUE)"},{"path":"https://genentech.github.io/phase1b/reference/qbetaMix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beta-Mixture Quantile Function ‚Äî qbetaMix","text":"p (numeric): required probability. par (number): beta parameters matrix, K rows 2 columns, corresponding beta parameters K components. weights (matrix): mixture weights beta mixture prior. lower.tail (flag): whether CDF x taken lower upper tail","code":""},{"path":"https://genentech.github.io/phase1b/reference/qbetaMix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Beta-Mixture Quantile Function ‚Äî qbetaMix","text":"abscissa.","code":""},{"path":"https://genentech.github.io/phase1b/reference/qbetaMix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Beta-Mixture Quantile Function ‚Äî qbetaMix","text":"","code":"# Only 1 mixture component, i.e., weights = 1 qbetaMix(   p = 0.60,   par = rbind(c(0.2, 0.4)),   weights = 1 ) #> [1] 0.3112065  # With 2 mixture components qbetaMix(   p = 0.6, par = rbind(c(0.2, 0.4), c(1, 1)),   weights = c(0.6, 0.4) ) #> [1] 0.4887352  # Can also specify q as a vector qbetaMix(   p = seq(0, 1, .01),   par = rbind(c(0.2, 0.4), c(1, 1)),   weights = c(0.6, 0.4) ) #>   [1] 0.000000e+00 8.423661e-09 2.000503e-07 1.492416e-06 6.298835e-06 #>   [6] 1.921223e-05 4.776296e-05 1.030988e-04 2.005829e-04 3.603467e-04 #>  [11] 6.076449e-04 9.730195e-04 1.492178e-03 2.205548e-03 3.157486e-03 #>  [16] 4.395074e-03 5.966673e-03 7.920213e-03 1.030139e-02 1.315198e-02 #>  [21] 1.650834e-02 2.040028e-02 2.485037e-02 2.987369e-02 3.547799e-02 #>  [26] 4.166420e-02 4.842718e-02 5.575661e-02 6.363795e-02 7.205336e-02 #>  [31] 8.098254e-02 9.040354e-02 1.002934e-01 1.106286e-01 1.213856e-01 #>  [36] 1.325413e-01 1.440727e-01 1.559580e-01 1.681759e-01 1.807060e-01 #>  [41] 1.935289e-01 2.066261e-01 2.199802e-01 2.335743e-01 2.473928e-01 #>  [46] 2.614207e-01 2.756437e-01 2.900485e-01 3.046221e-01 3.193525e-01 #>  [51] 3.342281e-01 3.492378e-01 3.643710e-01 3.796176e-01 3.949677e-01 #>  [56] 4.104120e-01 4.259414e-01 4.415469e-01 4.572200e-01 4.729522e-01 #>  [61] 4.887352e-01 5.045608e-01 5.204208e-01 5.363071e-01 5.522116e-01 #>  [66] 5.681261e-01 5.840423e-01 5.999518e-01 6.158460e-01 6.317160e-01 #>  [71] 6.475525e-01 6.633462e-01 6.790869e-01 6.947641e-01 7.103666e-01 #>  [76] 7.258827e-01 7.412996e-01 7.566035e-01 7.717796e-01 7.868118e-01 #>  [81] 8.016824e-01 8.163716e-01 8.308579e-01 8.451169e-01 8.591214e-01 #>  [86] 8.728407e-01 8.862394e-01 8.992776e-01 9.119086e-01 9.240787e-01 #>  [91] 9.357248e-01 9.467726e-01 9.571346e-01 9.667067e-01 9.753661e-01 #>  [96] 9.829687e-01 9.893502e-01 9.943347e-01 9.977641e-01 9.995750e-01 #> [101] 1.000000e+00"},{"path":"https://genentech.github.io/phase1b/reference/qbetadiff.html","id":null,"dir":"Reference","previous_headings":"","what":"Beta difference Quantile Function ‚Äî qbetadiff","title":"Beta difference Quantile Function ‚Äî qbetadiff","text":"Calculates quantile Beta difference given probability.","code":""},{"path":"https://genentech.github.io/phase1b/reference/qbetadiff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beta difference Quantile Function ‚Äî qbetadiff","text":"","code":"qbetadiff(p, parY, parX, eps = .Machine$double.eps)"},{"path":"https://genentech.github.io/phase1b/reference/qbetadiff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beta difference Quantile Function ‚Äî qbetadiff","text":"p (number): vector probabilities parY (numeric): two parameters Y's Beta distribution (Treatment) parX (numeric): two parameters X's Beta distribution (Control) eps (number): lowest floating point number lower bound integration","code":""},{"path":"https://genentech.github.io/phase1b/reference/qbetadiff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Beta difference Quantile Function ‚Äî qbetadiff","text":"quantile values.","code":""},{"path":"https://genentech.github.io/phase1b/reference/qbetadiff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Beta difference Quantile Function ‚Äî qbetadiff","text":"","code":"# The following examples use these parameters: parX <- c(1, 52) parY <- c(5.5, 20.5)  # Calculate quantile when at there is at least 20% of difference. qbetadiff(   p = 0.2,   parY = parY,   parX = parX ) #> [1] 0.1228383"},{"path":"https://genentech.github.io/phase1b/reference/runShinyPhase1b.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch the ShinyPhase1b app ‚Äî runShinyPhase1b","title":"Launch the ShinyPhase1b app ‚Äî runShinyPhase1b","text":"Launch ShinyPhase1b app default web browser.","code":""},{"path":"https://genentech.github.io/phase1b/reference/runShinyPhase1b.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch the ShinyPhase1b app ‚Äî runShinyPhase1b","text":"","code":"runShinyPhase1b()"},{"path":"https://genentech.github.io/phase1b/reference/sumBetadiff.html","id":null,"dir":"Reference","previous_headings":"","what":"Mode and Credible Interval Calculation for The Difference between Two Beta Distributions ‚Äî sumBetadiff","title":"Mode and Credible Interval Calculation for The Difference between Two Beta Distributions ‚Äî sumBetadiff","text":"function summerize characters betadiff distribution dbetadiff","code":""},{"path":"https://genentech.github.io/phase1b/reference/sumBetadiff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mode and Credible Interval Calculation for The Difference between Two Beta Distributions ‚Äî sumBetadiff","text":"","code":"sumBetadiff(parY, parX, level = 0.9, cutB, cutW)"},{"path":"https://genentech.github.io/phase1b/reference/sumBetadiff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mode and Credible Interval Calculation for The Difference between Two Beta Distributions ‚Äî sumBetadiff","text":"parY two parameters Y's beta distribution (Treatment) parX two parameters X's beta distribution (Control) level credible interval cutB cutoff value upper bound cutW cutoff value lower bound","code":""},{"path":"https://genentech.github.io/phase1b/reference/sumBetadiff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mode and Credible Interval Calculation for The Difference between Two Beta Distributions ‚Äî sumBetadiff","text":"sumbetadiff gives mode, credible interval distribution function, along probabilities cutB cutW.","code":""},{"path":"https://genentech.github.io/phase1b/reference/sumBetadiff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mode and Credible Interval Calculation for The Difference between Two Beta Distributions ‚Äî sumBetadiff","text":"","code":"parX <- c(1, 52) parY <- c(5.5, 20.5) sumBetadiff(parX, parY, 0.9, cutB = 0.8, cutW = 0.2) #> $mode #> [1] -0.1704321 #>  #> $ci #> [1] -0.33643341 -0.07270616 #>  #> $go #> [1] 3.379515e-43 #>  #> $nogo #> [1] 0.9999999 #>"},{"path":"https://genentech.github.io/phase1b/reference/sumTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Return summary statistics under one response scenario ‚Äî sumTable","title":"Return summary statistics under one response scenario ‚Äî sumTable","text":"function calculate summary statistics specific response outcome scenario.","code":""},{"path":"https://genentech.github.io/phase1b/reference/sumTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return summary statistics under one response scenario ‚Äî sumTable","text":"","code":"sumTable(   thisResp,   TotalSample,   cut_B,   cut_W,   parX,   YPri = c(0.5, 0.5),   Round = 2 )"},{"path":"https://genentech.github.io/phase1b/reference/sumTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return summary statistics under one response scenario ‚Äî sumTable","text":"thisResp number responses TotalSample sample size cut_B meaningful improvement threshold: least cut_B (e.g. 15%) improvement cut_W poor improvement threshold: cut_W (e.g. 5%) improvement parX non-negative parameters beta distribution control (posterior) YPri non-negative parameters beta prior treatment, default Beta(0.5,0.5) Round Rounding output statistics","code":""},{"path":"https://genentech.github.io/phase1b/reference/sumTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return summary statistics under one response scenario ‚Äî sumTable","text":"vector results.","code":""},{"path":"https://genentech.github.io/phase1b/reference/sumTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return summary statistics under one response scenario ‚Äî sumTable","text":"","code":"sumTable(2, 25, parX = c(1, 52), cut_B = 0.2, cut_W = 0.05, YPri = c(1, 1)) #>               summaries #> # resp             2.00 #> obs ORR [%]        8.00 #> mode [%]           6.48 #> CI lower [%]       0.71 #> CI upper [%]      20.68 #> prob.go [%]        5.87 #> prob.nogo [%]     26.59  # for multiple response scenarios (e.g. 0 to 8 responses out of 25) summaries <- do.call(cbind, lapply(c(0:8), sumTable, TotalSample = 25, parX = c(1, 52), cut_B = 0.2, cut_W = 0.05)) summaries #>               summaries summaries summaries summaries summaries summaries #> # resp             0.00      1.00      2.00      3.00      4.00      5.00 #> obs ORR [%]        0.00      4.00      8.00     12.00     16.00     20.00 #> mode [%]           0.00      1.02      4.80      8.83     12.92     17.04 #> CI lower [%]      -4.55     -2.42     -0.24      2.03      4.55      7.27 #> CI upper [%]      17.51     13.05     18.83     24.07     28.97     33.64 #> prob.go [%]        0.05      0.74      3.79     11.58     25.23     43.17 #> prob.nogo [%]     93.39     66.49     36.46     16.09      6.00      1.98 #>               summaries summaries summaries #> # resp             6.00      7.00      8.00 #> obs ORR [%]       24.00     28.00     32.00 #> mode [%]          21.18     25.32     29.47 #> CI lower [%]      10.17     13.20     16.37 #> CI upper [%]      38.13     42.46     46.67 #> prob.go [%]       61.70     77.26     88.13 #> prob.nogo [%]      0.59      0.17      0.04"},{"path":"https://genentech.github.io/phase1b/news/index.html","id":"phase1b-100","dir":"Changelog","previous_headings":"","what":"phase1b 1.0.0","title":"phase1b 1.0.0","text":"Initial public release package.","code":""}]
